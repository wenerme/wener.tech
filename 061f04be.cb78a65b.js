(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{557:function(n,e,t){"use strict";t.d(e,"a",(function(){return l})),t.d(e,"b",(function(){return b}));var r=t(0),o=t.n(r);function c(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){c(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},c=Object.keys(n);for(r=0;r<c.length;r++)t=c[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(r=0;r<c.length;r++)t=c[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var s=o.a.createContext({}),u=function(n){var e=o.a.useContext(s),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},l=function(n){var e=u(n.components);return o.a.createElement(s.Provider,{value:e},n.children)},f={inlineCode:"code",wrapper:function(n){var e=n.children;return o.a.createElement(o.a.Fragment,{},e)}},m=o.a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,c=n.originalType,i=n.parentName,s=p(n,["components","mdxType","originalType","parentName"]),l=u(t),m=r,b=l["".concat(i,".").concat(m)]||l[m]||f[m]||c;return t?o.a.createElement(b,a(a({ref:e},s),{},{components:t})):o.a.createElement(b,a({ref:e},s))}));function b(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var c=t.length,i=new Array(c);i[0]=m;var a={};for(var p in e)hasOwnProperty.call(e,p)&&(a[p]=e[p]);a.originalType=n,a.mdxType="string"==typeof n?n:r,i[1]=a;for(var s=2;s<c;s++)i[s]=t[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},72:function(n,e,t){"use strict";t.r(e),t.d(e,"frontMatter",(function(){return i})),t.d(e,"metadata",(function(){return a})),t.d(e,"rightToc",(function(){return p})),t.d(e,"default",(function(){return u}));var r=t(2),o=t(7),c=(t(0),t(557)),i={id:"tinc-conf",title:"Tinc \u914d\u7f6e"},a={unversionedId:"ops/network/private/tinc-conf",id:"ops/network/private/tinc-conf",isDocsHomePage:!1,title:"Tinc \u914d\u7f6e",description:"Tinc \u914d\u7f6e",source:"@site/contents/tricks/ops/network/private/tinc-conf.md",slug:"/ops/network/private/tinc-conf",permalink:"/notes/ops/network/private/tinc-conf",version:"current"},p=[{value:"\u914d\u7f6e\u9879",id:"\u914d\u7f6e\u9879",children:[]}],s={rightToc:p};function u(n){var e=n.components,t=Object(o.a)(n,["components"]);return Object(c.b)("wrapper",Object(r.a)({},s,t,{components:e,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"tinc-\u914d\u7f6e"},"Tinc \u914d\u7f6e"),Object(c.b)("h2",{id:"\u914d\u7f6e\u9879"},"\u914d\u7f6e\u9879"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.tinc-vpn.org/documentation-1.1/tinc.conf.5"}),"tinc.conf.5"))),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-ini"}),"# The symmetric cipher algorithm used to encrypt UDP packets. \u9ed8\u8ba4 blowfish\n# \u68c0\u6d4b CPU \u662f\u5426\u652f\u6301 aes\n# grep aes /proc/cpuinfo --color auto\n# SHA1 HMAC \n# \u5bf9\u542f\u7528\u4e86 ExperimentalProtocol \u4e0d\u751f\u6548\nCipher = aes-128-cbc\n\n# \u542f\u7528\u540e, \u4f1a\u5c1d\u8bd5\u4f7f\u7528 SPTPS \u534f\u8bae, key \u4ea4\u6362\u4f1a\u4f7f\u7528 Ephemeral ECDH, \u4f1a\u4f7f\u7528 Ed25519 \u4f5c\u4e3a\u6388\u6743, \u800c\u4e0d\u662f RSA, \u56e0\u6b64\u9700\u8981\u5148\u751f\u6210 Ed25519\nExperimentalProtocol = yes\n\n# \u5f71\u54cd\u76d1\u542c\u548c\u5916\u90e8 sockets \u5305, any \u4f1a\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u521b\u5efa ipv4 \u548c ipv6\n# ipv4 | ipv6 | any\nAddressFamily = any\n\n# \u5982\u679c\u542f\u7528, \u4f1a\u81ea\u52a8\u5c1d\u8bd5\u4e0e\u5176\u4ed6\u8282\u70b9\u5efa\u7acb meta \u94fe\u63a5, \u800c\u4e0d\u9700\u8981\u8bbe\u7f6e ConnectTo\n# \u4e0d\u80fd\u94fe\u63a5 Port=0 \u7684\u8282\u70b9 - \u7cfb\u7edf\u968f\u673a\u7aef\u53e3\n# \u8bd5\u9a8c\u9636\u6bb5\n# yes | no\nAutoConnect = yes\n\n# \u8bbe\u7f6e\u5e7f\u64ad\u5305\u53d1\u5230\u5176\u4ed6\u8282\u70b9\u7684\u65b9\u5f0f, \u6240\u6709\u8282\u70b9\u9700\u8981\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f, \u5426\u5219\u53ef\u80fd\u4f1a\u4ea7\u751f\u8def\u7531\u5faa\u73af\n# no \u4e0d\u53d1\u9001\u5e7f\u64ad\u5305 \n# mst \u4f7f\u7528 Minimum Spanning Tree, \u4fdd\u8bc1\u53d1\u5f80\u6bcf\u4e2a\u8282\u70b9\n# direct \u53ea\u53d1\u9001\u7ed9\u76f4\u63a5\u8bbf\u95ee\u7684\u8282\u70b9, \u4ece\u5176\u4ed6\u8282\u70b9\u63a5\u6536\u5230\u7684\u4e0d\u8f6c\u53d1. \u5982\u679c\u8bbe\u7f6e\u4e86 IndirectData, \u5e7f\u64ad\u5305\u4e5f\u4f1a\u53d1\u9001\u7ed9\u6709 meta \u94fe\u63a5\u7684\u8282\u70b9\n# \u8bd5\u9a8c\u9636\u6bb5\n# no | mst | direct\nBroadcast = mst\n\n# \u8f6c\u53d1\u7b56\u7565\n# \u5b9e\u9a8c\u9636\u6bb5\n# off \u4e0d\u8f6c\u53d1\n# internal \u5185\u90e8\u8f6c\u53d1\n# kernel \u5305\u53d1\u5f80 TUN/TAP \u8bbe\u5907, \u4ea4\u7531\u5185\u6838\u8f6c\u53d1, \u6027\u80fd\u66f4\u4f4e, \u4f46\u80fd\u4f7f\u7528\u5185\u6838\u7684\u8def\u7531\u529f\u80fd\nForwarding = internal\n\n# \u5c1d\u8bd5\u53d1\u73b0\u672c\u673a\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\n# \u5141\u8bb8\u4e0e\u672c\u5730\u8282\u70b9\u5730\u5740\u5efa\u7acb\u76f4\u63a5\u8fde\u63a5\n# \u76ee\u524d, \u672c\u5730\u53d1\u73b0\u673a\u5236\u662f\u901a\u8fc7\u5728 UDP \u53d1\u73b0\u9636\u6bb5\u53d1\u9001\u672c\u5730\u5730\u5740\u7684\u65b9\u5f0f\nLocalDiscovery = yes\n\n# \u53ea\u5141\u8bb8 /etc/tinc/NETNAME/hosts/ \u4e0b\u7684 Subnet \u4fe1\u606f\n# \u4f8b\u5982 A -> B -> C - C \u4e0d\u4f1a\u5b66\u4e60\u5230 A \u7684\u5b50\u7f51\u4fe1\u606f\n# \u5b9e\u9a8c\u9636\u6bb5\nStrictSubnets = no\n\n# \u4e0d\u4f1a\u8f6c\u53d1\u5176\u4ed6\u8282\u70b9\u95f4\u7684\u4fe1\u606f\uff0c /etc/tinc/NETNAME/hosts/ , \u9690\u6027\u6307\u5b9a StrictSubnets\n# \u5b9e\u9a8c\u9636\u6bb5\nTunnelServer = no\n\n# UDP \u5305\u7684\u6458\u8981\u7b97\u6cd5, \u53ef\u4f7f\u7528 LibreSSL \u6216 OpenSSL \u652f\u6301\u7684\u7b97\u6cd5, \u6307\u5b9a none \u53ef\u5173\u95ed\u5305\u9a8c\u8bc1.\n# \u5bf9\u4f7f\u7528 ExperimentalProtocol \u7684\u8282\u70b9\u4e0d\u751f\u6548\nDigest = sha1\n\n# \u8282\u70b9\u521d\u59cb\u8def\u5f84 MTU - Path MTU\n# 1514\nPMTU = 1514\n# \u81ea\u52a8\u53d1\u73b0 MTU\nPMTUDiscovery = yes\n# \u53d1\u9001\u53d1\u73b0 MTU \u6d88\u606f\u7684\u95f4\u9694\nMTUInfoInterval = 5\n")))}u.isMDXComponent=!0}}]);