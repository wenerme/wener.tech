(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{1096:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=a.a.createContext({}),p=function(e){var n=a.a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.a.createElement(u.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(t),m=r,d=s["".concat(l,".").concat(m)]||s[m]||b[m]||i;return t?a.a.createElement(d,o(o({ref:n},u),{},{components:t})):a.a.createElement(d,o({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=t[u];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},333:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return o})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(3),a=t(8),i=(t(0),t(1096)),l={title:"coturn"},o={unversionedId:"service/network/coturn",id:"service/network/coturn",isDocsHomePage:!1,title:"coturn",description:"- coturn/coturn",source:"@site/notes/service/network/coturn.md",slug:"/service/network/coturn",permalink:"/notes/service/network/coturn",editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/network/coturn.md",version:"current",sidebar:"docs",previous:{title:"Avahi",permalink:"/notes/service/network/avahi"},next:{title:"curl",permalink:"/notes/service/network/curl"}},c=[{value:"\u914d\u7f6e",id:"\u914d\u7f6e",children:[]}],u={toc:c};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://github.com/coturn/coturn"},"coturn/coturn"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"BSD-3, C, TURN/STUN Server"),Object(i.b)("li",{parentName:"ul"},"\u5b9e\u73b0\u4e86\u975e\u5e38\u591a\u7684\u89c4\u8303 - \u6bd4 pion/turn \u5b9e\u73b0\u66f4\u591a"),Object(i.b)("li",{parentName:"ul"},"\u652f\u6301\u534f\u8bae UDP, TCP, TLS, DTLS, SCTP"),Object(i.b)("li",{parentName:"ul"},"\u652f\u6301\u4e2d\u7ee7\u534f\u8bae UDP, TCP"),Object(i.b)("li",{parentName:"ul"},"\u652f\u6301\u7528\u6237\u6570\u636e\u5e93 SQLite, MySQL, PostgreSQL, Redis, MongoDB"),Object(i.b)("li",{parentName:"ul"},"prometheus metrics :9641"),Object(i.b)("li",{parentName:"ul"},"\u652f\u6301\u591a\u5e73\u53f0- Linux, BSD, macOS, Windows/cygwin"))),Object(i.b)("li",{parentName:"ul"},"\u53c2\u8003",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.webrtc-experiment.com/docs/TURN-server-installation-guide.html"},"TURN server installation Guide"))))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"# macOS\nbrew install coturn\n# AlpineLinux\napk add coturn\n\nturnserver\nturnutils_stunclient 127.0.0.1\n")),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"cli"),Object(i.b)("th",{parentName:"tr",align:null},"desc"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnadmin -> turnserver"),Object(i.b)("td",{parentName:"tr",align:null},"TURN relay administration tool - \u7ba1\u7406 Server \u8d26\u6237")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnserver"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnutils_natdiscovery"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnutils_oauth"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnutils_peer"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnutils_stunclient"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"turnutils_uclient"),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"/etc/init.d/turnserver"),Object(i.b)("td",{parentName:"tr",align:null},"OpenRC init")))),Object(i.b)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-conf"},'# \u76d1\u542c\u7aef\u53e3\nlistening-port=3478\n\ntls-listening-port=5349\n\n# \u7aef\u53e3\u7684\u989d\u5916\u76d1\u542c\u7aef\u53e3\n# alt-listening-port<port>  <port>\n\n# \u76d1\u542c\u5730\u5740\nlistening-ip=0.0.0.0\n\n# \u8f85\u52a9\u5730\u5740\n# aux-server=<ip:port>\n\n# \u4e2d\u7ee7\u5730\u5740\n# relay-ip=<ip>\n\n# \u5916\u90e8\u5730\u5740\n# external-ip=<public-ip[/private-ip]>\n\n# \u5141\u8bb8\u672c\u5730\u5730\u5740\nallow-loopback-peers\n# \u4e0d\u5141\u8bb8\u5e7f\u64ad\u5730\u5740 - 224.0.0.0, FFXX:*\nno-multicast-peers\n\n# UDP \u7aef\u53e3\u8303\u56f4\nmin-port=49152\nmax-port=65535\n\n# Production mode - \u9690\u85cf\u670d\u52a1\u7aef\u7248\u672c\nprod\n\n# \u65e0\u8ba4\u8bc1 - \u5141\u8bb8\u533f\u540d\u8bbf\u95ee\nno-auth\n\n# \u7528\u6237\u8d26\u53f7\n# user=<user:pwd>\n# \u7528\u6237\u57df\n# realm=<realm>\n\n# \u8981\u6c42\u8bf7\u6c42\u7684 ORIGIN \u76f8\u540c\ncheck-origin-consistency\n\n# \u5355\u7528\u6237\u914d\u989d\n# user-quota=<number>\n# \u603b\u914d\u989d\n# total-quota=<number>\n\n# TURN \u9650\u6d41\n# max-bps=<number>\n# \u670d\u52a1\u5668\u6d41\u91cf\n# bps-capacity=<number>\n\n# SQLite DB\n# db=/var/db/turndb\n\n# use-auth-secret\n# static-auth-secret=<secret>\n# \u9ed8\u8ba4\u4e3a realm \u540d\u5b57\n# server-name\n# \u542f\u7528 oAuth\noauth\n\n# TLS \u76f8\u5173\u914d\u7f6e\n# cert=<filename>\n# pkey=<filename>\n# pkey-pwd=<password>\n# cipher-list=<"cipher-string">\n# CA-file=<filename>\n# ec-curve-name=<curve-name>\n\nno-udp\nno-udp\nno-tls\nno-dtls\nno-udp-relay\nno-tcp-relay\n\n# \u6587\u4ef6\u540d\u53ef\u4ee5\u4f7f\u7528 stdout \u548c -\n# log-file=<filename>\nno-stdout-log\nsyslog\n\n# \u5931\u6548\u65f6\u95f4 - \u79d2\nstale-nonce=600\nmax-allocate-lifetime=3600\nchannel-lifetime=600\npermission-lifetime=300\n\nstun-only\nno-stun\n# alternate-server=<ip:port>\n# tls-alternate-server=<ip:port>\n\n# stun \u8981\u6c42\u9a8c\u8bc1\nsecure-stun\n\nrest-api-separator=:\n\nallowed-peer-ip=<ip[-ip]>\ndenied-peer-ip=<ip[-ip]>\n\n; pidfile <"pid-file-name">\n\n; proc-user <user-name>\n; proc-group <group-name>\n\n# \u652f\u6301 MICE - Mobility with ICE\nmobility\n\nkeep-address-family\n\nno-cli\ncli-ip=127.0.0.1\ncli-port=5766\ncli-password=<password>\n\ncli-max-output-sessions\n\nweb-admin\nweb-admin-ip=127.0.0.1\nweb-admin-port=8080\nweb-admin-listen-on-workers\n\n; server-relay\n')),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"/etc/turnserver.conf")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-conf"},"# you can listen ports 3478 and 5349 instead of 80/443\nlistening-port=80\ntls-listening-port=443\n\nlistening-ip=your-ip-address\n\nrelay-ip=your-ip-address\nexternal-ip=your-ip-address\n\nrealm=yourdomain.com\nserver-name=yourdomain.com\n\nlt-cred-mech\nuserdb=/etc/turnuserdb.conf\n\n# use real-valid certificate/privatekey files\ncert=/etc/ssl/certificate.pem\npkey=/etc/ssl/private.key\n\nno-stdout-log\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"/etc/turnuserdb.conf")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-conf"},"# pass\nyourName:yourPassword\n\n# db\nuserdb=/var/lib/turn/turndb\n\n# in this case, please add following:\n# lt-cred-mech             # remove or comment this one\noauth                      # add this\nuser=youruser:yourpassword # add this\n\n# source: askubuntu.com/a/819264\n")))}p.isMDXComponent=!0}}]);