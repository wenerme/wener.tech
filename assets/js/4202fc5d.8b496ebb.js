"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[61463],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),p=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return r.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,f=m["".concat(o,".").concat(d)]||m[d]||c[d]||i;return t?r.createElement(f,l(l({ref:n},u),{},{components:t})):r.createElement(f,l({ref:n},u))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},12668:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),l=["components"],s={title:"coturn"},o=void 0,p={unversionedId:"service/network/coturn",id:"service/network/coturn",isDocsHomePage:!1,title:"coturn",description:"- coturn/coturn",source:"@site/notes/service/network/coturn.md",sourceDirName:"service/network",slug:"/service/network/coturn",permalink:"/notes/service/network/coturn",editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/network/coturn.md",tags:[],version:"current",frontMatter:{title:"coturn"},sidebar:"docs",previous:{title:"Avahi",permalink:"/notes/service/network/avahi"},next:{title:"curl",permalink:"/notes/service/network/curl"}},u=[{value:"\u914d\u7f6e\u793a\u4f8b",id:"\u914d\u7f6e\u793a\u4f8b",children:[{value:"turn",id:"turn",children:[]}]},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",children:[]},{value:"TURN REST API",id:"turn-rest-api",children:[]},{value:"server stun returned an error with code=701",id:"server-stun-returned-an-error-with-code701",children:[]},{value:"self-signed certificates for Turn Server",id:"self-signed-certificates-for-turn-server",children:[]},{value:"incoming packet CREATE_PERMISSION processed, error 443: Peer Address Family Mismatch (4)",id:"incoming-packet-create_permission-processed-error-443-peer-address-family-mismatch-4",children:[]}],c={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/coturn/coturn"},"coturn/coturn"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"BSD-3, C, RFC 3489/5389/5766/5780/6062/6156 STUN/TURN Server"),(0,i.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u4e86\u975e\u5e38\u591a\u7684\u89c4\u8303 - \u6bd4 pion/turn \u5b9e\u73b0\u66f4\u591a"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u534f\u8bae UDP, TCP, TLS, DTLS, SCTP"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u4e2d\u7ee7\u534f\u8bae UDP, TCP"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u7528\u6237\u6570\u636e\u5e93 SQLite, MySQL, PostgreSQL, Redis, MongoDB"),(0,i.kt)("li",{parentName:"ul"},"prometheus metrics :9641",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u6784\u5efa\u4f9d\u8d56 ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/digitalocean/prometheus-client-c"},"digitalocean/prometheus-client-c")))),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u591a\u5e73\u53f0- Linux, BSD, macOS, Windows/cygwin"))),(0,i.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://www.webrtc-experiment.com/docs/TURN-server-installation-guide.html"},"TURN server installation Guide")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/"},"Trickle ICE"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u6d4b\u8bd5\u5de5\u5177"),(0,i.kt)("li",{parentName:"ul"},"\u6ce8\u610f\u9700\u8981\u5199\u7aef\u53e3 \u4f8b\u5982 3478"),(0,i.kt)("li",{parentName:"ul"},"turn \u9700\u8981\u6388\u6743\u4fe1\u606f"),(0,i.kt)("li",{parentName:"ul"},"turn \u6dfb\u52a0 ",(0,i.kt)("inlineCode",{parentName:"li"},"?transport=tcp")," \u4f7f\u7528 TCP \u534f\u8bae"),(0,i.kt)("li",{parentName:"ul"},"turn \u4fee\u6539\u7aef\u53e3\u540e udp \u4f3c\u4e4e\u4e0d\u901a"))),(0,i.kt)("li",{parentName:"ul"},"bigbluebutton ",(0,i.kt)("a",{parentName:"li",href:"https://docs.bigbluebutton.org/admin/setup-turn-server.html"},"Configure TURN")),(0,i.kt)("li",{parentName:"ul"},"nextcloud-talk ",(0,i.kt)("a",{parentName:"li",href:"https://nextcloud-talk.readthedocs.io/en/turn_doc/TURN/"},"Configuring coTURN")))),(0,i.kt)("li",{parentName:"ul"},"SQLite DB \u4f4d\u7f6e /var/lib/turn/turndb, /usr/local/var/db/turndb")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"chrome turn \u4e0d\u652f\u6301\u4e09\u65b9\u6388\u6743 - \u4e0d\u652f\u6301 oauth",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bugs.chromium.org/p/webrtc/issues/detail?id=4907"},"chromium/webrtc#4907")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/coturn/coturn/issues/448"},"coturn/coturn#448")))),(0,i.kt)("li",{parentName:"ul"},"webrtc \u672c\u8eab\u6ca1\u6709 realm \u6982\u5ff5 - \u662f\u901a\u8fc7\u6362\u53d6 token \u540e\u5305\u542b\u4e86 realm",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"realm \u65e0\u610f\u4e49 ",(0,i.kt)("a",{parentName:"li",href:"https://mailarchive.ietf.org/arch/msg/tram/rKb19tMU71Wn4BootKOOtIi0z54/"},"stun-origin status is it dead?")),(0,i.kt)("li",{parentName:"ul"},"TLS SNI \u53ef\u7528\u4e8e\u865a\u62df\u4e3b\u673a"))),(0,i.kt)("li",{parentName:"ul"},"\u63a8\u8350\u4f7f\u7528 TURN REST API \u65b9\u5f0f\u6388\u6743")))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"port"),(0,i.kt)("th",{parentName:"tr",align:null},"conf"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"3478"),(0,i.kt)("td",{parentName:"tr",align:null},"listening-port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"3479"),(0,i.kt)("td",{parentName:"tr",align:null},"alt-listening-port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"5934"),(0,i.kt)("td",{parentName:"tr",align:null},"tls-listening-port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"5935"),(0,i.kt)("td",{parentName:"tr",align:null},"alt-tls-listening-port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"49152"),(0,i.kt)("td",{parentName:"tr",align:null},"min-port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"65535"),(0,i.kt)("td",{parentName:"tr",align:null},"max-port")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"5766"),(0,i.kt)("td",{parentName:"tr",align:null},"cli-port")))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"alt \u7aef\u53e3\u662f\u6807\u51c6\u7aef\u53e3+1")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"protocol"),(0,i.kt)("th",{parentName:"tr",align:null},"port"),(0,i.kt)("th",{parentName:"tr",align:null},"desc"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"stun"),(0,i.kt)("td",{parentName:"tr",align:null},"3478/udp"),(0,i.kt)("td",{parentName:"tr",align:null},"STUN")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"stun"),(0,i.kt)("td",{parentName:"tr",align:null},"3478/tcp"),(0,i.kt)("td",{parentName:"tr",align:null},"STUN/TLS - de-multiplex")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turn"),(0,i.kt)("td",{parentName:"tr",align:null},"3478/tcp"),(0,i.kt)("td",{parentName:"tr",align:null},"TURN over TCP")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turn"),(0,i.kt)("td",{parentName:"tr",align:null},"3478/udp"),(0,i.kt)("td",{parentName:"tr",align:null},"TURN over UDP")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"stun-behavior"),(0,i.kt)("td",{parentName:"tr",align:null},"3478/tcp"),(0,i.kt)("td",{parentName:"tr",align:null},"STUN Behavior Discovery over TCP")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"stun-behavior"),(0,i.kt)("td",{parentName:"tr",align:null},"3478/udp"),(0,i.kt)("td",{parentName:"tr",align:null},"STUN Behavior Discovery over UDP")))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"PeerConnection \u53c2\u6570")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "iceServers": [\n    { "urls": ["stun:stun.l.google.com:19302"] },\n    { "urls": ["turn:192.168.1.2:3478"], "username": "test", "credential": "test" }\n  ],\n  "iceTransportPolicy": "all",\n  "iceCandidatePoolSize": "0"\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# macOS\nbrew install coturn\n# AlpineLinux\napk add coturn\n\nturnserver\nturnutils_stunclient 127.0.0.1\n\n# \u5982\u679c\u6709\u5916\u7f51 IP\nturnserver -X $(curl icanhazip.com) -a -f -r example\n\n# \u6d4b\u8bd5\u670d\u52a1\nsudo turnadmin -a -r example -u test -p test\nsudo turnadmin -A -u admin -p admin\nsudo turnserver -L 0.0.0.0 -a -f -r example -v --web-admin --web-admin-ip 0.0.0.0 --cli-password test\n")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"cli"),(0,i.kt)("th",{parentName:"tr",align:null},"desc"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnadmin -> turnserver"),(0,i.kt)("td",{parentName:"tr",align:null},"TURN relay administration tool - \u7ba1\u7406 Server \u8d26\u6237")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnserver"),(0,i.kt)("td",{parentName:"tr",align:null})),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnutils_natdiscovery"),(0,i.kt)("td",{parentName:"tr",align:null},"RFC5780 nat \u53d1\u73b0")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnutils_oauth"),(0,i.kt)("td",{parentName:"tr",align:null},"\u751f\u6210\uff0c\u6821\u9a8c access_token")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnutils_peer"),(0,i.kt)("td",{parentName:"tr",align:null},"UDP echo \u540e\u7aef\u670d\u52a1, \u7528\u4e8e\u914d\u5408 turnutils_uclient \u6d4b\u8bd5")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnutils_rfc5769check"),(0,i.kt)("td",{parentName:"tr",align:null},"\u68c0\u6d4b STUN/TURN \u5b9e\u73b0\u51c6\u786e")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnutils_stunclient"),(0,i.kt)("td",{parentName:"tr",align:null},"STUN RFC 5389 UDP \u5ba2\u6237\u7aef")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"turnutils_uclient"),(0,i.kt)("td",{parentName:"tr",align:null},"\u6d4b\u8bd5\u5e94\u7528")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"/etc/init.d/turnserver"),(0,i.kt)("td",{parentName:"tr",align:null},"OpenRC init")))),(0,i.kt)("h2",{id:"\u914d\u7f6e\u793a\u4f8b"},"\u914d\u7f6e\u793a\u4f8b"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"/etc/turnserver.conf")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-conf"},"# you can listen ports 3478 and 5349 instead of 80/443\nlistening-port=80\ntls-listening-port=443\n\nlistening-ip=your-ip-address\n\nrelay-ip=your-ip-address\nexternal-ip=your-ip-address\n\nrealm=yourdomain.com\nserver-name=yourdomain.com\n\nlt-cred-mech\nuserdb=/etc/turnuserdb.conf\n\ncert=/etc/ssl/certificate.pem\npkey=/etc/ssl/private.key\n\nno-stdout-log\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"/etc/turnuserdb.conf")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-conf"},"# pass\nyourName:yourPassword\n\n# db\nuserdb=/var/lib/turn/turndb\n\n# in this case, please add following:\n# lt-cred-mech             # remove or comment this one\noauth                      # add this\nuser=youruser:yourpassword # add this\n\n# source: askubuntu.com/a/819264\n")),(0,i.kt)("h3",{id:"turn"},"turn"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},'# \u5efa\u8bae\u4fee\u6539\n#external-ip=\n#listening-ip=0.0.0.0\n#listening-port=\n#tls-listening-port=\n# \u770b\u60c5\u51b5\nweb-admin\nweb-admin-ip=127.0.0.1\n\nrealm=example.com\n# openssl rand -hex 16\nstatic-auth-secret = <secret_value>\n\nfingerprint\nlt-cred-mech\nuse-auth-secret\n\n# \u9ed8\u8ba4 - \u4f7f\u7528 selfsign \u6216 acme\n# cert=turn_server_cert.pem\n# pkey=turn_server_pkey.pem\n# From https://ssl-config.mozilla.org/ Intermediate, openssl 1.1.0g, 2020-01\ncipher-list="ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"\n# openssl dhparam -dsaparam  -out /etc/coturn/dhp.pem 2048\ndh-file=/etc/coturn/dhp.pem\n\nkeep-address-family\nno-cli\nno-tlsv1\nno-tlsv1_1\nno-software-attribute\n\n# Block connections to IP ranges which shouldn\'t be reachable\n# no-loopback-peers\nno-multicast-peers\n\n# IPv4 Private-Use\ndenied-peer-ip=10.0.0.0-10.255.255.255\ndenied-peer-ip=172.16.0.0-172.31.255.255\ndenied-peer-ip=192.168.0.0-192.168.255.255\n# Other IPv4 Special-Purpose addresses\ndenied-peer-ip=100.64.0.0-100.127.255.255\ndenied-peer-ip=169.254.0.0-169.254.255.255\ndenied-peer-ip=192.0.0.0-192.0.0.255\ndenied-peer-ip=192.0.2.0-192.0.2.255\ndenied-peer-ip=198.18.0.0-198.19.255.255\ndenied-peer-ip=198.51.100.0-198.51.100.255\ndenied-peer-ip=203.0.113.0-203.0.113.255\n# IPv6 Unique-Local\ndenied-peer-ip=fc00::-fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n# IPv6 Link-Local Unicast\ndenied-peer-ip=fe80::-febf:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n# Other IPv6 Special-Purpose assignments\ndenied-peer-ip=::ffff:0:0-::ffff:ffff:ffff\ndenied-peer-ip=64:ff9b::-64:ff9b::ffff:ffff\ndenied-peer-ip=64:ff9b:1::-64:ff9b:1:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2001::-2001:1ff:ffff:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2001:db8::-2001:db8:ffff:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2002::-2002:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n')),(0,i.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u914d\u7f6e\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\uff0c\u90e8\u5206\u53c2\u6570\u6709\u77ed\u53c2\u6a21\u5f0f"),(0,i.kt)("li",{parentName:"ul"},"\u63a8\u8350 TCP SSLv3, TLS 1.0,1.1,1.2\u3001UDP DTLSv1"),(0,i.kt)("li",{parentName:"ul"},"-c \u914d\u7f6e\u6587\u4ef6 - \u9ed8\u8ba4 turnserver.conf"),(0,i.kt)("li",{parentName:"ul"},"-n \u4e0d\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/coturn/coturn/blob/master/examples/etc/turnserver.conf"},"examples/etc/turnserver.conf")),(0,i.kt)("li",{parentName:"ul"},"use-auth-secret \u4e0e lt-cred-mech \u51b2\u7a81",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u63a8\u8350 use-auth-secret\uff0c\u4f46\u8981\u590d\u6742\u4e00\u70b9"))),(0,i.kt)("li",{parentName:"ul"},"AlpineLinux turndb /var/lib/coturn/turndb"),(0,i.kt)("li",{parentName:"ul"},"prometheus \u9700\u8981\u542f\u7528\u4e86\u6a21\u5757\u624d\u80fd\u4f7f\u7528"),(0,i.kt)("li",{parentName:"ul"},"4.5.1 no-loopback-peers \u66ff\u6362\u4e3a allow-loopback-peers"),(0,i.kt)("li",{parentName:"ul"},"4.5.3 keep-address-family \u66ff\u6362\u4e3a allocation-default-address-family")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-conf"},'# -d \u76d1\u542c\u8bbe\u5907 - \u4e0d\u5efa\u8bae\u4f7f\u7528 - linux \u7684 interface\n# listening-device=\n# -p \u76d1\u542c\u7aef\u53e3\n# \u4e5f\u80fd\u63a5\u6536 TLS & DTLS \u4f1a\u8bdd\nlistening-port=3478\n# TLS & DTLS\n# \u4e5f\u80fd\u63a5\u6536 "plain" TCP & UDP \u4f1a\u8bdd - \u4f1a\u81ea\u52a8\u8bc6\u522b\ntls-listening-port=5349\n\n# \u7aef\u53e3\u7684\u989d\u5916\u76d1\u542c\u7aef\u53e3 - STUN CHANGE_REQUEST - RFC 5780\n# 0=listening-port+1\nalt-listening-port=0\nalt-tls-listening-port=0\n\n# tcp proxy \u534f\u8bae - https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\n# \u7528\u4e8e\u652f\u6301\u8d1f\u8f7d\u5747\u8861\n# tcp-proxy-port=\n\n# -L \u76d1\u542c\u5730\u5740\uff0c\u652f\u6301\u591a\u4e2a\n# \u9ed8\u8ba4\u76d1\u542c \u6240\u6709 IPv4 \u548c IPv6\n# listening-ip=0.0.0.0\n\n# \u8f85\u52a9\u670d\u52a1\u5730\u5740\n# \u8f85\u52a9\u670d\u52a1\u4e0d\u652f\u6301 alternative ports, \u4e0d\u652f\u6301 CHANGE REQUEST\n# aux-server = <ip:port>\n\n# \u4ec5\u7528\u4e8e\u65e7\u7684 Linux - \u81ea\u52a8\u4e0e auxiliary \u670d\u52a1\u5747\u8861 UDP \u6d41\u91cf\nudp-self-balance\n\n# -i \u4e2d\u7ee7\u8bbe\u5907 - \u4e0d\u63a8\u8350\n# relay-device = <device-name>\n# -E \u4e2d\u7ee7\u5730\u5740\n# relay-ip = <ip>\n\n# -X \u5916\u90e8\u5730\u5740\n# TURN Server \u5171\u79c1\u5730\u5740\u6620\u5c04\n# \u5982\u679c\u53ea\u6307\u5b9a\u4e86 public \u5730\u5740\uff0c\u5219\u6240\u6709 relay \u90fd\u4f1a\u4f7f\u7528\u8be5\u5730\u5740 - one single relay, no RFC5780 functionality is required\n# \u5730\u5740\u4f1a\u8fd4\u56de\u4e3a XOR-RELAYED-ADDRESS \u5b57\u6bb5\n# external-ip = <public-ip[/private-ip]>\n\n# \u5141\u8bb8\u672c\u5730\u5730\u5740 - 127.x.x.x,::1\nallow-loopback-peers\n# \u4e0d\u5141\u8bb8\u5e7f\u64ad\u5730\u5740 - 224.0.0.0, FFXX:*\nno-multicast-peers\n# -m \u4e2d\u7ee7\u7ebf\u7a0b\u6570\u91cf - 0 \u4e3a\u5355\u7ebf\u7a0b\u6a21\u5f0f, \u9ed8\u8ba4\u4f1a\u4f7f\u7528 cpu \u6570\n# relay-threads = <number>\n\n# \u4e2d\u7ee7 UDP \u7aef\u53e3\u8303\u56f4\nmin-port=49152\nmax-port=65535\n\n# Production mode - \u9690\u85cf\u670d\u52a1\u7aef\u7248\u672c\n# \u4e4b\u524d\u662f prod\nno-software-attribute\n# -f \u5728 TURN \u6d88\u606f\u4e2d\u6dfb\u52a0\u6307\u7eb9\nfingerprint\n# -a long-term credential mechanism\nlt-cred-mech\n# \u65e0\u8ba4\u8bc1 - \u5141\u8bb8\u533f\u540d\u8bbf\u95ee\nno-auth\n# \u7528\u6237\u8d26\u53f7\n# user = <user:pwd>\n# \u9ed8\u8ba4\u57df\n# realm = <realm>\n# \u8981\u6c42\u8bf7\u6c42\u7684 ORIGIN \u76f8\u540c\ncheck-origin-consistency\n\n# -q \u5355\u7528\u6237\u914d\u989d - \u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u5e76\u53d1\n# user-quota = <number>\n# -Q \u603b\u914d\u989d - \u5168\u5c40\u5e76\u53d1\u9650\u5236\n# total-quota = <number>\n# TURN \u9650\u6d41 - sessoion bytes-per-second\n# max-bps = <number>\n# \u670d\u52a1\u5668\u6d41\u91cf - bytes-per-second\n# bps-capacity = <number>\n\n# -b,--userdb SQLite DB\n# /usr/local/var/db/turndb, /var/lib/turn/turndb.\n# db=/var/db/turndb\n# userdb=/var/db/turndb\n\n# -e, --psql-userdb, --sql-userdb\n# http://www.postgresql.org/docs/9.2/static/libpq-connect.html#LIBPQ-CONNSTRING\n# psql-userdb = "host=<host> dbname=<database-name> user=<database-user> password=<database-user-password> connect_timeout=30"\n\n# -N\n# host=<ip-addr> dbname=<db-number> password=<database-user-password> port=<db-port> connect_timeout=<seconds>\n# redis-userdb = <connection-string\n# -O redisl \u7edf\u8ba1\u548c\u72b6\u6001 db\uff0c\u652f\u6301\u4e8b\u4ef6\u8ba2\u9605\n# redis-statsdb = <connection-string>\n\n# TURN REST API\n#\n# Time Limited Long Term Credential\n#   sets a special authorization option that is based upon authentication secret\n# \u7528\u4e8e\u652f\u6301 TURN Server REST API\n# usercombo -> "timestamp:userid"\n# turn user -> usercombo\n# turn password -> base64(hmac(secret key, usercombo))\n#\n# allows TURN credentials to be accounted for a specific user id\n# turning on secret-based authentication - static-auth-secret \u6216 turn_secret \u8868\n# \u4f9d\u8d56 lt-cred-mech\uff0c\u4f1a\u4fee\u6539\u90e8\u5206\u914d\u7f6e\n# use-auth-secret\n# \u9759\u6001 secret - \u9ed8\u8ba4\u4f7f\u7528 turn_secret \u8868\u6570\u636e\n# static-auth-secret = <secret>\n# \u7528\u4e8e oAuth \u6d41\u7a0b - \u9ed8\u8ba4\u4e3a realm \u540d\u5b57\n# server-name\n# \u542f\u7528 oAuth\noauth\n\n# \u9759\u6001\u7528\u6237 - \u4e0d\u53ef\u4ee5\u7528\u4e8e TURN REST API\n# \u751f\u6210 key - turnadmin -k -u ninefingers -r north.gov -p youhavetoberealistic\n#user=usr:key\n#user=usr:pass\n\n# Disable periodic health checks to \'dynamic\' auth secret tables\nno-auth-pings\n# \u4e0d\u4f7f\u7528\u52a8\u6001\u7684 \u5141\u8bb8/\u62d2\u7edd ip \u5217\u8868\nno-dynamic-ip-list\n# \u4e0d\u4f7f\u7528\u52a8\u6001 realm \u5c5e\u6027\nno-dynamic-realms\n\n\n# TLS\n# ====================\n# \u9ed8\u8ba4 turn_server_cert.pem\n# cert = <filename>\n# \u9ed8\u8ba4 turn_server_pkey.pem\n# pkey = <filename>\n# pkey-pwd = <password>\n# \u9ed8\u8ba4\u503c\u4e3a DEFAULT\n# cipher-list = <"cipher-string">\n# \u8bbe\u7f6e CA \u540e\u4f1a\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8bc1\u4e66\n# CA-file = <filename>\n# \u9ed8\u8ba4 prime256v1\n# ec-curve-name = <curve-name>\n# 566 bits predefined DH TLS key - \u9ed8\u8ba4 2066.\n# dh566\n# 1066 bits predefined DH TLS key - \u9ed8\u8ba4 2066.\n# dh1066\n# DH TLS key - pem \u683c\u5f0f\n# dh-file = <dh-file-name>\n\nno-tlsv1\nno-tlsv1_1\nno-tlsv1_2\n\n# \u534f\u8bae\u914d\u7f6e\n# ====================\n# \u4e0d\u76d1\u542c \u534f\u8bae\nno-udp\nno-udp\nno-tls\nno-dtls\n# \u7981\u6b62 udp relay - \u53ea\u4f7f\u7528 tcp\nno-udp-relay\n# \u7981\u6b62 tcp relay - \u53ea\u4f7f\u7528 udp\nno-tcp-relay\n# \u670d\u52a1\u7aef\u4e2d\u7ee7 - \u975e\u6807\u51c6\u903b\u8f91 - \u4ec5\u7528\u4e8e\u7279\u6b8a\u573a\u666f\n# server-relay\n\n# \u7981\u7528 RFC5780 (NAT behavior discovery)\n# \u5982\u679c\u76d1\u542c\u4e86\u591a\u4e2a\u76f8\u540c\u5730\u5740\u65cf\u5219\u4f1a\u542f\u7528\u8be5\u529f\u80fd\n# \u542f\u7528\u4f1a\u8fd4\u56de\u66f4\u591a\u4fe1\u606f\uff0c\u7981\u7528\u53ef\u4ee5\u51cf\u5c0f\u653b\u51fb\u653e\u5927\u98ce\u9669\n# \u5efa\u8bae\u5f00\u542f\u8be5\u9009\u9879\nno-rfc5780\n\n# \u7981\u7528 MAPPED-ADDRESS, \u53ea\u4f7f\u7528 XOR-MAPPED-ADDRESS\n# \u542f\u7528\u53ef\u4ee5 decrease gain factor in STUN binding responses\n# \u5efa\u8bae\u5f00\u542f\u8be5\u9009\u9879\nno-stun-backward-compatibility\n\n# \u5982\u679c\u5f00\u542f\u4e86 RFC5780 \u53ea\u53d1\u9001 RESPONSE-ORIGIN\n# \u542f\u7528\u53ef\u4ee5 decrease gain factor in STUN binding responses\n# \u5efa\u8bae\u5f00\u542f\u8be5\u9009\u9879\nresponse-origin-only-with-rfc5780\n\n# \u65e5\u5fd7\u914d\u7f6e\n# ====================\n# -l \u6587\u4ef6\u540d\u53ef\u4ee5\u4f7f\u7528 syslog,stdout \u548c -\n# \u4f1a\u5c1d\u8bd5\u76ee\u5f55 /var/log/turnserver/, /var/log, /var/tmp, /tmp, .\n# log-file = <filename>\n# \u4e0d\u8f93\u51fa stdout - \u9ed8\u8ba4\u662f log \u6587\u4ef6+stdout\nno-stdout-log\nsyslog\n# log \u6587\u4ef6\u540d\u4e0d\u6dfb\u52a0 pid \u548c\u65e5\u671f\u4fe1\u606f\nsimple-log\n\n# ISO-8601\nnew-log-timestamp\n# strftime\n# new-log-timestamp-format = <format>\n# STUN binding request - \u9ed8\u8ba4\u5173\u95ed - \u907f\u514d DoS\n# log-binding\n\n# \u5931\u6548\u65f6\u95f4 - \u79d2\nstale-nonce=600\nmax-allocate-lifetime=3600\nchannel-lifetime=600\n# \u751f\u4ea7\u4e0d\u5efa\u8bae\u4fee\u6539\npermission-lifetime=300\nmax-allocate-timeout=60\n\n# -S \u62d2\u7edd\u6240\u6709 turn \u8bf7\u6c42\nstun-only\n# \u62d2\u7edd\u6240\u6709 sturn \u8bf7\u6c42\nno-stun\n# stun \u8981\u6c42\u9a8c\u8bc1\nsecure-stun\n\n# \u7528\u4e8e\u8d1f\u8f7d\u7684\u670d\u52a1 - \u4f1a\u91cd\u5b9a\u5411\n# alternate-server = <ip:port>\n# tls-alternate-server = <ip:port>\n\n# -C timestamp/username \u5206\u5272\nrest-api-separator=:\n# \u91cd\u5b9a\u5411 ^/.well-known/acme-challenge/(.*)\n# acme-redirect = <URL>\n\n# allowed-peer-ip = <ip[-ip]>\n# denied-peer-ip = <ip[-ip]>\n\n# \u4f1a\u5c1d\u8bd5 /var/run/turnserver.pid, /var/tmp/turnserver.pid\n# pidfile = <"pid-file-name">\n# \u8fdb\u7a0b\u8fd0\u884c\u8eab\u4efd\n# proc-user = <user-name>\n# proc-group = <group-name>\n\n# \u652f\u6301 MICE - Mobility with ICE\nmobility\n# -K \u57fa\u4e8e\u901a\u8baf\u9009\u62e9\u5730\u5740 - RFC6156 section-4.2 \u8981\u6c42\u9ed8\u8ba4 IPv4\n# keep-address-family\n\n# \u7981\u7528 CLI \u652f\u6301\n# no-cli\ncli-ip=127.0.0.1\ncli-port=5766\n# \u5efa\u8bae\u4f7f\u7528 turnadmin -P \u751f\u6210\u52a0\u5bc6\u5bc6\u94a5\n# cli-password = <password>\ncli-max-output-sessions\n\n# \u542f\u7528 web-admin - \u9700\u8981 cert\nweb-admin\nweb-admin-ip=127.0.0.1\nweb-admin-port=8080\n# \u51fa\u4e8e\u5b89\u5168\u8003\u8651\u9ed8\u8ba4\u5173\u95ed\nweb-admin-listen-on-workers\n\nprometheus\n')),(0,i.kt)("h2",{id:"turn-rest-api"},"TURN REST API"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u4f7f\u7528 use-auth-secret+static-auth-secret \u6388\u6743\u65b9\u5f0f\u76f8\u5bf9\u66f4\u5b89\u5168"),(0,i.kt)("li",{parentName:"ul"},"password=",(0,i.kt)("inlineCode",{parentName:"li"},'base64(hmac(usercombo = "${timestamp}:${username}", secret))')),(0,i.kt)("li",{parentName:"ul"},"timestamp \u4e3a\u5931\u6548\u65f6\u95f4"),(0,i.kt)("li",{parentName:"ul"},"\u8bf7\u6c42 turn \u7684\u65f6\u5019 username \u9700\u8981\u4f7f\u7528 usercombo"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u914d\u7f6e\u591a\u4e2a shared-secret\uff0c\u4f1a\u904d\u5386\uff0c\u53ef\u4ee5\u6839\u636e realm \u914d\u7f6e"),(0,i.kt)("li",{parentName:"ul"},"\u6d41\u7a0b",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u7aef\u5148\u548c\u81ea\u5df1\u7684\u670d\u52a1\u7aef\u4ea4\u4e92",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u670d\u52a1\u7aef\u9a8c\u8bc1\u5ba2\u6237\u7aef\uff0c\u4ece coturn \u751f\u6210 token"))),(0,i.kt)("li",{parentName:"ul"},"\u5ba2\u6237\u7aef\u53d6\u5230 token \u8fdb\u884c turn \u64cd\u4f5c"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://datatracker.ietf.org/doc/html/draft-uberti-behave-turn-rest-00"},"A REST API For Access To TURN Services"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},'func hashPassword(name, ts, secret string) (string, string) {\n    combo := fmt.Sprintf("%v:%v", ts, name)\n    hash := hmac.New(sha1.New, []byte(secret))\n    hash.Write([]byte(combo))\n    return combo, base64.StdEncoding.EncodeToString(hash.Sum(nil))\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"SECRET=<secret_value>\n\ntime=$(date +%s)\nexpiry=8400\nusername=$(( $time + $expiry )):${username}\necho username: ${username}\necho password:\necho -n $username | openssl dgst -binary -sha1 -hmac $SECRET | openssl base64\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"var crypto = require('crypto');\n\nfunction getTURNCredentials(name, secret) {\n  var unixTimeStamp = parseInt(Date.now() / 1000) + 24 * 3600, // this credential would be valid for the next 24 hours\n    username = [unixTimeStamp, name].join(':'),\n    password,\n    hmac = crypto.createHmac('sha1', secret);\n  hmac.setEncoding('base64');\n  hmac.write(username);\n  hmac.end();\n  password = hmac.read();\n  return {\n    username: username,\n    password: password,\n  };\n}\n")),(0,i.kt)("h1",{id:"faq"},"FAQ"),(0,i.kt)("h2",{id:"server-stun-returned-an-error-with-code701"},"server stun returned an error with code=701"),(0,i.kt)("p",null,"701 - none of the ICE candidates were able to successfully make contact with the STUN or TURN server"),(0,i.kt)("h2",{id:"self-signed-certificates-for-turn-server"},"self-signed certificates for Turn Server"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"openssl req -x509 -newkey rsa:2048 -keyout turn_server_pkey.pem -out turn_server_cert.pem -days 3650 -nodes\nturnserver -n -L 0.0.0.0 -v -a -f -r example -u test:test --cert turn_server_cert.pem --pkey turn_server_pkey.pem --oauth --web-admin\n")),(0,i.kt)("h2",{id:"incoming-packet-create_permission-processed-error-443-peer-address-family-mismatch-4"},"incoming packet CREATE_PERMISSION processed, error 443: Peer Address Family Mismatch (4)"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 - handle_turn_refresh"),(0,i.kt)("li",{parentName:"ul"},"2 - handle_turn_connect"),(0,i.kt)("li",{parentName:"ul"},"3 - handle_turn_channel_bind"),(0,i.kt)("li",{parentName:"ul"},"4 - handle_turn_create_permission")))}m.isMDXComponent=!0}}]);