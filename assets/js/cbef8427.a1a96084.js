"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[34309],{49613:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return f}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(r),f=a,d=m["".concat(p,".").concat(f)]||m[f]||s[f]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},43891:function(e,t,r){r.r(t),r.d(t,{assets:function(){return g},contentTitle:function(){return f},default:function(){return b},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return k}});var n=r(49613),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&u(e,r,t[r]);if(l)for(var r of l(t))c.call(t,r)&&u(e,r,t[r]);return e};const m={title:"kroki"},f="kroki",d={unversionedId:"languages/diagram/kroki",id:"languages/diagram/kroki",title:"kroki",description:"- yuzutech/kroki",source:"@site/../notes/languages/diagram/kroki.md",sourceDirName:"languages/diagram",slug:"/languages/diagram/kroki",permalink:"/notes/languages/diagram/kroki",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/languages/diagram/kroki.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1636785414,formattedLastUpdatedAt:"Nov 13, 2021",frontMatter:{title:"kroki"},sidebar:"docs",previous:{title:"ERD",permalink:"/notes/languages/diagram/erd"},next:{title:"mermaid",permalink:"/notes/languages/diagram/mermaid"}},g={},k=[],y={toc:k};function b(e){var t,r=e,{components:a}=r,u=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=s(s({},y),u),o(t,i({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"kroki"}),"kroki"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/yuzutech/kroki"}),"yuzutech/kroki"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"MIT, Java"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://kroki.io"}),"https://kroki.io")))),(0,n.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://asciiflow.com/"}),"asciiflow"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u753b\u56fe\u53ef\u7528 ditaa \u6e32\u67d3"))),(0,n.kt)("li",{parentName:"ul"},"JS Zlib ",(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/nodeca/pako"}),"nodeca/pako"))))),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"# GET deflate + base64\n# POST plain\nenc=$(echo 'digraph G {Hello->World}' | python -c \"import sys; import base64; import zlib; print(base64.urlsafe_b64encode(zlib.compress(sys.stdin.read(), 9)))\")\ncurl https://kroki.io/graphviz/svg/$enc\n")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-http"}),'### POST json\nPOST https://kroki.io\n\n{\n  "diagram_source": "digraph G {Hello->World}",\n  "diagram_type": "graphviz",\n  "output_format": "svg"\n}\n\n### POST accept\nPOST https://kroki.io/graphviz\nAccept: image/svg+xml\nContent-Type: text/plain\n\ndigraph G {\n  Hello->World\n}\n\n### POST plain\nPOST https://kroki.io/graphviz/svg\nContent-Type: text/plain\n\ndigraph G {\n  Hello->World\n}\n\n### POST json with format in path\nPOST https://kroki.io/graphviz/svg\n\n{\n  "diagram_source": "digraph G {Hello->World}"\n}\n')))}b.isMDXComponent=!0}}]);