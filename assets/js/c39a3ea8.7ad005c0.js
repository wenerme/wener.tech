"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[26028],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(t),f=a,b=m["".concat(s,".").concat(f)]||m[f]||p[f]||o;return t?r.createElement(b,l(l({ref:n},u),{},{components:t})):r.createElement(b,l({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},28422:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),l=["components"],i={title:"Ansible Cookbook"},s=void 0,c={unversionedId:"ops/infra/ansible/ansible-cookbook",id:"ops/infra/ansible/ansible-cookbook",title:"Ansible Cookbook",description:"\u52a8\u6001\u53d8\u91cf",source:"@site/notes/ops/infra/ansible/ansible-cookbook.md",sourceDirName:"ops/infra/ansible",slug:"/ops/infra/ansible/ansible-cookbook",permalink:"/notes/ops/infra/ansible/ansible-cookbook",editUrl:"https://github.com/wenerme/wener/edit/master/notes/ops/infra/ansible/ansible-cookbook.md",tags:[],version:"current",frontMatter:{title:"Ansible Cookbook"},sidebar:"docs",previous:{title:"Ansible Collection",permalink:"/notes/ops/infra/ansible/ansible-collection"},next:{title:"Ansible FAQ",permalink:"/notes/ops/infra/ansible/ansible-faq"}},u=[{value:"\u52a8\u6001\u53d8\u91cf",id:"\u52a8\u6001\u53d8\u91cf",children:[],level:2},{value:"\u6279\u91cf\u6a21\u7248",id:"\u6279\u91cf\u6a21\u7248",children:[],level:2},{value:"\u5bc6\u7801\u751f\u6210",id:"\u5bc6\u7801\u751f\u6210",children:[],level:2},{value:"\u4e34\u65f6\u6587\u4ef6\u5b58\u50a8\u6a21\u677f",id:"\u4e34\u65f6\u6587\u4ef6\u5b58\u50a8\u6a21\u677f",children:[],level:2},{value:"\u7b49\u5f85\u547d\u4ee4\u6210\u529f",id:"\u7b49\u5f85\u547d\u4ee4\u6210\u529f",children:[],level:2}],p={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u52a8\u6001\u53d8\u91cf"},"\u52a8\u6001\u53d8\u91cf"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Render deployment templates\n  set_fact:\n    '{{ item }}': \"{{ lookup('template', item + '.yml.j2') }}\"\n  with_items:\n    - 'configmap'\n    - 'secret'\n    - 'deployment'\n    - 'supervisor'\n    - 'launch_awx'\n  no_log: true\n")),(0,o.kt)("h2",{id:"\u6279\u91cf\u6a21\u7248"},"\u6279\u91cf\u6a21\u7248"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: create x template\n  template:\n    src: '{{item}}'\n    dest: /tmp/{{ item | basename | regex_replace('\\.j2','') }}\n  with_fileglob:\n    - ../templates/*.j2\n")),(0,o.kt)("h2",{id:"\u5bc6\u7801\u751f\u6210"},"\u5bc6\u7801\u751f\u6210"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"lookup('password', 'credentials/db.passwd length=8 chars=digits')")," - \u8bfb\u53d6\u6216\u968f\u673a\u751f\u6210\u5bc6\u7801")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# \u751f\u6210\u5bc6\u7801\u4e14\u4e0d\u8bb0\u5f55\n- name: Generate broadcast websocket secret\n  set_fact:\n    broadcast_websocket_secret: \"{{ lookup('password', '/dev/null length=128') }}\"\n  run_once: true\n  no_log: true\n  when: broadcast_websocket_secret is not defined\n")),(0,o.kt)("h2",{id:"\u4e34\u65f6\u6587\u4ef6\u5b58\u50a8\u6a21\u677f"},"\u4e34\u65f6\u6587\u4ef6\u5b58\u50a8\u6a21\u677f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Create Temporary Values File (Kubernetes)\n  tempfile:\n    state: file\n    suffix: .yml\n  register: values_file\n\n- name: Populate Temporary Values File (Kubernetes)\n  template:\n    # \u4f1a\u76f4\u63a5\u4f7f\u7528\u6a21\u7248\u76ee\u5f55\u4e0b\u6587\u4ef6\n    src: postgresql-values.yml.j2\n    dest: '{{ values_file.path }}'\n  no_log: true\n")),(0,o.kt)("h2",{id:"\u7b49\u5f85\u547d\u4ee4\u6210\u529f"},"\u7b49\u5f85\u547d\u4ee4\u6210\u529f"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'- name: Wait for management pod to start\n  shell: |\n    {{ kubectl_or_oc }} -n {{ kubernetes_namespace }} \\\n      get pod ansible-tower-management -o jsonpath="{.status.phase}"\n  register: result\n  # \u6761\u4ef6\n  until: result.stdout == "Running"\n  retries: 60\n  delay: 10\n')))}m.isMDXComponent=!0}}]);