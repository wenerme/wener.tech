"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[9492],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),f=a,k=m["".concat(p,".").concat(f)]||m[f]||u[f]||i;return n?r.createElement(k,l(l({ref:t},c),{},{components:n})):r.createElement(k,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},87655:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return m}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),l=["components"],o={title:"C Awesome",tags:["Awesome"]},p=void 0,s={unversionedId:"languages/c/c-awesome",id:"languages/c/c-awesome",title:"C Awesome",description:"- tccboot - TinyCC Boot Loader",source:"@site/notes/languages/c/c-awesome.md",sourceDirName:"languages/c",slug:"/languages/c/c-awesome",permalink:"/notes/languages/c/c-awesome",editUrl:"https://github.com/wenerme/wener/edit/master/notes/languages/c/c-awesome.md",tags:[{label:"Awesome",permalink:"/notes/tags/awesome"}],version:"current",frontMatter:{title:"C Awesome",tags:["Awesome"]},sidebar:"docs",previous:{title:"Golang",permalink:"/notes/languages/go/"},next:{title:"C Build",permalink:"/notes/languages/c/c-build"}},c=[{value:"GL",id:"gl",children:[],level:2},{value:"Version",id:"version",children:[],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://bellard.org/tcc/tccboot.html"},"tccboot")," - TinyCC Boot Loader"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/simdjson/simdjson"},"simdjson/simdjson")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/yue/yue"},"yue/yue")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://cppinsights.io/"},"https://cppinsights.io/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://c2rust.com/"},"https://c2rust.com/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://c9x.me/compile/"},"https://c9x.me/compile/")),(0,i.kt)("li",{parentName:"ul"},"Writing a register based VM in less than 125 lines of C code",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29492183"},"https://news.ycombinator.com/item?id=29492183")))),(0,i.kt)("li",{parentName:"ul"},"Address Sanitizer"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://valgrind.org/"},"valgrind"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u5185\u5b58\u6ea2\u51fa\u68c0\u6d4b"),(0,i.kt)("li",{parentName:"ul"},"\u6e90\u7801 ",(0,i.kt)("a",{parentName:"li",href:"https://sourceware.org/git/valgrind"},"valgrind")),(0,i.kt)("li",{parentName:"ul"},"\u901a\u8fc7 LD_PRELOAD")))),(0,i.kt)("h2",{id:"gl"},"GL"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/rswinkle/PortableGL"},"rswinkle/PortableGL"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"implementation of OpenGL 3.x-ish in clean C"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://news.ycombinator.com/item?id=29745029"},"HN"))))),(0,i.kt)("h2",{id:"version"},"Version"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"C89,C90 - ANSI C"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/C99"},"C99"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ISO/IEC 9899:1999"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/C11_(C_standard_revision)"},"C11"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ISO/IEC 9899:2011"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/C17_(C_standard_revision)"},"C17")),(0,i.kt)("li",{parentName:"ul"},"C23")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"void c89(){\n  int i;\n  for(i = 0; i < 10; i++) {\n  }\n}\n\nvoid c99(){\n  for(int i = 0; i < 10; i++) {\n  }\n}\n")))}m.isMDXComponent=!0}}]);