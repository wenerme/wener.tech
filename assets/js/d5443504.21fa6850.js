"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[15811],{49613:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return g}});var o=t(59496);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},f=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),u=c(t),f=r,g=u["".concat(l,".").concat(f)]||u[f]||m[f]||i;return t?o.createElement(g,s(s({ref:n},p),{},{components:t})):o.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,s=new Array(i);s[0]=f;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a[u]="string"==typeof e?e:r,s[1]=a;for(var c=2;c<i;c++)s[c]=t[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,t)}f.displayName="MDXCreateElement"},62483:function(e,n,t){t.r(n),t.d(n,{assets:function(){return h},contentTitle:function(){return d},default:function(){return x},frontMatter:function(){return g},metadata:function(){return v},toc:function(){return b}});var o=t(49613),r=Object.defineProperty,i=Object.defineProperties,s=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?r(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))l.call(n,t)&&p(e,t,n[t]);if(a)for(var t of a(n))c.call(n,t)&&p(e,t,n[t]);return e},m=(e,n)=>i(e,s(n)),f=(e,n)=>{var t={};for(var o in e)l.call(e,o)&&n.indexOf(o)<0&&(t[o]=e[o]);if(null!=e&&a)for(var o of a(e))n.indexOf(o)<0&&c.call(e,o)&&(t[o]=e[o]);return t};const g={tags:["Netboot"]},d="pxe",v={unversionedId:"os/alpine/alpine-pxe",id:"os/alpine/alpine-pxe",title:"pxe",description:"- https://pkgs.alpinelinux.org/package/edge/testing/x86_64/alpine-ipxe",source:"@site/../notes/os/alpine/alpine-pxe.md",sourceDirName:"os/alpine",slug:"/os/alpine/pxe",permalink:"/notes/os/alpine/pxe",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/alpine/alpine-pxe.md",tags:[{label:"Netboot",permalink:"/notes/tags/netboot"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1693804740,formattedLastUpdatedAt:"Sep 4, 2023",frontMatter:{tags:["Netboot"]},sidebar:"docs",previous:{title:"Alpine \u5305\u7ef4\u62a4",permalink:"/notes/os/alpine/pkgs"},next:{title:"AlpineLinux Setup",permalink:"/notes/os/alpine/setup"}},h={},b=[{value:"boot.ipxe",id:"bootipxe",level:3}],y={toc:b},$="wrapper";function x(e){var n=e,{components:t}=n,r=f(n,["components"]);return(0,o.kt)($,m(u(u({},y),r),{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",u({},{id:"pxe"}),"pxe"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",u({parentName:"li"},{href:"https://pkgs.alpinelinux.org/package/edge/testing/x86_64/alpine-ipxe"}),"https://pkgs.alpinelinux.org/package/edge/testing/x86_64/alpine-ipxe"))),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# \u4f7f\u7528 alpine \u542f\u52a8\u811a\u672c\n# QEMU \u62a5 imgtrust \u547d\u4ee4\u627e\u4e0d\u5230 http://ipxe.org/cmd/imgtrust\nchain --autofree http://boot.alpinelinux.org/boot.ipxe\n")),(0,o.kt)("h3",u({},{id:"bootipxe"}),"boot.ipxe"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-bash"}),'#!ipxe\n\nset os Alpine Linux\niseq ${ipxe_cloud_config} packet && set provider (Packet.net) ||\niseq ${alpine_loader} true && set img_verify enabled || set img_verify disabled\nset console tty0 ||\nset cmdline modules=loop,squashfs quiet nomodeset ||\nset default_cmdline default ||\nset start_sshd no ||\nset branch v3.17 ||\nset version 3.17.1 ||\nset flavor virt ||\niseq ${buildarch} arm64 && goto arm64 ||\ncpuid --ext 29 && goto x86_64 || goto x86\n\n:arm64\nset arch aarch64 ||\nset acpi acpi=force ||\nset console ttyAMA0 ||\niseq ${ipxe_cloud_config} packet && set console ttyAMA0,115200 ||\ngoto menu\n\n:x86_64\nset arch x86_64 ||\niseq ${ipxe_cloud_config} packet && set console ttyS1,115200n8 ||\ngoto menu\n\n:x86\nset arch x86 ||\ngoto menu\n\n:menu\nset space:hex 20:20\nset space ${space:string}\nmenu ${os} ${provider} [ ${arch} ]\nitem --gap Boot options\nitem branch ${space} Alpine release [ ${branch} ]\niseq ${arch} x86_64 && item flavor ${space} Kernel flavor [ ${flavor} ] ||\niseq ${alpine_loader} true && item img_verify ${space} Image verification [ ${img_verify} ] ||\nitem cmdline ${space} Linux cmdline [ ${default_cmdline} ]\nitem console ${space} Set console [ ${console} ]\nitem start_sshd ${space} Start sshd at first boot [ ${start_sshd} ]\nitem --gap Booting\nitem boot ${space} Boot with above settings\nitem --gap Utilities\nitem shell ${space} iPXE Shell\nitem reboot ${space} Reboot system\nchoose item\ngoto ${item}\n\n:branch\nmenu ${os} ${provider} [ ${arch} ]\nitem v3.17 Version 3.17.1\nitem edge Version 20230208\nitem v3.8 Version 3.8.5\nitem v3.9 Version 3.9.6\nitem v3.10 Version 3.10.9\nitem v3.11 Version 3.11.13\nitem v3.12 Version 3.12.12\nchoose branch || goto shell\niseq ${branch} v3.17 && set version 3.17.1 ||\niseq ${branch} edge && set version 20230208 ||\niseq ${branch} v3.8 && set version 3.8.5 ||\niseq ${branch} v3.9 && set version 3.9.6 ||\niseq ${branch} v3.10 && set version 3.10.9 ||\niseq ${branch} v3.11 && set version 3.11.13 ||\niseq ${branch} v3.12 && set version 3.12.12 ||\ngoto menu\n\n:flavor\nmenu ${os} ${provider} [ ${arch} ]\nitem lts Linux lts\nitem vanilla Linux vanilla\nitem virt Linux virt\nchoose flavor || goto shell\ngoto menu\n\n:console\nmenu ${os} ${provider} [ ${arch} ]\nitem tty0 Console on tty0\nitem ttyS0 Console on ttyS0\nitem ttyS1 Console on ttyS1\nitem ttyAMA0 Console on ttyAMA0\nitem custom Enter custom console\nchoose console || goto menu\niseq ${console} custom && goto custom_console ||\ngoto menu\n\n:custom_console\nclear console\necho -n Enter console: && read console\ngoto menu\n\n:shell\necho Type "exit" to return to menu.\nshell\ngoto menu\n\n:img_verify\niseq ${img_verify} enabled && set img_verify disabled || set img_verify enabled\ngoto menu\n\n:cmdline\necho -n Enter extra cmdline options:${space} && read cmdline\nset default_cmdline modified\ngoto menu\n\n:start_sshd\nclear start_sshd\necho -n Enter url to ssh key:${space} && read ssh_key\nisset ${ssh_key} && set start_sshd yes || set start_sshd no\niseq ${start_sshd} yes && set ssh_key ssh_key=${ssh_key} || clear ssh_key\ngoto menu\n\n:boot\nisset ${console} && set console console=${console} ||\nset mirror http://dl-cdn.alpinelinux.org/alpine\nset img-url ${mirror}/${branch}/releases/${arch}/netboot-${version}\nset sig-url sigs/${branch}/${arch}/${version}\nset repo-url ${mirror}/${branch}/main\nset modloop-url ${img-url}/modloop-${flavor}\nimgfree\nkernel ${img-url}/vmlinuz-${flavor} ${cmdline} alpine_repo=${repo-url} modloop=${modloop-url} ${console} ${acpi} ${ssh_key}\ninitrd ${img-url}/initramfs-${flavor}\niseq ${img_verify} enabled && goto verify_img || goto no_img_verify\n:verify_img\nimgverify vmlinuz-${flavor} ${sig-url}/vmlinuz-${flavor}.sig\nimgverify initramfs-${flavor} ${sig-url}/initramfs-${flavor}.sig\n:no_img_verify\nboot\ngoto alpine_exit\n\n:reboot\nreboot\n\n:poweroff\npoweroff\n\n:alpine_exit\nclear menu\nexit 0\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",u({parentName:"li"},{href:"http://boot.alpinelinux.org/boot.ipxe"}),"http://boot.alpinelinux.org/boot.ipxe"))))}x.isMDXComponent=!0}}]);