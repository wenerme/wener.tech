"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[69711],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return v}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(r),v=a,d=m["".concat(l,".").concat(v)]||m[v]||u[v]||i;return r?n.createElement(d,o(o({ref:t},p),{},{components:r})):n.createElement(d,o({ref:t},p))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},86712:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return v},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],s={title:"vector"},l=void 0,c={unversionedId:"service/observability/vector",id:"service/observability/vector",title:"vector",description:"- vectordotdev/vector",source:"@site/notes/service/observability/vector.md",sourceDirName:"service/observability",slug:"/service/observability/vector",permalink:"/notes/service/observability/vector",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/observability/vector.md",tags:[],version:"current",frontMatter:{title:"vector"},sidebar:"docs",previous:{title:"\u53ef\u89c2\u5bdf\u6027",permalink:"/notes/service/observability/"},next:{title:"Service Awesome",permalink:"/notes/devops/service/service-awesome"}},p={},u=[{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"\u90e8\u7f72",id:"\u90e8\u7f72",level:2}],m={toc:u};function v(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector"},"vectordotdev/vector"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"MPL-2.0, Rust"),(0,i.kt)("li",{parentName:"ul"},"Datadog \u5f00\u6e90"),(0,i.kt)("li",{parentName:"ul"},"observability data ",(0,i.kt)("strong",{parentName:"li"},"pipeline")),(0,i.kt)("li",{parentName:"ul"},"logs, metrics, traces(WIP) - observability \u5168\u5bb6\u6876"))),(0,i.kt)("li",{parentName:"ul"},"Sources",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Prometheus RemoteWrite/Scrap"),(0,i.kt)("li",{parentName:"ul"},"s3, fluent, logstash"),(0,i.kt)("li",{parentName:"ul"},"Kubernetes_logs, docker_logs, nginx_metrics, postgresql_metrics, statsd"),(0,i.kt)("li",{parentName:"ul"},"host_metrics, journald, exec, file, syslog, socket, stdin"),(0,i.kt)("li",{parentName:"ul"},"nats"),(0,i.kt)("li",{parentName:"ul"},"internal_logs, internal_metrics"),(0,i.kt)("li",{parentName:"ul"},"vector"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dnstap.info/"},"dnstap")))),(0,i.kt)("li",{parentName:"ul"},"Transforms"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://vector.dev/docs/reference/configuration/sinks/"},"Sinks"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"S3, ClickHouse, Elastic, Loki, InfluxDB, Prometheus RW/Export, Statsd"),(0,i.kt)("li",{parentName:"ul"},"Redis, Plusar, Nats, Kafka"),(0,i.kt)("li",{parentName:"ul"},"Vector"))),(0,i.kt)("li",{parentName:"ul"},"\u89d2\u8272",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"agent - \u91c7\u96c6",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"source -> sink"))),(0,i.kt)("li",{parentName:"ul"},"aggregator - \u805a\u5408",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"transform"))),(0,i.kt)("li",{parentName:"ul"},"sidecar - \u5e94\u7528")))),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"issues")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"timescale/postgres sink ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/939"},"#939")),(0,i.kt)("li",{parentName:"ul"},"PostgreSQL/MySQL sink ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/6556"},"#6556")),(0,i.kt)("li",{parentName:"ul"},"sonic sink ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/988"},"#988")),(0,i.kt)("li",{parentName:"ul"},"grpc source ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/573"},"#573")),(0,i.kt)("li",{parentName:"ul"},"zstd compress ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/2302"},"#2302")),(0,i.kt)("li",{parentName:"ul"},"windows_event_log source ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/1206"},"#1206")),(0,i.kt)("li",{parentName:"ul"},"VictoriaMetrics sink ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/1343"},"#1343"))),(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"stops watching logs from new pods ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/8616"},"#8616"))),(0,i.kt)("hr",{parentName:"div"}),(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"opentelemetry source & sink ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/vectordotdev/vector/issues/1444"},"#1444"))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# macOS\nbrew tap vectordotdev/brew\nbrew install vector\n\n# https://github.com/vectordotdev/vector/releases\n")),(0,i.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},'# data_dir = "/var/lib/vector"\n\n[sources.dummy_logs]\ntype = "generator"\nformat = "syslog"\ninterval = 1\n\n# ector Remap Language https://vector.dev/docs/reference/vrl/\n[transforms.parse_logs]\ntype = "remap"\ninputs = ["dummy_logs"]\nsource = \'\n. = parse_syslog!(string!(.message))\n\'\n\n# Print parsed logs to stdout\n[sinks.print]\ntype = "console"\ninputs = ["parse_logs"]\nencoding.codec = "json"\n\n# GraphQL API http://localhost:8686\n# vector top\n[api]\nenabled = true\naddress = "127.0.0.1:8686"\n')),(0,i.kt)("h2",{id:"\u90e8\u7f72"},"\u90e8\u7f72"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://vector.dev/docs/setup/installation/package-managers/helm/"},"Install Vector using Helm"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://helm.vector.dev"},"https://helm.vector.dev")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://vector.dev/docs/setup/installation/platforms/kubernetes/"},"Kubernetes"))))}v.isMDXComponent=!0}}]);