"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[75989],{49613:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var n=t(59496);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),d=o,m=u["".concat(c,".").concat(d)]||u[d]||f[d]||a;return t?n.createElement(m,i(i({ref:r},p),{},{components:t})):n.createElement(m,i({ref:r},p))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=d;var l={};for(var c in r)hasOwnProperty.call(r,c)&&(l[c]=r[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},70589:function(e,r,t){t.r(r),t.d(r,{assets:function(){return k},contentTitle:function(){return g},default:function(){return O},frontMatter:function(){return m},metadata:function(){return y},toc:function(){return v}});var n=t(49613),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,p=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,u=(e,r)=>{for(var t in r||(r={}))c.call(r,t)&&p(e,t,r[t]);if(l)for(var t of l(r))s.call(r,t)&&p(e,t,r[t]);return e},f=(e,r)=>a(e,i(r)),d=(e,r)=>{var t={};for(var n in e)c.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&l)for(var n of l(e))r.indexOf(n)<0&&s.call(e,n)&&(t[n]=e[n]);return t};const m={title:"glider"},g="glider",y={unversionedId:"service/network/proxy/glider",id:"service/network/proxy/glider",title:"glider",description:"- nadoo/glider",source:"@site/../notes/service/network/proxy/glider.md",sourceDirName:"service/network/proxy",slug:"/service/network/proxy/glider",permalink:"/notes/service/network/proxy/glider",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/network/proxy/glider.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1701146597,formattedLastUpdatedAt:"Nov 28, 2023",frontMatter:{title:"glider"},sidebar:"docs",previous:{title:"\u914d\u7f6e",permalink:"/notes/service/network/proxy/frp/conf"},next:{title:"gost",permalink:"/notes/service/network/proxy/gost"}},k={},v=[],b={toc:v},w="wrapper";function O(e){var r=e,{components:t}=r,o=d(r,["components"]);return(0,n.kt)(w,f(u(u({},b),o),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",u({},{id:"glider"}),"glider"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/nadoo/glider"}),"nadoo/glider"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"GPLv3, Go"),(0,n.kt)("li",{parentName:"ul"},"\u7c7b\u4f3c gost\uff0c\u4f46\u652f\u6301\u66f4\u591a\u534f\u8bae",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u53ea\u6709 Listener \u548c Forwarder"))),(0,n.kt)("li",{parentName:"ul"},"mix - http+socks5"),(0,n.kt)("li",{parentName:"ul"},"http"),(0,n.kt)("li",{parentName:"ul"},"socks5"),(0,n.kt)("li",{parentName:"ul"},"ss"),(0,n.kt)("li",{parentName:"ul"},"trojan"),(0,n.kt)("li",{parentName:"ul"},"trojanc - cleartext"),(0,n.kt)("li",{parentName:"ul"},"vless"),(0,n.kt)("li",{parentName:"ul"},"vmess"),(0,n.kt)("li",{parentName:"ul"},"Forward/TCP - ssr, ssh. socks4, socks4a"),(0,n.kt)("li",{parentName:"ul"},"tcp, udp - tunnel"),(0,n.kt)("li",{parentName:"ul"},"tls, kcp, unic, vsock, smux, ws, wss, PROXY Protocol, simple obfs"),(0,n.kt)("li",{parentName:"ul"},"redir, redir6, TProxy"),(0,n.kt)("li",{parentName:"ul"},"reject")))),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"brew install glider\n\n\n")),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-ini"}),"verbose\nlisten=trojan://UUID@0.0.0.0:1234?cert=/etc/ssl/certs/host.crt&key=/etc/ssl/private/host.key\n")),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),'#!/sbin/openrc-run\nsupervisor=supervise-daemon\n\nname="Glider"\ndescription="A forward proxy with multiple protocolso."\n\ncommand=/usr/local/bin/glider\ncommand_args="-config /etc/glider/${RC_SVCNAME}.conf"\n\nLOGFILE="${LOGFILE:-/var/log/${RC_SVCNAME}.log}"\noutput_log=${LOGFILE}\nerror_log=${LOGFILE}\n\ndepend() {\n  use logger dns\n  need net\n}\n\ncheckconfig() {\n  # warn this if not found\n  if [ ! -f "/etc/glider/${RC_SVCNAME}.conf" ] ; then\n    eerror "No config ${RC_SVCNAME}.conf"\n    return 1\n  fi\n  return 0\n}\n')))}O.isMDXComponent=!0}}]);