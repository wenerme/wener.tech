"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[36986],{49613:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var r=t(59496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),c=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(i.Provider,{value:n},e.children)},p="mdxType",j={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,d=p["".concat(i,".").concat(m)]||p[m]||j[m]||a;return t?r.createElement(d,l(l({ref:n},u),{},{components:t})):r.createElement(d,l({ref:n},u))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[p]="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},80725:function(e,n,t){t.r(n),t.d(n,{assets:function(){return b},contentTitle:function(){return f},default:function(){return v},frontMatter:function(){return d},metadata:function(){return y},toc:function(){return g}});var r=t(49613),o=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,n,t)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,p=(e,n)=>{for(var t in n||(n={}))i.call(n,t)&&u(e,t,n[t]);if(s)for(var t of s(n))c.call(n,t)&&u(e,t,n[t]);return e},j=(e,n)=>a(e,l(n)),m=(e,n)=>{var t={};for(var r in e)i.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&s)for(var r of s(e))n.indexOf(r)<0&&c.call(e,r)&&(t[r]=e[r]);return t};const d={title:"jq"},f="jq",y={unversionedId:"os/linux/shell/jq",id:"os/linux/shell/jq",title:"jq",description:"- https://jqplay.org/",source:"@site/../notes/os/linux/shell/jq.md",sourceDirName:"os/linux/shell",slug:"/os/linux/shell/jq",permalink:"/notes/os/linux/shell/jq",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/shell/jq.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1695042174,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{title:"jq"},sidebar:"docs",previous:{title:"find",permalink:"/notes/os/linux/shell/find"},next:{title:"lsof",permalink:"/notes/os/linux/shell/lsof"}},b={},g=[{value:"composer auth.json",id:"composer-authjson",level:2},{value:"parse error: Invalid numeric literal at line 1, column 3",id:"parse-error-invalid-numeric-literal-at-line-1-column-3",level:2}],h={toc:g},O="wrapper";function v(e){var n=e,{components:t}=n,o=m(n,["components"]);return(0,r.kt)(O,j(p(p({},h),o),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",p({},{id:"jq"}),"jq"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://jqplay.org/"}),"https://jqplay.org/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://stedolan.github.io/jq/manual/"}),"https://stedolan.github.io/jq/manual/"))),(0,r.kt)("admonition",p({},{type:"tip"}),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"jq \u4e0d\u652f\u6301 inplace \u4fee\u6539"))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),'jq \'.components.rows|=sort_by(.id)|.components.rows[].properties|=sort_by(.name)\' file.json\n\n# inplace edit\njqi() {\n  cat <<< "$(jq "$1" < "$2")" > "$2"\n}\njqi ".a=1" test.json\n\n# merge\njq -s add a.json b.json c.json\n\n# deep merge\njq -s \'reduce .[] as $x ({}; . * $x)\' a.json b.json\n\n# array\n# \u975e\u5bf9\u8c61\u573a\u666f\njq -c \'.[]\' names.json | xargs -L 1 echo\n# \u5bf9\u8c61\u573a\u666f\njq -j \'.[] | tostring + "\\u0000"\' names.json | xargs -0 -n1 -I {} jq -n {}\n# \u4fbf\u5229\u6570\u7ec4\u5bf9\u8c61\u5b57\u6bb5\njq -j \'.builds[] | tostring + "\\u0000"\' build.json | xargs -0 -n1 -I {} sh -c "jq -n \'{}\' | jq -r .name"\n\n\nmapfile -t configArr < <(jq -c \'.[]\'  < app-cnfg.json)\nfor config in "${configArr[@]}"; do\n    aws dynamodb put-item --table-name "xxx" --item "$config"\ndone\n\nwhile IFS= read -r config; do\n    aws dynamodb put-item --table-name "xxx" --item "$config"\ndone< <(jq -c \'.[]\' < app-cnfg.json)\n\n# arg\njq --arg v "$PRJNAME" \'.dev.projects[$v]\' config.json\n\n\n# \u901a\u8fc7 redirect\njq \'.key\' <<< "$json_data"\n# \u901a\u8fc7 arg\njq -n --argjson data "$json_data" \'$data.key\'\n# \u901a\u8fc7\u73af\u5883\u53d8\u91cf\njson_data="$json_data" jq -n \'env.json_data | fromjson.key\'\n# \u901a\u8fc7\u53d8\u91cf\njq -n "$json_data" | jq .key\n\n# jsonl\njq -c \'.[]\'                           # array to jsonl\njq -n \'[inputs]\' <in.jsonl >out.json  # jsonl to array\njq --slurp . <in.jsonl >out.json      # jsonl to array\n')),(0,r.kt)("h2",p({},{id:"composer-authjson"}),"composer auth.json"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"COMPOSER_REPO=$(cat composer.json | jq '.repositories[0].url' -r | sed -r 's|https?://([^/]+).*|\\1|')\necho '{}' | jq '.\"http-basic\".\"code.dev.zhang66.cn\" = { \"username\": $ENV.COMPOSER_USER, \"password\": $ENV.COMPOSER_PASS }' > auth.json\n")),(0,r.kt)("h2",p({},{id:"parse-error-invalid-numeric-literal-at-line-1-column-3"}),"parse error: Invalid numeric literal at line 1, column 3"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u662f\u56e0\u4e3a\u6709 BOM")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"dos2unix in.json\n")))}v.isMDXComponent=!0}}]);