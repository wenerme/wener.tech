"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[78919],{49613:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return d}});var r=n(59496);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),p=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},m=function(t){var e=p(t.components);return r.createElement(c.Provider,{value:e},t.children)},s="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,i=t.originalType,c=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=p(n),f=a,d=s["".concat(c,".").concat(f)]||s[f]||u[f]||i;return n?r.createElement(d,l(l({ref:e},m),{},{components:n})):r.createElement(d,l({ref:e},m))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=t,o[s]="string"==typeof t?t:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},28903:function(t,e,n){n.r(e),n.d(e,{assets:function(){return k},contentTitle:function(){return g},default:function(){return O},frontMatter:function(){return d},metadata:function(){return b},toc:function(){return h}});var r=n(49613),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(t,e,n)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,s=(t,e)=>{for(var n in e||(e={}))c.call(e,n)&&m(t,n,e[n]);if(o)for(var n of o(e))p.call(e,n)&&m(t,n,e[n]);return t},u=(t,e)=>i(t,l(e)),f=(t,e)=>{var n={};for(var r in t)c.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&o)for(var r of o(t))e.indexOf(r)<0&&p.call(t,r)&&(n[r]=t[r]);return n};const d={sidebar_title:"Internal"},g="Git Internal",b={unversionedId:"service/forge/git/git-internal",id:"service/forge/git/git-internal",title:"Git Internal",description:"| str    | object type   | number |",source:"@site/../notes/service/forge/git/git-internal.md",sourceDirName:"service/forge/git",slug:"/service/forge/git/internal",permalink:"/notes/service/forge/git/internal",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/git/git-internal.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1665107861,formattedLastUpdatedAt:"Oct 7, 2022",frontMatter:{sidebar_title:"Internal"},sidebar:"docs",previous:{title:"Git Hook",permalink:"/notes/service/forge/git/hook"},next:{title:"git-secret",permalink:"/notes/service/forge/git/secret"}},k={},h=[{value:"sha256",id:"sha256",level:2}],N={toc:h},y="wrapper";function O(t){var e=t,{components:n}=e,a=f(e,["components"]);return(0,r.kt)(y,u(s(s({},N),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",s({},{id:"git-internal"}),"Git Internal"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:null}),"str"),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"object type"),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"number"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"commit"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"OBJ_COMMIT"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"1")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"tree"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"OBJ_TREE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"2")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"blob"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"OBJ_BLOB"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"3")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"tag"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"OBJ_TAG"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null})),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"OBJ_OFS_DELTA"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null})),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"OBJ_REF_DELTA"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"7")))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://git-scm.com/book/en/v2/Git-Internals-Plumbing-and-Porcelain"}),"Git Internals"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://git-scm.com/book/en/v2/Git-Internals-Git-Objects"}),"Git Objects"))))),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-bash"}),'echo -n hello | git hash-object --stdin\n# blob <size>\\0\nprintf \'blob 5\\0hello\' | sha1sum\nCONTENTS=hello sh -c \'printf "blob ${#CONTENTS}\\0$CONTENTS"\' | sha1sum\n\necho -n hello > /tmp/hello\nfile=/tmp/hello\n(\n  stat --printf="blob %s\\0" "$file"\n  cat "$file"\n) | sha1sum\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},".git",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"HEAD"),(0,r.kt)("li",{parentName:"ul"},"config"),(0,r.kt)("li",{parentName:"ul"},"description"),(0,r.kt)("li",{parentName:"ul"},"hooks/"),(0,r.kt)("li",{parentName:"ul"},"info/"),(0,r.kt)("li",{parentName:"ul"},"objects/",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"info/"),(0,r.kt)("li",{parentName:"ul"},"pack/ - ",(0,r.kt)("a",s({parentName:"li"},{href:"https://git-scm.com/docs/gitformat-pack"}),"Git pack format"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"pack-.{pack,idx}"),(0,r.kt)("li",{parentName:"ul"},"pack-.rev"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pack-*.mtimes")),(0,r.kt)("li",{parentName:"ul"},"multi-pack-index"))))),(0,r.kt)("li",{parentName:"ul"},"refs/")))),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"#\ngit init /tmp/git\ncd /tmp/git\necho -n hello | git hash-object -w --stdin\nfind .git/objects -type f\nfile .git/objects/b6/fc4c620b67d95f953a5c1c1230aaab5db5a1b0 # zlib compressed data\ngit cat-file -p b6fc4c620b67d95f953a5c1c1230aaab5db5a1b0\ngit cat-file -t b6fc4c620b67d95f953a5c1c1230aaab5db5a1b0 # blob\n\necho -n hello > hello.txt\ngit add hello.txt\ngit commit -m 'hello.txt'\n\ngit cat-file -p master^{tree} # hello.txt\nfind .git/objects -type f\ngit cat-file -t 04df07b08ca746b3167d0f1d1514e2f39a52c16c # tree\ngit cat-file -p 04df07b08ca746b3167d0f1d1514e2f39a52c16c\n# 100644 blob b6fc4c620b67d95f953a5c1c1230aaab5db5a1b0    hello.txt\ngit cat-file -t d7ca319a50ed5fb97583cc0ef251d19b503caa6d # commit\ngit cat-file -p d7ca319a50ed5fb97583cc0ef251d19b503caa6d\n# author wener <email> 1665103472 +0800\n# committer wener <email> 1665103472 +0800\n# gpgsig\n#\n# hello.txt\n\ngit write-tree\ngit update-index --cacheinfo 100644 $(git hash-object hello.txt) hello.txt\n\necho new > new.txt\ngit update-index --add new.txt\ngit write-tree\n\ngit cat-file -p $(git write-tree)\n\ngit read-tree --prefix=bak $(git write-tree)\n\necho 'commit' | git commit-tree $(git write-tree)\ngit cat-file -p dc1eb3\n\necho 'Second commit' | git commit-tree $(git write-tree) -p dc1eb3\ngit cat-file -p 8989b5\ngit log --stat 8989b5\n")),(0,r.kt)("h2",s({},{id:"sha256"}),"sha256"),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-conf"}),"[core]\n    repositoryFormatVersion = 1\n[extensions]\n    objectFormat = sha256\n    compatObjectFormat = sha1\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://git-scm.com/docs/hash-function-transition/"}),"https://git-scm.com/docs/hash-function-transition/"))))}O.isMDXComponent=!0}}]);