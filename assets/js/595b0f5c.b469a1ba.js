"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[24525],{49613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(59496);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var c=a.createContext({}),i=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=i(e.components);return a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=i(n),d=l,E=u["".concat(c,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(E,s(s({ref:t},p),{},{components:n})):a.createElement(E,s({ref:t},p))}));function d(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,s=new Array(r);s[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,s[1]=o;for(var i=2;i<r;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},56675:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return d},default:function(){return k},frontMatter:function(){return u},metadata:function(){return E},toc:function(){return N}});var a=n(49613),l=Object.defineProperty,r=Object.defineProperties,s=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&p(e,n,t[n]);if(o)for(var n of o(t))i.call(t,n)&&p(e,n,t[n]);return e};const u={title:"ScyllaDB"},d="ScyllaDB",E={unversionedId:"db/column/scylladb",id:"db/column/scylladb",title:"ScyllaDB",description:"- scylladb/scylla",source:"@site/../notes/db/column/scylladb.md",sourceDirName:"db/column",slug:"/db/column/scylladb",permalink:"/notes/db/column/scylladb",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/db/column/scylladb.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1664328487,formattedLastUpdatedAt:"Sep 28, 2022",frontMatter:{title:"ScyllaDB"},sidebar:"docs",previous:{title:"DuckDB",permalink:"/notes/db/column/duckdb"},next:{title:"Database Awesome",permalink:"/notes/db/awesome"}},y={},N=[{value:"cqlsh",id:"cqlsh",level:2},{value:"CQL",id:"cql",level:2},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"NodeJS",id:"nodejs",level:2}],b={toc:N};function k(e){var t,n=e,{components:l}=n,p=((e,t)=>{var n={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&i.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=m(m({},b),p),r(t,s({components:l,mdxType:"MDXLayout"}))),(0,a.kt)("h1",m({},{id:"scylladb"}),"ScyllaDB"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/scylladb/scylladb"}),"scylladb/scylla"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"AGPL, C++"),(0,a.kt)("li",{parentName:"ul"},"\u4f7f\u7528 C++ \u5b9e\u73b0\u7684 Cassandra"),(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u4f9d\u8d56 Zookeeper"),(0,a.kt)("li",{parentName:"ul"},"\u8f7b\u91cf\u7ea7\u4e8b\u52a1 Lightweight Transactions / LWT"),(0,a.kt)("li",{parentName:"ul"},"Amazon DynamoDB \u517c\u5bb9\u63a5\u53e3"),(0,a.kt)("li",{parentName:"ul"},"\u652f\u6301 CDC/Change Data Capture"),(0,a.kt)("li",{parentName:"ul"},"\u57fa\u4e8e ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/scylladb/seastar"}),"seastar")," \u6846\u67b6"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://docs.scylladb.com/using-scylla/cassandra-compatibility/"}),"Apache Cassandra Compatibility"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Apache Cassandra 3.11"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://docs.scylladb.com/getting-started/system-requirements"}),"\u8981\u6c42"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6700\u5c0f 4 \u6838, 2G, SSD"),(0,a.kt)("li",{parentName:"ul"},"\u751f\u4ea7 20 \u6838, 128G, RAID0 4 SSD 1-5TB"),(0,a.kt)("li",{parentName:"ul"},"\u5206\u6790 28 \u6838, 256G, NVMe 10TB"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://manager.docs.scylladb.com/stable/"}),"Scylla Manager"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"scylladb \u7ba1\u7406\u5e73\u53f0"),(0,a.kt)("li",{parentName:"ul"},"\u4f8b\u5982 \u5907\u4efd\u3001\u6062\u590d\u3001\u96c6\u7fa4\u72b6\u6001"),(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u8d85\u8fc7 5 \u4e2a\u8282\u70b9\u514d\u8d39"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://monitoring.docs.scylladb.com/stable/"}),"Scylla Monitor"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"scylladb \u76d1\u63a7\u5e73\u53f0"),(0,a.kt)("li",{parentName:"ul"},"Prometheus + Grafana"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/scylladb/scylla-operator"}),"scylladb/scylla-operator")),(0,a.kt)("li",{parentName:"ul"},"Why C++ ",(0,a.kt)("a",m({parentName:"li"},{href:"https://news.ycombinator.com/item?id=28294546"}),"https://news.ycombinator.com/item?id=28294546"))),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"port"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"for"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"7000-7001"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"Inter-node RPC")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"9042"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"CQL")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"9160"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"Thrift")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"10000"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"REST API")))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"# https://hub.docker.com/r/scylladb/scylla/\n# /etc/scylla/scylla.yaml\n# 7199 JMX\n# SCYLLA_JMX_ADDR=-ja 0.0.0.0 SCYLLA_JMX_REMOTE=-r\n#  -v $PWD/data:/var/lib/scylla \\\n# Swagger http://localhost:10000/ui\n# https://docs.scylladb.com/stable/operating-scylla/admin.html\ndocker run --rm -it \\\n  -p 9042:9042 -p 19042:19042 -p 9160:9160 -p 10000:10000 \\\n  --name scylla scylladb/scylla --smp 1 --api-address 0.0.0.0\n\ndocker exec -it scylla nodetool status\ndocker exec -it scylla cqlsh\n")),(0,a.kt)("h2",m({},{id:"cqlsh"}),"cqlsh"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-sql"}),"SHOW VERSION;\nSHOW HOST;\n\nSHOW SESSION $id;\n\nSOURCE '/data/commands.cql'\n\nCAPTURE;\nCAPTURE OFF;\nCAPTURE '/data/file';\n\nTRACING ON;\nTRACING OFF;\n\nPAGING ON;\nPAGING OFF;\nPAGING $page_size_in_rows;\n\nEXPAND ON;\nEXPAND OFF;\n\n-- LOGIN <username> [<password>]\n\nCLEAR;\nCLS;\n\n-- DESCRIBE <>\nDESCRIBE CLUSTER;\nDESCRIBE SCHEMA;\nDESCRIBE KEYSPACES;\nDESCRIBE KEYSPACE keyspace_name;\nDESCRIBE TABLES;\nDESCRIBE TABLE table_name;\nDESCRIBE MATERIALIZED VIEW view_name;\nDESCRIBE TYPES;\nDESCRIBE TYPE type_name;\nDESCRIBE FUNCTIONS;\nDESCRIBE FUNCTION function_name;\nDESCRIBE AGGREGATES;\nDESCRIBE AGGREGATE aggregate_function_name;\n\n-- COPY <table name> [(<column>, ...)] TO <file name> WITH <copy option> [AND <copy option> ...]\n-- MAXREQUESTS=6 PAGESIZE=1000 PAGETIMEOUT=10\n-- BEGINTOKEN, ENDTOKEN\n-- MAXOUTPUTSIZE=-1\n-- ENCODING=utf8\n\n-- COPY <table name> [(<column>, ...)] FROM <file name> WITH <copy option> [AND <copy option> ...]\n-- INGESTRATE=100000 MAXROWS=-1 SKIPROWS=0 SKIPCOLS=0 MAXPARSEERRORS=-1 MAXINSERTERRORS=1000\n-- ERRFILE=import_<ks>_<table>.err\n-- MAXBATCHSIZE=20 MINBATCHSIZE=2\n-- CHUNKSIZE=1000\nCOPY test FROM 'file.csv' WITH HEADER=true;\n\n-- COPY\n-- NULLVAL=null HEADER=false DECIMALSEP=.\n-- THOUSANDSSEP\n-- BOOLSTYlE True, False\n-- NUMPROCESSES\n-- MAXATTEMPTS=5\n-- REPORTFREQUENCY=0.25\n-- RATEFILE\n")),(0,a.kt)("h2",m({},{id:"cql"}),"CQL"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-sql"}),"CREATE KEYSPACE catalog WITH REPLICATION = { 'class' : 'NetworkTopologyStrategy','DC1' : 3};\nuse catalog;\nCREATE TABLE mutant_data (\n   first_name text,\n   last_name text,\n   address text,\n   picture_location text,\n   PRIMARY KEY((first_name, last_name)));\n")),(0,a.kt)("h2",m({},{id:"\u914d\u7f6e"}),"\u914d\u7f6e"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://docs.scylladb.com/stable/getting-started/system-configuration.html"}),"https://docs.scylladb.com/stable/getting-started/system-configuration.html"))),(0,a.kt)("h2",m({},{id:"nodejs"}),"NodeJS"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"pnpm add cassandra-driver\npnpm add -D tsx typescript @types/node\n\ndocker exec -it scylla nodetool status\ndocker exec -it scylla cqlsh -e \"CREATE KEYSPACE catalog WITH REPLICATION = { 'class' : 'NetworkTopologyStrategy','datacenter1':1 }\"\ndocker exec -it scylla cqlsh -k catalog -e \"CREATE TABLE users (name text, age int, PRIMARY KEY(name))\"\n")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-js",metastring:'title="test.ts"',title:'"test.ts"'}),"import { Client } from 'cassandra-driver';\n\nconst client = new Client({\n  contactPoints: ['localhost'],\n  localDataCenter: 'datacenter1',\n  keyspace: 'catalog',\n});\n\nawait client.batch(\n  [\n    {\n      query: 'insert into users (name, age) values (?,?)',\n      params: ['test', 1],\n    },\n    {\n      query: 'insert into users (name, age) values (?,?)',\n      params: ['test2', 1],\n    },\n    { query: 'update users set age = ? where name = ?', params: [2, 'test2'] },\n  ],\n  { prepare: true },\n);\n\nconsole.log((await client.execute(`SELECT * FROM users WHERE name = ?`, ['test2'])).rows);\n\nprocess.exit(0);\n")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"pnpm tsx test.ts\n")))}k.isMDXComponent=!0}}]);