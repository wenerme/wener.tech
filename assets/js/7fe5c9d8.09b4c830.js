"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[5456],{49613:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=s(r),m=a,y=f["".concat(c,".").concat(m)]||f[m]||l[m]||o;return r?n.createElement(y,p(p({ref:t},u),{},{components:r})):n.createElement(y,p({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,p=new Array(o);p[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,p[1]=i;for(var s=2;s<o;s++)p[s]=r[s];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},39369:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l}});var n=r(96600),a=r(27279),o=(r(59496),r(49613)),p=["components"],i={title:"trpc"},c="trpc",s={unversionedId:"web/script/lib/trpc",id:"web/script/lib/trpc",title:"trpc",description:"- trpc/trpc",source:"@site/../notes/web/script/lib/trpc.md",sourceDirName:"web/script/lib",slug:"/web/script/lib/trpc",permalink:"/notes/web/script/lib/trpc",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/../notes/web/script/lib/trpc.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1663838677,formattedLastUpdatedAt:"Sep 22, 2022",frontMatter:{title:"trpc"},sidebar:"docs",previous:{title:"tap",permalink:"/notes/web/script/lib/tap"},next:{title:"Typescript",permalink:"/notes/web/script/typescript/"}},u={},l=[{value:"fastify",id:"fastify",level:2}],f={toc:l};function m(e){var t=e.components,r=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"trpc"},"trpc"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/trpc/trpc"},"trpc/trpc")),(0,o.kt)("li",{parentName:"ul"},"@trpc/next - NextJS"),(0,o.kt)("li",{parentName:"ul"},"spec",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://trpc.io/docs/rpc"},"https://trpc.io/docs/rpc"))))),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"\u4e0d\u652f\u6301 react-query 4 ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/trpc/trpc/issues/2243"},"#2243")),(0,o.kt)("li",{parentName:"ul"},"Support for additional Content-Types ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/trpc/trpc/issues/1937"},"#")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm add @trpc/client @trpc/server\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import * as trpc from '@trpc/server';\nimport {z} from 'zod';\n\nconst appRouter = trpc\n  .router()\n  .query('getUser', {\n    input: (val: unknown) => {\n      if (typeof val === 'string') return val;\n      throw new Error(`Invalid input: ${typeof val}`);\n    },\n    async resolve(req) {\n      req.input; // string\n      return {id: req.input, name: 'Bilbo'};\n    },\n  })\n  .mutation('createUser', {\n    // validate input with Zod\n    input: z.object({name: z.string().min(5)}),\n    async resolve(req) {\n      // use your ORM of choice\n      return await UserModel.create({\n        data: req.input,\n      });\n    },\n  });\n\nexport type AppRouter = typeof appRouter;\n")),(0,o.kt)("h2",{id:"fastify"},"fastify"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="context.ts"',title:'"context.ts"'},"import {inferAsyncReturnType} from '@trpc/server';\nimport {CreateFastifyContextOptions} from '@trpc/server/adapters/fastify';\n\nexport function createContext({req, res}: CreateFastifyContextOptions) {\n  const user = {name: req.headers.username ?? 'anonymous'};\n\n  return {req, res, user};\n}\n\nexport type Context = inferAsyncReturnType<typeof createContext>;\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import {fastifyTRPCPlugin} from '@trpc/server/adapters/fastify';\nimport fastify from 'fastify';\nimport {createContext} from './context';\nimport {appRouter} from './router';\nimport ws from '@fastify/websocket';\n\nconst server = fastify({\n  maxParamLength: 5000,\n});\n\n// \u652f\u6301 subscription\nserver.register(ws);\n\nserver.register(fastifyTRPCPlugin, {\n  prefix: '/trpc',\n  trpcOptions: {router: appRouter, createContext},\n});\n\n(async () => {\n  try {\n    await server.listen(3000);\n  } catch (err) {\n    server.log.error(err);\n    process.exit(1);\n  }\n})();\n")))}m.isMDXComponent=!0}}]);