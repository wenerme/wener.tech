/*! For license information please see f3228e5b.138b8fdb.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[50024],{29128:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>a});var i=t(2488),s=t(62780);const r={title:"chan_dongle"},d="chan_dongle",l={id:"voip/asterisk/chan_dongle",title:"chan_dongle",description:"- \u662f\u4ec0\u4e48\uff1f",source:"@site/../notes/voip/asterisk/chan_dongle.md",sourceDirName:"voip/asterisk",slug:"/voip/asterisk/chan_dongle",permalink:"/notes/voip/asterisk/chan_dongle",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/voip/asterisk/chan_dongle.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1617462276,formattedLastUpdatedAt:"Apr 3, 2021",frontMatter:{title:"chan_dongle"},sidebar:"docs",previous:{title:"DAHDi Channel",permalink:"/notes/voip/asterisk/chan_dahdi"},next:{title:"chan_extra",permalink:"/notes/voip/asterisk/chan_extra"}},o={},a=[{value:"dongle.conf",id:"dongleconf",level:2},{value:"command",id:"command",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"chan_dongle",children:"chan_dongle"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u662f\u4ec0\u4e48\uff1f\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Asterisk \u652f\u6301\u5916\u7f6e GSM \u6a21\u5757"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/bg111/asterisk-chan-dongle/wiki/Requirements-and-Limitations",children:"Requirements and Limitations"})}),"\n",(0,i.jsxs)(n.li,{children:["\u6e90\u7801\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u76ee\u524d\u5927\u591a\u4f7f\u7528 ",(0,i.jsx)(n.a,{href:"https://github.com/oleg-krv/asterisk-chan-dongle",children:"oleg-krv/asterisk-chan-dongle"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u6700\u8fd1\u63d0\u4ea4 fork ",(0,i.jsx)(n.a,{href:"https://github.com/phcoder/asterisk-chan-dongle",children:"phcoder/asterisk-chan-dongle"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\u53c2\u8003\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://zhuanlan.zhihu.com/p/100809316",children:"OpenWRT\u901a\u8fc73G Modem\u52a0asterisk\u5c06GSM\u901a\u8bdd\u8f6c\u4e3aSIP"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"apk add asterisk-chan-dongle\n\n# \u914d\u7f6e\ncp /etc/asterisk/dongle.conf.sample /etc/asterisk/dongle.conf\n\n# \u52a0\u8f7d\u6a21\u5757\nasterisk -rx 'module load chan_dongle.so'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"dongleconf",children:"dongle.conf"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[general]\n\ninterval=15\t\t\t; \u5c1d\u8bd5\u8fde\u63a5\u8bbe\u5907\u7684\u95f4\u9694\n\n;------------------------------ JITTER BUFFER CONFIGURATION --------------------------\n;jbenable = yes\t\t\t; Enables the use of a jitterbuffer on the receiving side of a\n\t\t\t\t; Dongle channel. Defaults to \"no\". An enabled jitterbuffer will\n\t\t\t\t; be used only if the sending side can create and the receiving\n\t\t\t\t; side can not accept jitter. The Dongle channel can't accept jitter,\n\t\t\t\t; thus an enabled jitterbuffer on the receive Dongle side will always\n\t\t\t\t; be used if the sending side can create jitter.\n\n;jbforce = no\t\t\t; Forces the use of a jitterbuffer on the receive side of a Dongle\n\t\t\t\t; channel. Defaults to \"no\".\n\n;jbmaxsize = 200\t\t; Max length of the jitterbuffer in milliseconds.\n\n;jbresyncthreshold = 1000\t; Jump in the frame timestamps over which the jitterbuffer is\n\t\t\t\t; resynchronized. Useful to improve the quality of the voice, with\n\t\t\t\t; big jumps in/broken timestamps, usually sent from exotic devices\n\t\t\t\t; and programs. Defaults to 1000.\n\n;jbimpl = fixed\t\t\t; Jitterbuffer implementation, used on the receiving side of a Dongle\n\t\t\t\t; channel. Two implementations are currently available - \"fixed\"\n\t\t\t\t; (with size always equals to jbmaxsize) and \"adaptive\" (with\n\t\t\t\t; variable size, actually the new jb of IAX2). Defaults to fixed.\n\n;jbtargetextra = 40\t\t; This option only affects the jb when 'jbimpl = adaptive' is set.\n\t\t\t\t; The option represents the number of milliseconds by which the new jitter buffer\n\t\t\t\t; will pad its size. the default is 40, so without modification, the new\n\t\t\t\t; jitter buffer will set its size to the jitter value plus 40 milliseconds.\n\t\t\t\t; increasing this value may help if your network normally has low jitter,\n\t\t\t\t; but occasionally has spikes.\n\n;jblog = no\t\t\t; Enables jitterbuffer frame logging. Defaults to \"no\".\n;-----------------------------------------------------------------------------------\n\n; \u9ed8\u8ba4\u8bbe\u7f6e\n[defaults]\n\ncontext=default\t\t\t; \u547c\u5165\u9ed8\u8ba4 context\ngroup=0\t\t\t\t      ; calling group\nrxgain=0\t\t\t      ; increase the incoming volume; may be negative\ntxgain=0\t\t\t      ; increase the outgoint volume; may be negative\nautodeletesms=yes\t\t; \u81ea\u52a8\u5220\u9664\u6536\u5230\u7684\u77ed\u4fe1\nresetdongle=yes\t\t\t; reset dongle during initialization with ATZ command\nu2diag=-1\t\t\t      ; set ^U2DIAG parameter on device (0 = disable everything except modem function) ; -1 not use ^U2DIAG command\nusecallingpres=yes\t; use the caller ID presentation or not\ncallingpres=allowed_passed_screen ; set caller ID presentation\t\tby default use default network settings\ndisablesms=no\t\t\t; disable of SMS reading from device when received\n\t\t\t\t;  chan_dongle has currently a bug with SMS reception. When a SMS gets in during a\n\t\t\t\t;  call chan_dongle might crash. Enable this option to disable sms reception.\n\t\t\t\t;  default = no\n\nlanguage=en\t\t\t  ; \u901a\u9053\u9ed8\u8ba4\u8bed\u8a00\nsmsaspdu=yes\t\t\t; PDU \u65b9\u5f0f\u53d1\u9001\u77ed\u4fe1\nmindtmfgap=45\t\t\t; minimal interval from end of previews DTMF from begining of next in ms\nmindtmfduration=80\t\t; minimal DTMF tone duration in ms\nmindtmfinterval=200\t\t; minimal interval between ends of DTMF of same digits in ms\n\ncallwaiting=auto\t\t; if 'yes' allow incoming calls waiting; by default use network settings\n\t\t\t\t; if 'no' waiting calls just ignored\ndisable=no\t\t\t; OBSOLETED by initstate: if 'yes' no load this device and just ignore this section\n\ninitstate=start\t\t\t; specified initial state of device, must be one of 'stop' 'start' 'remote'\n\t\t\t\t;   'remove' same as 'disable=yes'\n\nexten=+1234567890\t\t; exten for start incoming calls, only in case of Subscriber Number not available!, also set to CALLERID(ndid)\n\ndtmf=relax\t\t\t; control of incoming DTMF detection, possible values:\n\t\t\t\t;   off\t   - off DTMF tones detection, voice data passed to asterisk unaltered\n\t\t\t\t;              use this value for gateways or if not use DTMF for AVR or inside dialplan\n\t\t\t\t;   inband - do DTMF tones detection\n\t\t\t\t;   relax  - like inband but with relaxdtmf option\n\t\t\t\t;  default is 'relax' by compatibility reason\n\n; \u8bbe\u5907\n[dongle0]\naudio=/dev/ttyUSB1\t\t; \u97f3\u9891 tty \u7aef\u53e3\ndata=/dev/ttyUSB2\t\t  ; AT \u547d\u4ee4 tty \u7aef\u53e3\n\n; \u4f7f\u7528 imei, imsi \u53ef\u5ffd\u7565 audio, data \u914d\u7f6e - Linux \u4e0b\u80fd\u81ea\u52a8\u53d1\u73b0\n; audio \u548c data \u914d\u7f6e\u4f18\u5148\n; 15 \u4e2a\u6570\u5b57\nimei=123456789012345\nimsi=123456789012345\n"})}),"\n",(0,i.jsx)(n.h2,{id:"command",children:"command"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"cmd"}),(0,i.jsx)(n.th,{children:"desc"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle callwaiting"}),(0,i.jsx)(n.td,{children:"Enable/Disable Call-Waiting on the dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle cmd"}),(0,i.jsx)(n.td,{children:"Send commands to port for debugging"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle discovery"}),(0,i.jsx)(n.td,{children:"Discovery devices and create config"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle pdu"}),(0,i.jsx)(n.td,{children:"Send PDU of SMS from the dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle reload"}),(0,i.jsx)(n.td,{children:"Reload dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle remove"}),(0,i.jsx)(n.td,{children:"Remove dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle reset"}),(0,i.jsx)(n.td,{children:"Reset dongle now"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle restart"}),(0,i.jsx)(n.td,{children:"Restart dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle show device settings"}),(0,i.jsx)(n.td,{children:"Show Dongle device settings"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle show device state"}),(0,i.jsx)(n.td,{children:"Show Dongle device state"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle show device statistics"}),(0,i.jsx)(n.td,{children:"Show Dongle device statistics"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle show devices"}),(0,i.jsx)(n.td,{children:"Show Dongle devices state"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle show version"}),(0,i.jsx)(n.td,{children:"Show module version"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle sms"}),(0,i.jsx)(n.td,{children:"Send SMS from the dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle start"}),(0,i.jsx)(n.td,{children:"Start dongle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"`dongle stop <now"}),(0,i.jsx)(n.td,{children:"gracefully"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"dongle ussd"}),(0,i.jsx)(n.td,{children:"Send USSD commands to the dongle"})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["IMSI ",(0,i.jsx)(n.a,{href:"https://zh.wikipedia.org/wiki/%E5%9B%BD%E9%99%85%E7%A7%BB%E5%8A%A8%E7%94%A8%E6%88%B7%E8%AF%86%E5%88%AB%E7%A0%81",children:"https://zh.wikipedia.org/wiki/\u56fd\u9645\u79fb\u52a8\u7528\u6237\u8bc6\u522b\u7801"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["IMEI ",(0,i.jsx)(n.a,{href:"https://zh.wikipedia.org/wiki/IMEI",children:"https://zh.wikipedia.org/wiki/IMEI"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.quora.com/What-is-the-difference-between-ICCID-IMSI-and-IMEI-numbers",children:"https://www.quora.com/What-is-the-difference-between-ICCID-IMSI-and-IMEI-numbers"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["iPhone \u83b7\u53d6\u65b9\u5f0f",(0,i.jsx)(n.a,{href:"https://support.apple.com/zh-cn/HT204073",children:"https://support.apple.com/zh-cn/HT204073"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.dc-unlocker.com/",children:"https://www.dc-unlocker.com/"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"http://a-zgsm.com/huawei.php",children:"http://a-zgsm.com/huawei.php"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/bg111/asterisk-chan-dongle",children:"https://github.com/bg111/asterisk-chan-dongle"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"http://www.modemunlock.com/huawei-modem-firmwares-download-all-huawei-firmwares",children:"http://www.modemunlock.com/huawei-modem-firmwares-download-all-huawei-firmwares"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["USSD -> ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Unstructured_Supplementary_Service_Data",children:"https://en.wikipedia.org/wiki/Unstructured_Supplementary_Service_Data"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["PDU ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Protocol_data_unit",children:"https://en.wikipedia.org/wiki/Protocol_data_unit"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"http://www.smartposition.nl/resources/sms_pdu.html",children:"http://www.smartposition.nl/resources/sms_pdu.html"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"smsc Short Message Service Center\uff08\u77ed\u6d88\u606f\u670d\u52a1\u4e2d\u5fc3\uff09"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'$ blkid /dev/sr1\n# /dev/sr1: UUID="2009-12-16-02-00-00-00" LABEL="Mobile Partner" TYPE="iso9660" PTTYPE="mac"\nmount -t iso9660 /dev/sr1 /mnt/a\n\n# MAC\nioreg -p IOUSB -l -b | grep -10 -i huawei\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"http://m2msupport.net/m2msupport/module-tester/",children:"http://m2msupport.net/m2msupport/module-tester/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://wiki.archlinux.org/index.php/Huawei_E1550_3G_modem",children:"https://wiki.archlinux.org/index.php/Huawei_E1550_3G_modem"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'apk add screen usb-modeswitch-udev usbutils\n\n# \u63d2\u5165 USB\n# \u53ef\u4ee5\u8bbf\u95ee\u5230\u9644\u5e26\u7684\u5b58\u50a8\nblkid /dev/sr1\n# /dev/sr1: UUID="2009-12-16-02-00-00-00" LABEL="Mobile Partner" TYPE="iso9660" PTTYPE="mac"\n# mount -t iso9660 /dev/sr1 /mnt/a\n# \u67e5\u770b product\nlsusb.py\n# \u5207\u6362\u4e3a modem \u6a21\u5f0f, \u66ff\u6362\u4e3a\u81ea\u5df1\u7684\n# lsusb.py 2>/dev/null | sed -nre \'s/^.*?12d1:(\\S+).*/\\1/p\'\nPRODUCT_ID=`lsusb.py 2>/dev/null | sed -nre \'s/^.*?12d1:(\\S+).*/\\1/p\'`\n/lib/udev/usb_modeswitch --vendor 0x12d1 --product=0x$PRODUCT_ID --type option-zerocd\nmodprobe usbserial vendor=0x12d1 product=0x$PRODUCT_ID\n\n# 1001 \u7684\u4f1a\u51fa\u6765\u4e09\u4e2a\u7aef\u53e3, \u5206\u522b\u4e3a modem,diag,pcui\n# 1003 \u7684\u4e0d\u4f1a\u6709 diag, \u76ee\u524d\u731c\u6d4b\u4e3a\u8bed\u97f3\u62e8\u53f7\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},38088:(e,n,t)=>{var i=t(96651),s=Symbol.for("react.element"),r=Symbol.for("react.fragment"),d=Object.prototype.hasOwnProperty,l=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function a(e,n,t){var i,r={},a=null,c=null;for(i in void 0!==t&&(a=""+t),void 0!==n.key&&(a=""+n.key),void 0!==n.ref&&(c=n.ref),n)d.call(n,i)&&!o.hasOwnProperty(i)&&(r[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===r[i]&&(r[i]=n[i]);return{$$typeof:s,type:e,key:a,ref:c,props:r,_owner:l.current}}n.Fragment=r,n.jsx=a,n.jsxs=a},2488:(e,n,t)=>{e.exports=t(38088)},62780:(e,n,t)=>{t.d(n,{I:()=>l,M:()=>d});var i=t(96651);const s={},r=i.createContext(s);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);