"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[23854],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=s(n),f=o,d=m["".concat(l,".").concat(f)]||m[f]||p[f]||a;return n?r.createElement(d,i(i({ref:t},u),{},{components:n})):r.createElement(d,i({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16136:function(e,t,n){n.r(t),n.d(t,{assets:function(){return v},contentTitle:function(){return f},default:function(){return y},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return w}});var r=n(49613),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))l.call(t,n)&&u(e,n,t[n]);if(c)for(var n of c(t))s.call(t,n)&&u(e,n,t[n]);return e};const m={title:"owntone"},f="owntone",d={unversionedId:"service/media/server/owntone",id:"service/media/server/owntone",title:"owntone",description:"- owntone/owntone-server",source:"@site/../notes/service/media/server/owntone.md",sourceDirName:"service/media/server",slug:"/service/media/server/owntone",permalink:"/notes/service/media/server/owntone",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/media/server/owntone.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1657890515,formattedLastUpdatedAt:"Jul 15, 2022",frontMatter:{title:"owntone"},sidebar:"docs",previous:{title:"MiniDLNA",permalink:"/notes/service/media/server/minidlna"},next:{title:"vips",permalink:"/notes/service/media/vips"}},v={},w=[{value:"owntone.conf",id:"owntoneconf",level:2}],b={toc:w};function y(e){var t,n=e,{components:o}=n,u=((e,t)=>{var n={};for(var r in e)l.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&s.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=p(p({},b),u),a(t,i({components:o,mdxType:"MDXLayout"}))),(0,r.kt)("h1",p({},{id:"owntone"}),"owntone"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://github.com/owntone/owntone-server"}),"owntone/owntone-server"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"GPLv2, C+Vue"),(0,r.kt)("li",{parentName:"ul"},"DAAP (iTunes), MPD (Music Player Daemon) and RSP (Roku) media server"),(0,r.kt)("li",{parentName:"ul"},"forked-daapd"),(0,r.kt)("li",{parentName:"ul"},"DAAP - Digital Audio Access Protocol"))),(0,r.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://github.com/mikebrady/shairport-sync"}),"mikebrady/shairport-sync"))))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"# https://hub.docker.com/r/linuxserver/daapd\n# -e FILE__PASSWORD=/run/secrets/mysecretpassword\n# --net host \u80fd\u66b4\u9732\u66f4\u591a\u670d\u52a1\n# 3689 http, 3688 websocket\ndocker run --rm -it \\\n  -v $PWD/config:/config \\\n  -v $PWD/music:/music \\\n  -p 3689:3689 \\\n  -p 3688:3688 \\\n  -e PUID=1000 \\\n  -e PGID=1000 \\\n  -e TZ=Asia/Shanghai \\\n  --name daapd linuxserver/daapd\n")),(0,r.kt)("h2",p({},{id:"owntoneconf"}),"owntone.conf"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-conf"}),"")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://github.com/owntone/owntone-server/blob/master/owntone.conf.in"}),"https://github.com/owntone/owntone-server/blob/master/owntone.conf.in"))))}y.isMDXComponent=!0}}]);