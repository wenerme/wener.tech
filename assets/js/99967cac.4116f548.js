"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[90514],{49613:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return d}});var n=r(59496);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),m=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},p=function(t){var e=m(t.components);return n.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},u=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),u=m(r),d=a,k=u["".concat(s,".").concat(d)]||u[d]||c[d]||i;return r?n.createElement(k,o(o({ref:e},p),{},{components:r})):n.createElement(k,o({ref:e},p))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:a,o[1]=l;for(var m=2;m<i;m++)o[m]=r[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},26526:function(t,e,r){r.r(e),r.d(e,{assets:function(){return g},contentTitle:function(){return d},default:function(){return y},frontMatter:function(){return u},metadata:function(){return k},toc:function(){return b}});var n=r(49613),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(t,e,r)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,c=(t,e)=>{for(var r in e||(e={}))s.call(e,r)&&p(t,r,e[r]);if(l)for(var r of l(e))m.call(e,r)&&p(t,r,e[r]);return t};const u={title:"Metrics"},d="Metrics",k={unversionedId:"devops/kubernetes/internal/k8s-metrics",id:"devops/kubernetes/internal/k8s-metrics",title:"Metrics",description:"|                                           metric | for                 |",source:"@site/../notes/devops/kubernetes/internal/k8s-metrics.md",sourceDirName:"devops/kubernetes/internal",slug:"/devops/kubernetes/internal/k8s-metrics",permalink:"/notes/devops/kubernetes/internal/k8s-metrics",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/internal/k8s-metrics.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1689238697,formattedLastUpdatedAt:"Jul 13, 2023",frontMatter:{title:"Metrics"},sidebar:"docs",previous:{title:"Kubernetes \u6807\u7b7e",permalink:"/notes/devops/kubernetes/internal/k8s-labels"},next:{title:"Kubernetes \u8c03\u5ea6",permalink:"/notes/devops/kubernetes/internal/k8s-scheduling"}},g={},b=[],N={toc:b};function y(t){var e,r=t,{components:a}=r,p=((t,e)=>{var r={};for(var n in t)s.call(t,n)&&e.indexOf(n)<0&&(r[n]=t[n]);if(null!=t&&l)for(var n of l(t))e.indexOf(n)<0&&m.call(t,n)&&(r[n]=t[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(e=c(c({},N),p),i(e,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",c({},{id:"metrics"}),"Metrics"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),'sum(rate(container_cpu_usage_seconds_total{container="apisix"}[$__rate_interval]))\n\nsum(container_memory_working_set_bytes{namespace="haproxy-controller",container="haproxytech-ingress-controller"})\n')),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:"right"}),"metric"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"for"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),(0,n.kt)("strong",{parentName:"td"},"CPU")),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_cpu_user_seconds_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"cpu user")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_cpu_system_seconds_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"cpu sys")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_cpu_usage_seconds_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"cpu total")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),(0,n.kt)("strong",{parentName:"td"},"Memory")),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_cache"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem cache")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_rss"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem rss")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_swap"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem swap")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_usage_bytes"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem usage")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_working_set_bytes"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem working set")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_max_usage_bytes"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem max usage")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_failcnt"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem failed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_memory_failures_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"allocation failures")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"kube_pod_container_resource_limits_memory_bytes"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"mem limit")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),(0,n.kt)("strong",{parentName:"td"},"IO")),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_fs_io_time_seconds_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_fs_io_time_weighted_seconds_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_fs_writes_bytes_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_fs_reads_bytes_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),(0,n.kt)("strong",{parentName:"td"},"Network")),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_network_receive_bytes_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_network_transmit_bytes_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_network_receive_packets_dropped_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_network_transmit_packets_dropped_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_network_receive_errors_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:"right"}),"container_network_transmit_errors_total"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://blog.freshtracks.io/a-deep-dive-into-kubernetes-metrics-part-3-container-resource-metrics-361c5ee46e66"}),"https://blog.freshtracks.io/a-deep-dive-into-kubernetes-metrics-part-3-container-resource-metrics-361c5ee46e66")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://github.com/google/cadvisor"}),"google/cadvisor")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/cluster-administration/system-metrics/"}),"https://kubernetes.io/docs/concepts/cluster-administration/system-metrics/")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://kubernetes.io/docs/reference/instrumentation/metrics/"}),"https://kubernetes.io/docs/reference/instrumentation/metrics/")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://github.com/kubernetes/kube-state-metrics"}),"kubernetes/kube-state-metrics"))))}y.isMDXComponent=!0}}]);