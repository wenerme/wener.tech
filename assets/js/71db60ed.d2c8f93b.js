"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[39247],{3905:function(e,t,n){n.d(t,{Zo:function(){return o},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),u=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},o=function(e){var t=u(e.components);return a.createElement(m.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,o=p(e,["components","mdxType","originalType","parentName"]),c=u(n),k=r,h=c["".concat(m,".").concat(k)]||c[k]||s[k]||l;return n?a.createElement(h,i(i({ref:t},o),{},{components:n})):a.createElement(h,i({ref:t},o))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var p={};for(var m in t)hasOwnProperty.call(t,m)&&(p[m]=t[m]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},37423:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return p},metadata:function(){return u},toc:function(){return s}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],p={title:"ohmjs"},m=void 0,u={unversionedId:"languages/parser/ohmjs",id:"languages/parser/ohmjs",title:"ohmjs",description:"- harc/ohm",source:"@site/notes/languages/parser/ohmjs.md",sourceDirName:"languages/parser",slug:"/languages/parser/ohmjs",permalink:"/notes/languages/parser/ohmjs",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/languages/parser/ohmjs.md",tags:[],version:"current",frontMatter:{title:"ohmjs"},sidebar:"docs",previous:{title:"Antlr 4",permalink:"/notes/languages/parser/antlr4"},next:{title:"Parser Awesome",permalink:"/notes/languages/parser/parser-awesome"}},o={},s=[{value:"\u8bed\u6cd5",id:"\u8bed\u6cd5",level:2},{value:"Rule int involves an alternation which has inconsistent arity",id:"rule-int-involves-an-alternation-which-has-inconsistent-arity",level:2},{value:"Reference Grammar",id:"reference-grammar",level:2}],c={toc:s};function k(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/harc/ohm"},"harc/ohm"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MIT, JS"),(0,l.kt)("li",{parentName:"ul"},"133kB, 36kB"),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u751f\u6210\u4ee3\u7801\uff0c\u4f7f\u7528\u7c7b\u4f3c Regex - \u6ce8\u8bed\u6cd5\u89e3\u6790",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u89c4\u5219\u590d\u7528 - ",(0,l.kt)("inlineCode",{parentName:"li"},'ListOf<option,",">')),(0,l.kt)("li",{parentName:"ul"},"\u8bed\u6cd5\u7ee7\u627f - ",(0,l.kt)("inlineCode",{parentName:"li"},"MyJS <: JS")))),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 semantics \u6dfb\u52a0\u6267\u884c\u903b\u8f91 - \u800c\u4e0d\u662f\u5728 grammar \u91cc\u5d4c\u5165"))),(0,l.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://ohmjs.org/editor/"},"https://ohmjs.org/editor/"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u56e0\u4e3a\u6267\u884c\u903b\u8f91\u662f\u5916\u90e8\u6dfb\u52a0\u7684\uff0c\u56e0\u6b64\u770b\u4e0d\u5230\u5b9e\u9645\u6267\u884c\u6548\u679c - \u548c ",(0,l.kt)("a",{parentName:"li",href:"/notes/languages/parser/peggy"},"PEG.js")," \u4e3b\u8981\u533a\u522b"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://ohmjs.org/docs/syntax-reference"},"https://ohmjs.org/docs/syntax-reference"))))),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u5ffd\u7565 \u7a7a\u767d",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u7279\u6b8a\u8bed\u6cd5\u907f\u514d\u5ffd\u7565"),(0,l.kt)("li",{parentName:"ul"},"\u4f8b\u5982: ",(0,l.kt)("inlineCode",{parentName:"li"},'#((space+ "not" space+)? spaces "in" spaces)'),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u505a\u5904\u7406\u4f1a\u5339\u914d ",(0,l.kt)("inlineCode",{parentName:"li"},"notin")))))),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u4e00\u4e9b\u8bed\u6cd5\u7cd6 - \u5f00\u53d1\u4f53\u9a8c\u597d"),(0,l.kt)("li",{parentName:"ul"},"\u4ea4\u4e92\u5f0f editor \u5f00\u53d1\u4f53\u9a8c\u597d - \u4f46\u76ee\u524d\u9519\u8bef\u6392\u67e5\u4e5f\u4e0d\u65b9\u4fbf"),(0,l.kt)("li",{parentName:"ul"},"\u6267\u884c\u903b\u8f91\u5916\u90e8\u6ce8\u5165 - \u76f8\u5bf9\u9ebb\u70e6\u4e00\u70b9\uff0c\u4f46\u65b9\u4fbf\u5b9e\u73b0\u591a\u5957\u6267\u884c\u903b\u8f91"),(0,l.kt)("li",{parentName:"ul"},"alternative \u7684\u65f6\u5019\u9700\u8981\u4e24\u90e8\u76f8\u540c\u6570\u91cf\u5143\u7d20 - \u5426\u5219\u9700\u8981\u52a0\u522b\u540d"))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Semantics",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6267\u884c\u903b\u8f91"),(0,l.kt)("li",{parentName:"ul"},"\u8981\u6c42\u53c2\u6570\u6570\u91cf\u5339\u914d"),(0,l.kt)("li",{parentName:"ul"},"\u7279\u6b8a\u56de\u6eda action",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"_","terminal"),(0,l.kt)("li",{parentName:"ul"},"_","nonterminal"),(0,l.kt)("li",{parentName:"ul"},"_","iter"))),(0,l.kt)("li",{parentName:"ul"},"Node - IterationNode\uff0c NonterminalNode\uff0c TerminalNode"),(0,l.kt)("li",{parentName:"ul"},"OperationName \u53ef\u4ee5\u4e3a\u65b9\u6cd5\u7b7e\u540d",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"prettyPrint(depth, strict)"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"this.args.depth"),(0,l.kt)("li",{parentName:"ul"},"\u589e\u52a0\u53c2\u6570\u540e\uff0c\u5219\u6240\u6709\u5185\u90e8\u8c03\u7528\u4e5f\u8981\u52a0\u53c2\u6570 - \u7c7b\u4f3c\u4e8e context")))))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},'const g = ohm.grammar(`\n  Arithmetic {\n    Exp = AddExp\n\n    AddExp = AddExp "+" MulExp  -- plus\n           | AddExp "-" MulExp  -- minus\n           | MulExp\n\n    MulExp = MulExp "*" number  -- times\n           | MulExp "/" number  -- div\n           | number\n\n    number = digit+\n  }\n`);\n\nconsole.assert(g.match(\'42\').succeeded());\n\nconst semantics = g.createSemantics();\n// \u5bf9\u5e94 syntax \u6267\u884c\nsemantics.addOperation(\'eval\', {\n  AddExp_plus(a, _, b) {\n    return a.eval() + b.eval();\n  },\n  AddExp_minus(a, _, b) {\n    return a.eval() - b.eval();\n  },\n  MulExp_times(a, _, b) {\n    return a.eval() * b.eval();\n  },\n  MulExp_div(a, _, b) {\n    return a.eval() / b.eval();\n  },\n  number(digits) {\n    return parseInt(digits.sourceString);\n  },\n});\n\nconsole.assert(sematics(g.match(\'1 + 1\')).eval() === 2);\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="toAST"',title:'"toAST"'},"import {toAST} from 'ohm-js/extras';\n// \u8f6c\u6362\u4e3a AST\nconst ast = toAST(match);\n\n// \u91cd\u65b0\u6620\u5c04\nconst ast = toAST(match, {\n  Equation: {content: 0},\n  // \u4f4d\u7f6e\u53d8\u4e3a key\uff0c\u4fee\u6539\u7c7b\u578b\n  AddExpr: {type: 'Expression', expr1: 0, op: 1, expr2: 2},\n});\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "AddExpr", // \u89c4\u5219\u540d\u5b57\n  "0": "24", // \u4f4d\u7f6e\u5185\u5bb9\n  "2": "6"\n}\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'concrete value - \u5982\u679c\u662f "xyz" \u8fd9\u6837\u7684\u5185\u5bb9\u4f1a\u5ffd\u7565'),(0,l.kt)("li",{parentName:"ul"},"intermediate node - \u53ea\u6709\u4e00\u4e2a child"),(0,l.kt)("li",{parentName:"ul"},"\u6620\u5c04 node-level",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"object - \u6574\u4f53"),(0,l.kt)("li",{parentName:"ul"},"number - \u8fd4\u56de \u4f4d\u7f6e \u5185\u5bb9"),(0,l.kt)("li",{parentName:"ul"},"function"))),(0,l.kt)("li",{parentName:"ul"},"\u6620\u5c04 property-level",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"number - \u63d2\u5165\u4f4d\u7f6e\u5185\u5bb9"),(0,l.kt)("li",{parentName:"ul"},"string|boolean|object|null - \u76f4\u63a5\u66ff\u6362\u4e3a\u503c"),(0,l.kt)("li",{parentName:"ul"},"function")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm add -D @ohm-js/cli\nnpx ohm generateBundles --withTypes --esm src/grammar.ohm\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u751f\u6210 ts \u7c7b\u578b"),(0,l.kt)("li",{parentName:"ul"},"src/my-grammar.ohm",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"src/my-grammar.ohm-bundle.js",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"ohm.makeRecipe - grammar \u8f6c\u4e3a\u7684 object"))),(0,l.kt)("li",{parentName:"ul"},"src/my-grammar.ohm-bundle.d.ts")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"import grammar, {ArithmeticSemantics} from './arithmetic.ohm-bundle';\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53d1\u5e03\u7684\u4e00\u4e9b\u8bed\u6cd5",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.npmjs.com/search?q=ohm-grammar-"},"https://www.npmjs.com/search?q=ohm-grammar-"))))),(0,l.kt)("h2",{id:"\u8bed\u6cd5"},"\u8bed\u6cd5"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5927\u5199\u540d\u5b57 \u4e3a Rule - \u5ffd\u7565\u7a7a\u767d"),(0,l.kt)("li",{parentName:"ul"},"\u5c0f\u5199\u540d\u5b57 \u4e3a Lex - \u4e0d\u5ffd\u7565\u7a7a\u767d"),(0,l.kt)("li",{parentName:"ul"},"\u7a7a\u767d - ",(0,l.kt)("inlineCode",{parentName:"li"},"[ \\r\\n\\t]")," - ",(0,l.kt)("a",{parentName:"li",href:"https://262.ecma-international.org/5.1/#sec-7.2"},"https://262.ecma-international.org/5.1/#sec-7.2"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8bed\u6cd5\u7ee7\u627f")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u8bed\u6cd5\u590d\u7528")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Arithmetic {\n  AddExp = ...\n}\nMath <: Arithmetic {\n    Expr = AddExp\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Inline Rule")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u8f85\u52a9 left recursive -> right recursion")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'AddExp = AddExp "+" MulExp  -- plus\n       | MulExp\n')),(0,l.kt)("p",null,"\u5c55\u5f00\u4e3a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'AddExp = AddExp_plus\n       | MulExp\nAddExp_plus = AddExp "+" MulExp\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5185\u7f6e\u89c4\u5219 - ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/harc/ohm/blob/master/packages/ohm-js/src/built-in-rules.ohm"},"https://github.com/harc/ohm/blob/master/packages/ohm-js/src/built-in-rules.ohm"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"any"),(0,l.kt)("li",{parentName:"ul"},"letter"),(0,l.kt)("li",{parentName:"ul"},"lower"),(0,l.kt)("li",{parentName:"ul"},"upper"),(0,l.kt)("li",{parentName:"ul"},"digit"),(0,l.kt)("li",{parentName:"ul"},"hexDigit"),(0,l.kt)("li",{parentName:"ul"},"alnum"),(0,l.kt)("li",{parentName:"ul"},"spec"),(0,l.kt)("li",{parentName:"ul"},"end"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"caseInsensitive<terminal>")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ListOf<exp,sep>"))))),(0,l.kt)("h2",{id:"rule-int-involves-an-alternation-which-has-inconsistent-arity"},"Rule int involves an alternation which has inconsistent arity"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6216\u5173\u7cfb\u8981\u6c42\u53c2\u6570\u6570\u91cf\u76f8\u540c"),(0,l.kt)("li",{parentName:"ul"},"rule \u53ef\u52a0\u540d\u5b57\u751f\u6210\u65b0\u7684\u89c4\u5219 - \u5219\u5141\u8bb8\u4e0d\u540c\u53c2\u6570")),(0,l.kt)("p",null,"\u5c06"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'int = "0" | "1".."9" digit*\n')),(0,l.kt)("p",null,"\u4fee\u6539\u4e3a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'int\n  = "0"\n  | int_non_zero\nint_non_zero = "1".."9" digit*\n')),(0,l.kt)("p",null,"\u6216\u4fee\u6539\u4e3a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'int = spaces "0" | "1".."9" digit*\n')),(0,l.kt)("p",null,"\u5904\u7406\u7684\u65f6\u5019\u9700\u8981\u5904\u7406\u4e0b\u7a7a\u767d"),(0,l.kt)("h2",{id:"reference-grammar"},"Reference Grammar"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/harc/ohm/blob/master/packages/ohm-js/src/ohm-grammar.ohm"},"ohm-grammar.ohm"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/harc/ohm/blob/master/packages/ohm-js/src/built-in-rules.ohm"},"built-in-rules.ohm")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/harc/ohm/blob/master/packages/ohm-js/src/operations-and-attributes.ohm"},"operations-and-attributes.ohm"))))))}k.isMDXComponent=!0}}]);