"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[9982],{49613:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=u(r),d=a,m=f["".concat(p,".").concat(d)]||f[d]||s[d]||o;return r?n.createElement(m,i(i({ref:t},c),{},{components:r})):n.createElement(m,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7378:function(e,t,r){r.r(t),r.d(t,{assets:function(){return b},contentTitle:function(){return d},default:function(){return y},frontMatter:function(){return f},metadata:function(){return m},toc:function(){return k}});var n=r(49613),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&c(e,r,t[r]);if(l)for(var r of l(t))u.call(t,r)&&c(e,r,t[r]);return e};const f={title:"KEDA"},d="KEDA",m={unversionedId:"devops/kubernetes/platform/keda",id:"devops/kubernetes/platform/keda",title:"KEDA",description:"- kedacore/keda",source:"@site/../notes/devops/kubernetes/platform/keda.md",sourceDirName:"devops/kubernetes/platform",slug:"/devops/kubernetes/platform/keda",permalink:"/notes/devops/kubernetes/platform/keda",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/platform/keda.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1637943795,formattedLastUpdatedAt:"Nov 26, 2021",frontMatter:{title:"KEDA"},sidebar:"docs",previous:{title:"Istio \u670d\u52a1\u7f51\u683c",permalink:"/notes/devops/kubernetes/platform/istio"},next:{title:"Knative",permalink:"/notes/devops/kubernetes/platform/knative"}},b={},k=[],v={toc:k};function y(e){var t,r=e,{components:a}=r,c=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=s(s({},v),c),o(t,i({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"keda"}),"KEDA"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/kedacore/keda"}),"kedacore/keda"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Kubernetes-based Event Driven Autoscaling"),(0,n.kt)("li",{parentName:"ul"},"\u89d2\u8272\u7b49\u540c Horizontal Pod Autoscaler"),(0,n.kt)("li",{parentName:"ul"},"scaler:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"CPU, Memory, Cron"),(0,n.kt)("li",{parentName:"ul"},"PostgreSQL, MySQL, Cassandra, Elasticsearch"),(0,n.kt)("li",{parentName:"ul"},"Nats, Kafka, Rabbit MQ, Redis List/Stream"),(0,n.kt)("li",{parentName:"ul"},"Prometheus, Metrics API, Graphite"))))),(0,n.kt)("li",{parentName:"ul"},"keda-operator"),(0,n.kt)("li",{parentName:"ul"},"keda-operator-metrics-apiserver")))}y.isMDXComponent=!0}}]);