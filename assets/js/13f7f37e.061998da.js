"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[3231],{49613:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return k}});var r=a(59496);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var o=r.createContext({}),u=function(t){var e=r.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=u(t.components);return r.createElement(o.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,o=t.parentName,m=p(t,["components","mdxType","originalType","parentName"]),d=u(a),k=n,g=d["".concat(o,".").concat(k)]||d[k]||s[k]||l;return a?r.createElement(g,i(i({ref:e},m),{},{components:a})):r.createElement(g,i({ref:e},m))}));function k(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=d;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:n,i[1]=p;for(var u=2;u<l;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},63685:function(t,e,a){a.r(e),a.d(e,{assets:function(){return N},contentTitle:function(){return k},default:function(){return y},frontMatter:function(){return d},metadata:function(){return g},toc:function(){return c}});var r=a(49613),n=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(t,e,a)=>e in t?n(t,e,{enumerable:!0,configurable:!0,writable:!0,value:a}):t[e]=a,s=(t,e)=>{for(var a in e||(e={}))o.call(e,a)&&m(t,a,e[a]);if(p)for(var a of p(e))u.call(e,a)&&m(t,a,e[a]);return t};const d={id:"glossary",title:"Parser Glossary",tags:["Glossary"]},k="Parser Glossary",g={unversionedId:"languages/parser/glossary",id:"languages/parser/glossary",title:"Parser Glossary",description:"| Abbr.           | Word                                           | Desc                           |",source:"@site/../notes/languages/parser/parser-glossary.md",sourceDirName:"languages/parser",slug:"/languages/parser/glossary",permalink:"/notes/languages/parser/glossary",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/languages/parser/parser-glossary.md",tags:[{label:"Glossary",permalink:"/notes/tags/glossary"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1661507210,formattedLastUpdatedAt:"Aug 26, 2022",frontMatter:{id:"glossary",title:"Parser Glossary",tags:["Glossary"]},sidebar:"docs",previous:{title:"Parser FAQ",permalink:"/notes/languages/parser/parser-faq"},next:{title:"\u8bed\u6cd5\u89e3\u6790",permalink:"/notes/languages/parser/parsing"}},N={},c=[{value:"Left recursion",id:"left-recursion",level:2}],f={toc:c};function y(t){var e,a=t,{components:n}=a,m=((t,e)=>{var a={};for(var r in t)o.call(t,r)&&e.indexOf(r)<0&&(a[r]=t[r]);if(null!=t&&p)for(var r of p(t))e.indexOf(r)<0&&u.call(t,r)&&(a[r]=t[r]);return a})(a,["components"]);return(0,r.kt)("wrapper",(e=s(s({},f),m),l(e,i({components:n,mdxType:"MDXLayout"}))),(0,r.kt)("h1",s({},{id:"parser-glossary"}),"Parser Glossary"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:null}),"Abbr."),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"Word"),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"Desc"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"BNF"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Backus\u2013Naur form"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u5df4\u79d1\u65af\u8303\u5f0f - 1959 John Backus")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"EBNF"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"extended BNF"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u6269\u5c55\u5df4\u79d1\u65af\u8303\u5f0f - ISO-14977")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"DFA"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Deterministic finite automaton"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u786e\u5b9a\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"NFA"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Nondeterministic finite automaton"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u975e\u786e\u5b9a\u6709\u9650\u72b6\u6001\u81ea\u52a8\u673a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"CFG"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Context free grammar"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u6cd5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"TDPL"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Top-Down Parsing Language"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),(0,r.kt)("a",s({parentName:"td"},{href:"https://en.wikipedia.org/wiki/LL_parser"}),"LL(k)")),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Left-to-right, Leftmost derivation"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"top-down - 1970s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"LLR"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"LL-regular"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"LR"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Left-to-right, Rightmost derivation in reverse"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"bottom-up - 1965 Donald Knuth")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"DCFG"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Deterministic Context Free Grammar"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),(0,r.kt)("a",s({parentName:"td"},{href:"/notes/languages/parser/peg"}),"PEG")),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Parsing expression grammar"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u89e3\u6790\u8868\u8fbe\u6587\u6cd5 - 2004 Bryan Ford")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"ANTLR"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"ANother Tool for Language Recognition"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"LALR"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Look-Ahead LR parser"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u7b80\u5316\u7248\u7684 LR")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"SLR"),(0,r.kt)("td",s({parentName:"tr"},{align:null})),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Canonical LR(1)"),(0,r.kt)("td",s({parentName:"tr"},{align:null})),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Minimal LR(1)"),(0,r.kt)("td",s({parentName:"tr"},{align:null})),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"GLR"),(0,r.kt)("td",s({parentName:"tr"},{align:null})),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"RPN"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"Reverse Polish notation"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:null}),"en"),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"cn"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"grammar"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u8bed\u6cd5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"syntax"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u8bed\u6cd5")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"semantics"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u8bed\u4e49")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"expression"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u8868\u8fbe\u5f0f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"term"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"LL \u533a\u5206 ",(0,r.kt)("inlineCode",{parentName:"li"},"LL(*)")," \u548c ",(0,r.kt)("inlineCode",{parentName:"li"},"LL(k)"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Lookahead \u662f\u5426\u6709\u9650"),(0,r.kt)("li",{parentName:"ul"},"JavaCC \u9ed8\u8ba4 ",(0,r.kt)("inlineCode",{parentName:"li"},"LL(1)")," - \u53ef\u8bbe\u7f6e lookahead \u53d8\u4e3a ",(0,r.kt)("inlineCode",{parentName:"li"},"LL(k)")))),(0,r.kt)("li",{parentName:"ul"},"PEG \u7c7b\u4f3c CFG \u4f46\u5e76\u4e0d\u662f\u5b50\u96c6"),(0,r.kt)("li",{parentName:"ul"},"DFA - flex, regex, jflex"),(0,r.kt)("li",{parentName:"ul"},"context-sensitive parsing",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Off-side_rule"}),"Off-side rule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://github.com/harc/ohm/issues/158"}),"https://github.com/harc/ohm/issues/158"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://ohmlang.github.io/pubs/dls2016/modular-semantic-actions.pdf"}),"https://ohmlang.github.io/pubs/dls2016/modular-semantic-actions.pdf")))))),(0,r.kt)("li",{parentName:"ul"},"PEG \u624b\u5199 right recursion")),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-mermaid"}),'graph TD;\n    CFG--\x3eDCFG\n    DCFG--\x3eLL --\x3e LL_k\n    LL --\x3e LL_inf\n    LL_k --\x3e JavaCC\n    LL_inf --\x3e Antlr4\n\n    LL_inf["LL(*)"]\n    LL_k["LL(k)"]\n')),(0,r.kt)("h2",s({},{id:"left-recursion"}),"Left recursion"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Left_recursion"}),"Left recursion"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Direct left recursion"),(0,r.kt)("li",{parentName:"ul"},"Indirect left recursion")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"a and b and c")),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-json"}),'{\n  "type": "and",\n  // left\n  "left": {"type": "and", "left": {"term": "a"}, "right": {"term": "b"}},\n  //\n  "right": {"term": "c"}\n}\n')))}y.isMDXComponent=!0}}]);