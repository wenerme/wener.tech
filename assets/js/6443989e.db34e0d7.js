"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[91938],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return v}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(t),v=i,m=d["".concat(s,".").concat(v)]||d[v]||u[v]||o;return t?r.createElement(m,a(a({ref:n},l),{},{components:t})):r.createElement(m,a({ref:n},l))}));function v(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},12607:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=t(87462),i=t(63366),o=(t(67294),t(3905)),a=["components"],c={title:"Avahi"},s=void 0,p={unversionedId:"service/network/avahi",id:"service/network/avahi",isDocsHomePage:!1,title:"Avahi",description:"Tips",source:"@site/notes/service/network/avahi.md",sourceDirName:"service/network",slug:"/service/network/avahi",permalink:"/notes/service/network/avahi",editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/network/avahi.md",tags:[],version:"current",frontMatter:{title:"Avahi"},sidebar:"docs",previous:{title:"Tinc \u5e38\u89c1\u95ee\u9898",permalink:"/notes/service/network/tinc-faq"},next:{title:"coturn",permalink:"/notes/service/network/coturn"}},l=[{value:"Tips",id:"tips",children:[]},{value:"services",id:"services",children:[]},{value:"dbus_bus_request_name(): Connection &quot;:1.3&quot; is not allowed to own the service &quot;org.freedesktop.Avahi&quot; due to security policies in the configuration file",id:"dbus_bus_request_name-connection-13-is-not-allowed-to-own-the-service-orgfreedesktopavahi-due-to-security-policies-in-the-configuration-file",children:[]}],u={toc:l};function d(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"tips"},"Tips"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"archlinux ",(0,o.kt)("a",{parentName:"li",href:"https://wiki.archlinux.org/index.php/Avahi"},"Avahi")),(0,o.kt)("li",{parentName:"ul"},"Alpine \u6ca1\u6709 nsswitch",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/gliderlabs/docker-alpine/issues/367"},"gliderlabs/docker-alpine#367")),(0,o.kt)("li",{parentName:"ul"},"musl \u4e0d\u652f\u6301 nsswitch"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://linux.die.net/man/5/avahi.service"},"https://linux.die.net/man/5/avahi.service"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# tools https://pkgs.alpinelinux.org/contents?branch=edge&name=avahi-tools&arch=x86_64&repo=main\napk add avahi avahi-tools\n\n# avahi-daemon\n# avahi-dnsconfd\nservice avahi-daemon start\n\navahi-browse --all --ignore-local --resolve --terminate\n# \u53ea\u641c\u7d22 ssh \u4e14\u663e\u793a ip\navahi-browse _ssh._tcp -tr\n\n# \u65b0\u589e\u670d\u52a1\u5b9a\u4e49\ncat <<XML > /etc/avahi/services/node-exporter.service\n<service-group>\n  <name replace-wildcards="yes">%h</name>\n\n  <service protocol="ipv4">\n    <type>_prometheus-http._tcp</type>\n    <port>9100</port>\n  </service>\n</service-group>\nXML\n\n# macOS\n# ==========\n# \b\b\b\u66b4\u9732\u670d\u52a1\ndns-sd -R "My test server with metrics-endpoint" _prometheus-http._tcp. . 9000 path=/metrics\n# \u626b\u63cf\ndns-sd -B\n# \u6240\u6709\u670d\u52a1\ndns-sd -B _services._dns-sd._udp local.\n# \u67e5\u627e\u6253\u5370\u673a\ndns-sd -B _ipp._tcp local.\n# \u67e5\u770b\u5185\u5bb9\u91cc\u7684 adminurl\ndns-sd -Z _ipp._tcp local.\n# \u83b7\u53d6 IP\ndns-sd -Gv4v6 LenovoAB66CD.local.\n\n# \u57df\u540d zone \u683c\u5f0f\n# PTR SRV TXT\ndns-sd -Z\n\n# \u76f4\u63a5\u67e5\u627e\u5e76\u6253\u5370\nippfind _ipp._tcp --print\n# \u83b7\u53d6 hostname\nippfind _ipp._tcp,_universal --exec echo \'{service_hostname}\' \\;\n# \u67e5\u627e airprint\navahi-browse -rt _universal._sub._ipp._tcp\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- \u4e00\u4e2a\u670d\u52a1\u5206\u7ec4 - {name,service:[]} --\x3e\n<service-group>\n  \x3c!-- \u670d\u52a1\u540d --\x3e\n  \x3c!-- replace-wildcards \u66ff\u6362 %h \u4e3a hostname --\x3e\n  <name replace-wildcards="yes">%h</name>\n\n  \x3c!-- {type,port, domain-name?, host-name?, subtype:[], txt-record:[] --\x3e\n  \x3c!-- protocol="ipv4|ipv6|any" - \u9ed8\u8ba4 any --\x3e\n  <service protocol="ipv4">\n    \x3c!-- \u4f8b\u5982 _http._tcp --\x3e\n    <type>_prometheus-http._tcp</type>\n    <port>9090</port>\n\n    \x3c!-- \u5b50\u7c7b\u578b --\x3e\n    <subtype>_anon._sub._metrics._tcp</subtype>\n    \x3c!-- \u6ce8\u518c\u5230\u7684\u7c7b\u578b --\x3e\n    \x3c!-- \u9ed8\u8ba4 .local --\x3e\n    <domain-name>.local</domain-name>\n    \x3c!-- \u4e3b\u673a\u540d FQDN --\x3e\n    <host-name>my.host.test<host-name>\n    \x3c!-- TXT --\x3e\n    <txt-record>path=/metrics</txt-record>\n  </service>\n</service-group>\n')),(0,o.kt)("h2",{id:"services"},"services"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<service-group>\n  <name replace-wildcards="yes">%h</name>\n\n  <service protocol="ipv4">\n    <type>_prometheus-http._tcp</type>\n    <port>9100</port>\n    <txt-record>path=/metrics</txt-record>\n  </service>\n</service-group>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<service-group>\n  <name replace-wildcards="yes">%h</name>\n  <service>\n    <type>_afpovertcp._tcp</type>\n    <port>548</port>\n  </service>\n  <service>\n    <type>_device-info._tcp</type>\n    <port>0</port>\n    <txt-record>model=Xserve</txt-record>\n  </service>\n</service-group>\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<service-group>\n <name replace-wildcards="yes">SMB on %h</name>\n <service>\n   <type>_smb._tcp</type>\n   <port>445</port>\n </service>\n</service-group>\n')),(0,o.kt)("h1",{id:"faq"},"FAQ"),(0,o.kt)("h2",{id:"dbus_bus_request_name-connection-13-is-not-allowed-to-own-the-service-orgfreedesktopavahi-due-to-security-policies-in-the-configuration-file"},'dbus_bus_request_name(): Connection ":1.3" is not allowed to own the service "org.freedesktop.Avahi" due to security policies in the configuration file'))}d.isMDXComponent=!0}}]);