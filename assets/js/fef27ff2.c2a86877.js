"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[33218],{49613:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(n),f=o,b=p["".concat(u,".").concat(f)]||p[f]||d[f]||i;return n?r.createElement(b,a(a({ref:t},s),{},{components:n})):r.createElement(b,a({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},77094:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var r=n(96600),o=n(27279),i=(n(59496),n(49613)),a=["components"],l={title:"Build"},u="Build",c={unversionedId:"os/linux/build",id:"os/linux/build",title:"Build",description:"\u83b7\u53d6\u52a8\u6001\u94fe\u63a5\u7684\u5e93",source:"@site/../notes/os/linux/build.md",sourceDirName:"os/linux",slug:"/os/linux/build",permalink:"/notes/os/linux/build",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/../notes/os/linux/build.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1655970411,formattedLastUpdatedAt:"Jun 23, 2022",frontMatter:{title:"Build"},sidebar:"docs",previous:{title:"UEFI",permalink:"/notes/os/linux/boot/uefi"},next:{title:"coreutils",permalink:"/notes/os/linux/coreutils"}},s={},d=[{value:"\u83b7\u53d6\u52a8\u6001\u94fe\u63a5\u7684\u5e93",id:"\u83b7\u53d6\u52a8\u6001\u94fe\u63a5\u7684\u5e93",level:2}],p={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"build"},"Build"),(0,i.kt)("h2",{id:"\u83b7\u53d6\u52a8\u6001\u94fe\u63a5\u7684\u5e93"},"\u83b7\u53d6\u52a8\u6001\u94fe\u63a5\u7684\u5e93"),(0,i.kt)("p",null,"Be aware that ldd actually runs the executable with a special environment variable, and the Linux dynamic linker recognizes this flag and just outputs the libraries rather than running the executable. Look at the source to ldd; on my system, it's a bash script. If the executable is statically linked and uses syscalls, and specifies a different loader, it can do arbitrary evil things. So don't use ldd on an executable you don't trust."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ldd exec\n\nobjdump -p exec\nlsof -P -T -p $(pidof exec)\nreadelf -d /bin/ls | grep 'NEEDED'\n\n# macOS\notool -L exec\n")))}f.isMDXComponent=!0}}]);