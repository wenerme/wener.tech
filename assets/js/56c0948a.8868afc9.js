"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[96225],{49613:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(59496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),s=p(n),h=r,d=s["".concat(c,".").concat(h)]||s[h]||u[h]||l;return n?a.createElement(d,o(o({ref:t},m),{},{components:n})):a.createElement(d,o({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[s]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},62786:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return k},default:function(){return w},frontMatter:function(){return d},metadata:function(){return b},toc:function(){return y}});var a=n(49613),r=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,m=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,s=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&m(e,n,t[n]);if(i)for(var n of i(t))p.call(t,n)&&m(e,n,t[n]);return e},u=(e,t)=>l(e,o(t)),h=(e,t)=>{var n={};for(var a in e)c.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&i)for(var a of i(e))t.indexOf(a)<0&&p.call(e,a)&&(n[a]=e[a]);return n};const d={title:"Polygon"},k="Polygon",b={unversionedId:"blockchain/eth/polygon",id:"blockchain/eth/polygon",title:"Polygon",description:"- maticnetwork",source:"@site/../notes/blockchain/eth/polygon.md",sourceDirName:"blockchain/eth",slug:"/blockchain/eth/polygon",permalink:"/notes/blockchain/eth/polygon",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/blockchain/eth/polygon.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1658491471,formattedLastUpdatedAt:"Jul 22, 2022",frontMatter:{title:"Polygon"},sidebar:"docs",previous:{title:"OpenSea",permalink:"/notes/blockchain/eth/nft/opensea"},next:{title:"solidity",permalink:"/notes/blockchain/eth/solidity"}},f={},y=[{value:"Validator",id:"validator",level:2}],g={toc:y},N="wrapper";function w(e){var t=e,{components:n}=t,r=h(t,["components"]);return(0,a.kt)(N,u(s(s({},g),r),{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",s({},{id:"polygon"}),"Polygon"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://github.com/maticnetwork"}),"maticnetwork")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://polygon.technology"}),"polygon.technology")),(0,a.kt)("li",{parentName:"ul"},"ChianId 137"),(0,a.kt)("li",{parentName:"ul"},"\u89e3\u51b3 Ethereum \u6027\u80fd\u548c\u6548\u7387\u95ee\u9898"),(0,a.kt)("li",{parentName:"ul"},"Proof of Stake"),(0,a.kt)("li",{parentName:"ul"},"\u539f\u5e01 MATIC"),(0,a.kt)("li",{parentName:"ul"},"Layer-2 - \u57fa\u4e8e Ethereum \u5408\u7ea6"),(0,a.kt)("li",{parentName:"ul"},"\u6d4b\u8bd5\u7f51\u7edc Mumbai",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://faucet.polygon.technology/"}),"https://faucet.polygon.technology/")))),(0,a.kt)("li",{parentName:"ul"},"Adopted by: Aave, OpenSea, Curve, Decentraland, UniSwap, SushiSwap, CoinSwitch"),(0,a.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://polygonscan.com/"}),"https://polygonscan.com/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://polygontech.medium.com/"}),"https://polygontech.medium.com/"))))),(0,a.kt)("h2",s({},{id:"validator"}),"Validator"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Matic is a hybrid Plasma + Proof-of-Stake (PoS)"),(0,a.kt)("li",{parentName:"ul"},"Heimdall",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Matic PoS validator node"),(0,a.kt)("li",{parentName:"ul"},"checkpointing a representation of the Plasma blocks to the main chain"),(0,a.kt)("li",{parentName:"ul"},"\u57fa\u4e8e Tendermint consensus engine"))),(0,a.kt)("li",{parentName:"ul"},"Bor - Block Producer layer",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Matic main node"),(0,a.kt)("li",{parentName:"ul"},"sidechain operator"),(0,a.kt)("li",{parentName:"ul"},"Geth+consensus algorithm"))),(0,a.kt)("li",{parentName:"ul"},"Docker",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://hub.docker.com/r/maticnetwork/bor"}),"maticnetwork/bor")," - Alpine 30MB",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Ports: 30303 30303/udp 8545 8546 8547"),(0,a.kt)("li",{parentName:"ul"},"/usr/local/bin/{bor,bootnode}"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://hub.docker.com/r/maticnetwork/heimdall"}),"maticnetwork/heimdall")," - Ubuntu 800MB",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Ports: 1317, 26656, 26657"),(0,a.kt)("li",{parentName:"ul"},"/go/bin"))))),(0,a.kt)("li",{parentName:"ul"},"Snapshot - ",(0,a.kt)("a",s({parentName:"li"},{href:"https://snapshots.matic.today/"}),"https://snapshots.matic.today/"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://matic-blockchain-snapshots.s3-accelerate.amazonaws.com/matic-mainnet/bor-fullnode-snapshot-2022-03-16.tar.gz"}),"https://matic-blockchain-snapshots.s3-accelerate.amazonaws.com/matic-mainnet/bor-fullnode-snapshot-2022-03-16.tar.gz"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"900G"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://matic-blockchain-snapshots.s3-accelerate.amazonaws.com/matic-mainnet/heimdall-snapshot-2022-04-30.tar.gz"}),"https://matic-blockchain-snapshots.s3-accelerate.amazonaws.com/matic-mainnet/heimdall-snapshot-2022-04-30.tar.gz"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"140G")))))),(0,a.kt)("pre",null,(0,a.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"# install go,git,jq,rabbitmq-server\n\nmkdir bin\n\ngit clone https://github.com/maticnetwork/bor.git\ngit clone https://github.com/maticnetwork/heimdall.git\n(cd bor && make bor-all)\n(cd heimdall && make install network=mainnet)\n\nln -s bor/build/bin/bor bin\nln -s bor/build/bin/bootnode bin\nln -s ~/go/bin/heimdalld bin\nln -s ~/go/bin/heimdallcli bin\nln -s ~/go/bin/bridge bin\n\nmkdir ~/.heimdalld\n\ngit clone https://github.com/maticnetwork/launch.git\n# node_type: sentry/sentry, sentry/validator, without-sentry\ncp -rf launch/mainnet-v1/sentry/sentry ~/node\n\n(cd ~/node/heimdall && bash setup.sh)\n(cd ~/node/bor && bash setup.sh)\n# \u751f\u4ea7 systemd service \u6587\u4ef6\n# heimdalld.service, heimdalld-rest-server.service, heimdalld-bridge.service, bor.service\n# (cd ~/node/mainnet-v1 && bash service.sh)\n\n# /etc/matic, /etc/matic/metadata\nmkdir /etc/matic\ncp -rf launch/mainnet-v1/metadata /etc/matic/metadata\n")),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://github.com/maticnetwork/node-ansible"}),"https://github.com/maticnetwork/node-ansible")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://medium.com/the-polygon-blog/heimdall-and-bor-1f8f881cd6a4"}),"heimdall-and-bor")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://blog.matic.network/plasma-predicates-one-step-towards-generalized-plasma/"}),"https://blog.matic.network/plasma-predicates-one-step-towards-generalized-plasma/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://polygon.technology/staking/"}),"https://polygon.technology/staking/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://wallet.polygon.technology/staking/rewards-calculator/"}),"https://wallet.polygon.technology/staking/rewards-calculator/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://snapshots.matic.today/"}),"https://snapshots.matic.today/"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u4e2d\u56fd\u5feb\u7167"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",s({parentName:"li"},{href:"https://docs.polygon.technology/docs/integrate/full-node-deployment/"}),"Full Node Deployment"))))}w.isMDXComponent=!0}}]);