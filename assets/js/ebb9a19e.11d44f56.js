"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[36249],{49613:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),m=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=m(e.components);return n.createElement(u.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=m(r),f=a,d=s["".concat(u,".").concat(f)]||s[f]||c[f]||i;return r?n.createElement(d,l(l({ref:t},p),{},{components:r})):n.createElement(d,l({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=f;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[s]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=r[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},73850:function(e,t,r){r.r(t),r.d(t,{assets:function(){return b},contentTitle:function(){return k},default:function(){return j},frontMatter:function(){return d},metadata:function(){return N},toc:function(){return h}});var n=r(49613),a=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&p(e,r,t[r]);if(o)for(var r of o(t))m.call(t,r)&&p(e,r,t[r]);return e},c=(e,t)=>i(e,l(t)),f=(e,t)=>{var r={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&o)for(var n of o(e))t.indexOf(n)<0&&m.call(e,n)&&(r[n]=e[n]);return r};const d={title:"unifiedjs"},k="unifiedjs",N={unversionedId:"web/editor/unifiedjs",id:"web/editor/unifiedjs",title:"unifiedjs",description:"- unifiedjs/unified",source:"@site/../notes/web/editor/unifiedjs.md",sourceDirName:"web/editor",slug:"/web/editor/unifiedjs",permalink:"/notes/web/editor/unifiedjs",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/web/editor/unifiedjs.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1666510159,formattedLastUpdatedAt:"Oct 23, 2022",frontMatter:{title:"unifiedjs"},sidebar:"docs",previous:{title:"tiptap",permalink:"/notes/web/editor/tiptap"},next:{title:"x-render",permalink:"/notes/web/editor/x-render"}},b={},h=[],y={toc:h},g="wrapper";function j(e){var t=e,{components:r}=t,a=f(t,["components"]);return(0,n.kt)(g,c(s(s({},y),a),{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",s({},{id:"unifiedjs"}),"unifiedjs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/unifiedjs/unified"}),"unifiedjs/unified"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"interface for parsing, inspecting, transforming, and serializing content through syntax trees"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://unifiedjs.com/learn/"}),"learn")),(0,n.kt)("li",{parentName:"ul"},"\u4e3b\u8981\u5904\u7406\u6a21\u5757",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"retext - natural language"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://remark.js.org/"}),"remark")," - markdown",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/remarkjs/remark/blob/main/doc/plugins.md"}),"https://github.com/remarkjs/remark/blob/main/doc/plugins.md")))),(0,n.kt)("li",{parentName:"ul"},"rehype - HTML"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/vfile/vfile"}),"vfile"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Virtual file format for text processing"))),(0,n.kt)("li",{parentName:"ul"},"mdast-util-to-hast"),(0,n.kt)("li",{parentName:"ul"},"AST - \u8bed\u6cd5\u6811\u7ed3\u6784",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/syntax-tree/unist"}),"unist"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Universal Syntax Tree"),(0,n.kt)("li",{parentName:"ul"},"\u57fa\u7840 AST - \u5176\u4ed6 AST \u6269\u5c55\u4e8e\u8be5 AST"),(0,n.kt)("li",{parentName:"ul"},"Node",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"type"),(0,n.kt)("li",{parentName:"ul"},"data"),(0,n.kt)("li",{parentName:"ul"},"position: Position",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"start: Point",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"line, column, offset"))),(0,n.kt)("li",{parentName:"ul"},"end, indent"))))),(0,n.kt)("li",{parentName:"ul"},"Parent extends Node",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"children: Node[]")))),(0,n.kt)("li",{parentName:"ul"},"Literal extends Node",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"value: any"))))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/syntax-tree/mdast"}),"mdast"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Markdown Abstract Syntax Tree"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/syntax-tree/hast"}),"hast"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"HTML, SVG, MathML"),(0,n.kt)("li",{parentName:"ul"},"Hypertext Abstract Syntax Tree"))),(0,n.kt)("li",{parentName:"ul"},"nlcst - for natural language"),(0,n.kt)("li",{parentName:"ul"},"xast - for XML"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/micromark/micromark"}),"micromark"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"state machine"),(0,n.kt)("li",{parentName:"ul"},"\u66ff\u4ee3 remark-parse"),(0,n.kt)("li",{parentName:"ul"},"SyntaxExtension"),(0,n.kt)("li",{parentName:"ul"},"HtmlExtension")))),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-ts"}),"import { micromark } from 'micromark';\nimport { gfm, gfmHtml } from 'micromark-extension-gfm';\n\nconst value = '* [x] done';\n\nconst result = micromark(value, {\n  extensions: [gfm()],\n  htmlExtensions: [gfmHtml()],\n});\n\n// \u8f93\u51fa HTML\nconsole.log(result);\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"MDN",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/mdn/yari/tree/main/markdown"}),"https://github.com/mdn/yari/tree/main/markdown"))))))}j.isMDXComponent=!0}}]);