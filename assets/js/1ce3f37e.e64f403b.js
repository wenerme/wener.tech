/*! For license information please see 1ce3f37e.e64f403b.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[20236],{42135:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=r(11527),t=r(47214);const i={title:"Nomad"},l="Nomad",o={id:"devops/infra/nomad",title:"Nomad",description:"- hashicorp/nomad \u662f\u4ec0\u4e48\uff1f",source:"@site/../notes/devops/infra/nomad.md",sourceDirName:"devops/infra",slug:"/devops/infra/nomad",permalink:"/notes/devops/infra/nomad",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/infra/nomad.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1693463269,formattedLastUpdatedAt:"Aug 31, 2023",frontMatter:{title:"Nomad"},sidebar:"docs",previous:{title:"jumpserver",permalink:"/notes/devops/infra/jumpserver/"},next:{title:"Packer",permalink:"/notes/devops/infra/packer"}},a={},d=[{value:"job",id:"job",level:2},{value:"server",id:"server",level:2},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",del:"del",h1:"h1",h2:"h2",li:"li",pre:"pre",ul:"ul",...(0,t.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"nomad",children:"Nomad"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/hashicorp/nomad",children:"hashicorp/nomad"})," \u662f\u4ec0\u4e48\uff1f\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"MPL-2.0, Go"}),"\n",(0,s.jsx)(e.li,{children:"\u5206\u5e03\u5f0f\u8c03\u5ea6\u5668"}),"\n",(0,s.jsx)(e.li,{children:"\u5de5\u4f5c\u8d1f\u8f7d\u7f16\u6392"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u6838\u5fc3\u5356\u70b9\uff1a \u6df7\u5408\u5de5\u4f5c\u8d1f\u8f7d\u7f16\u6392"}),"\n",(0,s.jsxs)(e.li,{children:["\u7279\u70b9\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Agent \u65b9\u5f0f\u8fd0\u884c"}),"\n",(0,s.jsx)(e.li,{children:"UI \u63d0\u4f9b\u57fa\u672c\u4fe1\u606f\u548c\u64cd\u4f5c"}),"\n",(0,s.jsx)(e.li,{children:"\u58f0\u660e\u5f0f\u4efb\u52a1\u5b9a\u4e49"}),"\n",(0,s.jsx)(e.li,{children:"\u4e3b\u8981\u8c03\u5ea6 \u5de5\u4f5c\u8d1f\u8f7d/Workload - \u4e0d\u5305\u542b\u7f51\u7edc\u3001\u5b58\u50a8\u3001\u670d\u52a1\u3001\u914d\u7f6e\u7b49"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301 CSI \u5b58\u50a8\u63d2\u4ef6"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Driver\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"docker"}),"\n",(0,s.jsxs)(e.li,{children:["exec - \u9694\u79bb\u6267\u884c\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"pid, ipc \u9694\u79bb"}),"\n",(0,s.jsx)(e.li,{children:"chroot, host, group"}),"\n",(0,s.jsx)(e.li,{children:"caps"}),"\n",(0,s.jsx)(e.li,{children:"cgroups"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"raw_exec - \u4e0d\u9694\u79bb\uff0c\u76f4\u63a5\u6267\u884c"}),"\n",(0,s.jsx)(e.li,{children:"java"}),"\n",(0,s.jsx)(e.li,{children:"podman"}),"\n",(0,s.jsx)(e.li,{children:"qemu"}),"\n",(0,s.jsx)(e.li,{children:"remote - ecs"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u793e\u533a Driver\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Containerd"}),"\n",(0,s.jsx)(e.li,{children:"Firecracker"}),"\n",(0,s.jsx)(e.li,{children:"Jailtask"}),"\n",(0,s.jsx)(e.li,{children:"lightrun"}),"\n",(0,s.jsx)(e.li,{children:"LXC"}),"\n",(0,s.jsx)(e.li,{children:"Pot"}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.del,{children:"Rtk"})}),"\n",(0,s.jsx)(e.li,{children:"rookout"}),"\n",(0,s.jsx)(e.li,{children:"Sigularity"}),"\n",(0,s.jsx)(e.li,{children:"Systemd nspawn"}),"\n",(0,s.jsx)(e.li,{children:"Windows IIS"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u7aef\u53e3\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"4646/HTTP"}),"\n",(0,s.jsx)(e.li,{children:"4647/RPC"}),"\n",(0,s.jsx)(e.li,{children:"4648/Serf"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u751f\u6001\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Nomad - \u8c03\u5ea6\u5668"}),"\n",(0,s.jsx)(e.li,{children:"consul - \u670d\u52a1\u53d1\u73b0\u3001\u6ce8\u518c\u3001\u5065\u5eb7\u68c0\u67e5"}),"\n",(0,s.jsx)(e.li,{children:"consul connect - \u7f51\u7edc"}),"\n",(0,s.jsx)(e.li,{children:"vault - \u5bc6\u94a5"}),"\n",(0,s.jsx)(e.li,{children:"packer - \u6784\u5efa"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u53c2\u8003\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/hashicorp/go-getter",children:"hashicorp/go-getter"})," - \u83b7\u53d6 artifact"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.hashicorp.com/resources/why-hashicorp-customers-choose-nomad/",children:"Why HashiCorp Customers Choose Nomad"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.nomadproject.io/downloads/",children:"https://www.nomadproject.io/downloads/"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.admonition,{title:"\u9002\u7528\u573a\u666f",type:"tip",children:(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Windows, macOS \u8c03\u5ea6"}),"\n",(0,s.jsx)(e.li,{children:"EDGE \u573a\u666f - \u8282\u70b9\u591a\uff0c\u6bcf\u4e2a\u8282\u70b9\u90e8\u7f72 kube node \u8017\u8d39\u989d\u5916\u8d44\u6e90\uff0c\u7f51\u7edc\u590d\u6742"}),"\n",(0,s.jsx)(e.li,{children:"\u91cd\u8ba1\u7b97\u91cf \u573a\u666f - \u5bb9\u5668\u3001\u7f51\u7edc\u62bd\u8c61\u5e26\u6765\u989d\u5916\u6d88\u8017"}),"\n",(0,s.jsx)(e.li,{children:"\u5206\u5e03\u5f0f supervisor"}),"\n",(0,s.jsx)(e.li,{children:"\u975e\u6807\u51c6\u8d44\u6e90\u8c03\u5ea6 - GPU\u3001\u5916\u90e8\u8bbe\u5907"}),"\n",(0,s.jsx)(e.li,{children:"\u975e\u6807\u51c6 CPU arch \u8c03\u5ea6"}),"\n"]})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# macOS\nbrew install nomad\n\n# apk add nomad -X https://mirrors.aliyun.com/alpine/edge/community/\napk add nomad -u -X https://mirrors.tuna.tsinghua.edu.cn/alpine/edge/community/\n\n# http://0.0.0.0:4646/ui/\nnomad agent -dev -bind 0.0.0.0\n\n# Bash \u8865\u5168\ncomplete -C $(which nomad) nomad\n\nnomad node status\nnomad server members\n\n# \u5982\u679c\u4e0d\u662f\u672c\u5730 export NOMAD_ADDR=http://192.168.1.1:4646\nnomad job init\nnomad job run example.nomad\nnomad status example\n# \u72b6\u6001 - \u53ef tab \u8865\u5168\nnomad alloc status deb1c863-cf72-80fd-9dd8-18729f1dd0c6\nnomad alloc logs deb1c863-cf72-80fd-9dd8-18729f1dd0c6 redis\n\nnomad job stop example\n"})}),"\n",(0,s.jsx)(e.h2,{id:"job",children:"job"}),"\n",(0,s.jsx)(e.h2,{id:"server",children:"server"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'cat << HCL > server.hcl\n# Increase log verbosity\nlog_level = "DEBUG"\n\n# Setup data dir\ndata_dir = "/tmp/server1"\n\n# Enable the server\nserver {\n    enabled = true\n\n    # Self-elect, should be 3 or 5 for production\n    bootstrap_expect = 1\n}\nHCL\nnomad agent -config server.hcl\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-hcl",children:'# Increase log verbosity\nlog_level = "DEBUG"\n\n# Setup data dir\ndata_dir = "/tmp/client1"\n\n# Give the agent a unique name. Defaults to hostname\nname = "client1"\n\n# Enable the client\nclient {\n    enabled = true\n\n    # For demo assume we are talking to server1. For production,\n    # this should be like "nomad.service.consul:4647" and a system\n    # like Consul used for service discovery.\n    servers = ["127.0.0.1:4647"]\n}\n\n# \u4fee\u6539\u7aef\u53e3\n# ports {\n#     http = 5656\n# }\n\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u914d\u7f6e",children:"\u914d\u7f6e"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.nomadproject.io/docs/configuration",children:"Nomad Configuration"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-hcl",children:'data_dir  = "/var/lib/nomad"\n\nbind_addr = "0.0.0.0" # the default\n\ndatacenter = "dc1"\nregion = "global"\n\nadvertise {\n  # Defaults to the first private IP address.\n  http = "1.2.3.4"\n  rpc  = "1.2.3.4"\n  serf = "1.2.3.4:5648" # non-default ports may be specified\n}\n\nserver {\n  enabled          = true\n  bootstrap_expect = 3\n  data_dir = "/opt/nomad/server"\n\n  enabled_schedulers = ["batch", "service"]\n  num_schedulers     = 7\n  server_join {\n    retry_join     = [ "1.1.1.1", "2.2.2.2" ]\n    retry_max      = 3\n    retry_interval = "15s"\n  }\n\n  default_scheduler_config {\n    scheduler_algorithm = "spread"\n\n    preemption_config {\n      batch_scheduler_enabled   = true\n      system_scheduler_enabled  = true\n      service_scheduler_enabled = true\n    }\n  }\n}\n\nclient {\n  enabled       = true\n  servers = ["1.2.3.4:4647", "5.6.7.8:4647"]\n  alloc_dir = [data_dir]/alloc\n\n  // \u4e0d\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\n  // \u4f8b\u5982\n  chroot_env {\n    "/bin/ls"           = "/bin/ls"\n    "/etc/ld.so.cache"  = "/etc/ld.so.cache"\n    "/etc/ld.so.conf"   = "/etc/ld.so.conf"\n    "/etc/ld.so.conf.d" = "/etc/ld.so.conf.d"\n    "/etc/passwd"       = "/etc/passwd"\n    "/lib"              = "/lib"\n    "/lib64"            = "/lib64"\n  }\n  max_kill_timeout = "30s"\n  disable_remote_exec = false\n  # map[string]string\n  meta = nil\n\n  # network_interface\n  network_speed = 0\n  cpu_total_compute=0\n  memory_total_mb=0\n\n  node_class=""\n  // \u5ba2\u6237\u7aef\u9009\u9879\n  options = {\n    //\n    "driver.allowlist" = "docker,qemu"\n    "driver.denylist" = "docker,qemu"\n    # \u9ed8\u8ba4\n    # CONSUL_TOKEN\n    # CONSUL_HTTP_TOKEN\n    # VAULT_TOKEN\n    # AWS_ACCESS_KEY_ID\n    # AWS_SECRET_ACCESS_KEY\n    # AWS_SESSION_TOKEN\n    # GOOGLE_APPLICATION_CREDENTIALS\n    "env.denylist" = "MY_CUSTOM_ENVVAR"\n\n    # \u9ed8\u8ba4 root, Administrator\n    "user.denylist" = "root,ubuntu"\n    # \u9ed8\u8ba4 exec qemu java\n    "user.checked_drivers" = "exec,raw_exec"\n    "fingerprint.allowlist" = "network"\n    "fingerprint.denylist" = "network"\n    "fingerprint.network.disallow_link_local" = "true"\n  }\n  reserved {\n    # MHz\n    cpu = 0\n    memory = 0\n    disk = 0\n    reserved_ports = "22,80,8500-8600"\n  }\n\n  # Server Join \u65b9\u5f0f - \u7528\u4e8e\u670d\u52a1\u7aef\u89d2\u8272\n  server_join {\n    retry_join = [ "1.1.1.1", "2.2.2.2" ]\n    retry_max = 3\n    retry_interval = "15s"\n  }\n  state_dir = [data_dir]/client\n\n  gc_interval = "1m"\n  gc_disk_usage_threshold=80\n  gc_inode_usage_threshold=70\n  gc_max_allocs=50\n  gc_parallel_destroys=2\n  no_host_uuid = true\n  cni_path = "/opt/cni/bin"\n  cni_config_dir = "/opt/cni/config"\n  bridge_network_name = "nomad"\n  bridge_network_subnet = "172.26.66.0/23"\n\n  template {}\n  host_volume "ca-certificates" {\n    path = "/etc/ssl/certs"\n    read_only = true\n  }\n  host_network "public" {\n    cidr = "203.0.113.0/24"\n    interface = ""\n    reserved_ports = "22,80"\n  }\n}\n\nconsul {\n  address = "127.0.0.1:8500"\n  auth    = "admin:password"\n  token   = "abcd1234"\n}\n\nacl {\n  enabled = true\n  token_ttl = "30s"\n  policy_ttl = "60s"\n  replication_token = ""\n}\n\nautopilot {\n  cleanup_dead_servers      = true\n  last_contact_threshold    = "200ms"\n  max_trailing_logs         = 250\n  server_stabilization_time = "10s"\n  // enterprise\n  enable_redundancy_zones   = false\n  disable_upgrade_migration = false\n  enable_custom_upgrades    = false\n}\n\ntls {}\n\nvault {\n  enabled = true\n  address = "https://vault.company.internal:8200"\n}\n\n\ndisable_anonymous_signature = false\ndisable_update_check = false\nenable_debug=false\nenable_syslog=false\nsyslog_facility="LOCAL0"\n\n# map[string]string\nhttp_api_response_headers=nil\nleave_on_interrupt=false\nleave_on_terminate=false\n\nlimits {\n  https_handshake_timeout="5s"\n  http_max_conns_per_client=100\n  rpc_handshake_timeout="5s"\n  rpc_max_conns_per_client=100\n}\n\nlog_level="INFO"\nlog_json-false\nlog_file=""\nlog_rotate_bytes=0\nlog_rotate_duration="24h"\nlog_rotate_max_files=0\n\n# hostname\nname=\n\nplugin_dir=$data_dir/plugins\nplugin "raw_exec" {\n  config {\n    enabled = true\n  }\n}\n\nports {\n  http = 4646\n  rpc  = 4647\n  serf = 4648\n}\n\ntelemetry {\n  publish_allocation_metrics = true\n  publish_node_metrics       = true\n\n  prometheus_metrics = true\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},3354:(n,e,r)=>{var s=r(50959),t=Symbol.for("react.element"),i=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,o=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(n,e,r){var s,i={},d=null,c=null;for(s in void 0!==r&&(d=""+r),void 0!==e.key&&(d=""+e.key),void 0!==e.ref&&(c=e.ref),e)l.call(e,s)&&!a.hasOwnProperty(s)&&(i[s]=e[s]);if(n&&n.defaultProps)for(s in e=n.defaultProps)void 0===i[s]&&(i[s]=e[s]);return{$$typeof:t,type:n,key:d,ref:c,props:i,_owner:o.current}}e.Fragment=i,e.jsx=d,e.jsxs=d},11527:(n,e,r)=>{n.exports=r(3354)},47214:(n,e,r)=>{r.d(e,{Z:()=>o,a:()=>l});var s=r(50959);const t={},i=s.createContext(t);function l(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);