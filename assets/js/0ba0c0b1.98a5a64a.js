"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[4138],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return c}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var o=r.createContext({}),u=function(t){var e=r.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=u(t.components);return r.createElement(o.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,o=t.parentName,d=p(t,["components","mdxType","originalType","parentName"]),s=u(n),c=a,k=s["".concat(o,".").concat(c)]||s[c]||m[c]||l;return n?r.createElement(k,i(i({ref:e},d),{},{components:n})):r.createElement(k,i({ref:e},d))}));function c(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,i=new Array(l);i[0]=s;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:a,i[1]=p;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},99050:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return d},default:function(){return s}});var r=n(87462),a=n(63366),l=(n(67294),n(3905)),i=["components"],p={title:"\u6865\u63a5\u7f51\u7edc"},o="Bridge",u={unversionedId:"os/linux/network/bridge",id:"os/linux/network/bridge",isDocsHomePage:!1,title:"\u6865\u63a5\u7f51\u7edc",description:"`interfaces",source:"@site/notes/os/linux/network/bridge.md",sourceDirName:"os/linux/network",slug:"/os/linux/network/bridge",permalink:"/notes/os/linux/network/bridge",editUrl:"https://github.com/wenerme/wener/edit/master/notes/os/linux/network/bridge.md",tags:[],version:"current",frontMatter:{title:"\u6865\u63a5\u7f51\u7edc"},sidebar:"docs",previous:{title:"\u7f51\u7edc\u5e38\u89c1\u95ee\u9898",permalink:"/notes/os/linux/network/network-faq"},next:{title:"ifupdown",permalink:"/notes/os/linux/network/ifupdown"}},d=[{value:"STP",id:"stp",children:[]},{value:"\u6865\u63a5\u7f51\u5361\u4e0d\u4f7f\u7528\u5b9e\u9645\u7f51\u5361 Mac \u5730\u5740",id:"\u6865\u63a5\u7f51\u5361\u4e0d\u4f7f\u7528\u5b9e\u9645\u7f51\u5361-mac-\u5730\u5740",children:[]},{value:"tinc \u8282\u70b9\u907f\u514d mac \u51b2\u7a81",id:"tinc-\u8282\u70b9\u907f\u514d-mac-\u51b2\u7a81",children:[]}],m={toc:d};function s(t){var e=t.components,n=(0,a.Z)(t,i);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"bridge"},"Bridge"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-interfaces"},"auto eth0\niface eth0 inet manual\n\nauto br0\niface br0 inet dhcp\n    bridge-ports eth0\n    bridge-stp on\n  # \u81ea\u5b9a\u4e49 mac \u786e\u4fdd dhcp \u7a33\u5b9a\n    # bridge-hw 00:00:00:00:00:00\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# ip link set dev $IFACE type bridge ageing_time $IF_BRIDGE_AGEING\n# brctl setageing\n\n# ip link set dev $IFACE type bridge priority $IF_BRIDGE_BRIDGEPRIO\n# brctl setbridgeprio\n\n# ip link set dev $IFACE type bridge forward_delay $IF_BRIDGE_FD\n# brctl setfd\n\n# ip link set dev $IFACE type bridge hello_time $IF_BRIDGE_HELLO\n# brctl sethello\n\n# ip link set dev $IFACE type bridge max_age $IF_BRIDGE_MAXAGE\n# brctl setmaxage\n\n# bridge link set dev $IFACE cost $IF_BRIDGE_PATHCOST\n# brctl setpathcost\n\n# bridge link set dev $IFACE priority $IF_BRIDGE_PORTPRIO\n# brctl setportprio\n\n# ip link set dev $IFACE type bridge stp $(yesno $IF_BRIDGE_STP)\nbrctl stp br0 off\n\n# vlan\n# ip link set dev $IFACE type bridge vlan_filtering $(yesno $IF_BRIDGE_VLAN_AWARE)\n")),(0,l.kt)("h2",{id:"stp"},"STP"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"BPDU - Bridge Protocol Data Unit")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u89d2\u8272")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Role"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Chinese"),(0,l.kt)("th",{parentName:"tr",align:null},"Desc"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RB"),(0,l.kt)("td",{parentName:"tr",align:null},"Root Bridge"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6839\u6865"),(0,l.kt)("td",{parentName:"tr",align:null},"ID \u6700\u5c0f\u6865")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RP"),(0,l.kt)("td",{parentName:"tr",align:null},"Root Port"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6839\u7aef\u53e3"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6700\u4f73\u8def\u5f84\u7aef\u53e3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DP"),(0,l.kt)("td",{parentName:"tr",align:null},"Designated Port"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6307\u5b9a\u7aef\u53e3"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6bcf\u4e00\u4e2a\u7f51\u6bb5\u9009\u62e9\u5230\u6839\u6865\u6700\u8fd1\u7684\u7f51\u6865\u4f5c\u4e3a\u6307\u5b9a\u7f51\u6865, \u8be5\u7f51\u6865\u5230\u8fd9\u4e00\u7f51\u6bb5\u7684\u7aef\u53e3\u4e3a\u6307\u5b9a\u7aef\u53e3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"AP"),(0,l.kt)("td",{parentName:"tr",align:null},"Alternated Port"),(0,l.kt)("td",{parentName:"tr",align:null},"\u53ef\u9009\u7aef\u53e3"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5373\u963b\u585e\u7aef\u53e3, \u65e2\u4e0d\u662f\u6307\u5b9a\u7aef\u53e3, \u4e5f\u4e0d\u662f\u6839\u7aef\u53e3\u7684\u7aef\u53e3")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u7aef\u53e3\u72b6\u6001")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Status"),(0,l.kt)("th",{parentName:"tr",align:null},"Data"),(0,l.kt)("th",{parentName:"tr",align:null},"BPDU"),(0,l.kt)("th",{parentName:"tr",align:null},"Learn Address"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"no")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Blocking"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"recv"),(0,l.kt)("td",{parentName:"tr",align:null},"no")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Listening"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"no")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Learning"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"start")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Forwarding"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"yes")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Blocking(20s) \u2013> Listening(15s) \u2013> Learning(15s) \u2013> Forwarding")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/mstpd/mstpd"},"mstpd/mstpd")," - Multiple Spanning Tree Protocol Daemon"),(0,l.kt)("li",{parentName:"ul"},"wikipedia ",(0,l.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Spanning_Tree_Protocol"},"Spanning Tree Protocol")),(0,l.kt)("li",{parentName:"ul"},"wikipedia ",(0,l.kt)("a",{parentName:"li",href:"https://zh.wikipedia.org/wiki/%E7%94%9F%E6%88%90%E6%A0%91%E5%8D%8F%E8%AE%AE"},"\u751f\u6210\u6811\u534f\u8bae")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.cnblogs.com/hzl6255/p/3259909.html"},"Linux STP \u4ecb\u7ecd")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://tldp.org/HOWTO/BRIDGE-STP-HOWTO/"},"Linux BRIDGE-STP-HOWTO")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://www.embeddedlinux.org.cn/linux_net/0596002556/understandlni-CHP-16-SECT-16.html"},"Spanning Tree Protocol")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://serverfault.com/questions/824621"},"Linux: bridges, VLANs and RSTP"))))),(0,l.kt)("h1",{id:"faq"},"FAQ"),(0,l.kt)("h2",{id:"\u6865\u63a5\u7f51\u5361\u4e0d\u4f7f\u7528\u5b9e\u9645\u7f51\u5361-mac-\u5730\u5740"},"\u6865\u63a5\u7f51\u5361\u4e0d\u4f7f\u7528\u5b9e\u9645\u7f51\u5361 Mac \u5730\u5740"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"\u6865\u63a5\u7f51\u5361 MAC \u5730\u5740\u4f1a\u53d8\u5bfc\u81f4 dhcp \u83b7\u53d6\u7684\u5730\u5740\u4e0d\u7a33\u5b9a")),(0,l.kt)("p",null,"\u9ed8\u8ba4\u9009\u62e9\u6700\u4f4e mac - \u6392\u5e8f\u6700\u524d\uff0c\u4e00\u822c\u865a\u62df\u7f51\u5361\u7684 mac \u4f1a\u6bd4\u5b9e\u9645\u7684\u66f4\u4f4e\uff0c\u5bfc\u81f4\u88ab\u4f18\u5148\u9009\u62e9\u3002"),(0,l.kt)("p",null,"brctl addif \u6dfb\u52a0 slave \u7684\u65f6\u5019\u4e5f\u4f1a\u53d8"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u6dfb\u52a0 slave \u7684\u65f6\u5019\u8bb0\u5f55 mac \u518d\u8bbe\u7f6e\u56de\u53bb"),(0,l.kt)("li",{parentName:"ol"},"\u5c06\u865a\u62df\u7f51\u5361\u7684 mac \u8bbe\u7f6e\u9ad8\u4e00\u70b9")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u63a8\u8350")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# \u65b9\u6cd5 1\nmac=$(cat /etc/tinc/br0/address)\nip li set $IFACE master br0\nip li set br0 address $mac\n\n# \u65b9\u6cd5 2\nip link set $IFACE address fe:12:34:56:78:9a\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://lists.linuxfoundation.org/pipermail/bridge/2006-January/003036.html"},"Bridge Interface MAC address assignment")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/hansode/linux-bridge-mac-addresses-and-dynamic-ports"},"hansode/linux-bridge-mac-addresses-and-dynamic-ports"))))),(0,l.kt)("h2",{id:"tinc-\u8282\u70b9\u907f\u514d-mac-\u51b2\u7a81"},"tinc \u8282\u70b9\u907f\u514d mac \u51b2\u7a81"),(0,l.kt)("p",null,"\u8bbe\u7f6e\u9ad8 mac"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"ip li set $INTERFACE address fe:fe:12:34:56:78\nip li set $INTERFACE master br0\nip li set $INTERFACE up\nip addr add 10.10.1.1/16 dev br0\n")))}s.isMDXComponent=!0}}]);