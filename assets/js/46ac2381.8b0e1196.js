"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[42377],{49613:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return f}});var n=t(59496);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),p=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=p(e.components);return n.createElement(s.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(f,l(l({ref:r},c),{},{components:t})):n.createElement(f,l({ref:r},c))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=m;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},68030:function(e,r,t){t.r(r),t.d(r,{assets:function(){return z},contentTitle:function(){return b},default:function(){return v},frontMatter:function(){return f},metadata:function(){return y},toc:function(){return g}});var n=t(49613),o=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,r,t)=>r in e?o(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,d=(e,r)=>{for(var t in r||(r={}))s.call(r,t)&&c(e,t,r[t]);if(i)for(var t of i(r))p.call(r,t)&&c(e,t,r[t]);return e},u=(e,r)=>a(e,l(r)),m=(e,r)=>{var t={};for(var n in e)s.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&i)for(var n of i(e))r.indexOf(n)<0&&p.call(e,n)&&(t[n]=e[n]);return t};const f={title:"drizzle"},b="Drizzle",y={unversionedId:"web/nodejs/drizzle",id:"web/nodejs/drizzle",title:"drizzle",description:"MySQL",source:"@site/../notes/web/nodejs/drizzle.md",sourceDirName:"web/nodejs",slug:"/web/nodejs/drizzle",permalink:"/notes/web/nodejs/drizzle",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/web/nodejs/drizzle.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1698118598,formattedLastUpdatedAt:"Oct 24, 2023",frontMatter:{title:"drizzle"},sidebar:"docs",previous:{title:"NodeJS",permalink:"/notes/web/nodejs/"},next:{title:"fastify",permalink:"/notes/web/nodejs/fastify"}},z={},g=[{value:"MySQL",id:"mysql",level:2}],w={toc:g},O="wrapper";function v(e){var r=e,{components:t}=r,o=m(r,["components"]);return(0,n.kt)(O,u(d(d({},w),o),{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",d({},{id:"drizzle"}),"Drizzle"),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"# PostgreSQL\nnpm add drizzle-orm pg\nnpm add -D drizzle-kit @types/pg\n")),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-ts"}),"import { pgTable, serial, text, varchar } from 'drizzle-orm/pg-core';\nimport { drizzle } from 'drizzle-orm/node-postgres';\nimport { Pool } from 'pg';\n\nconst pool = new Pool({\n  connectionString: 'postgres://user:password@host:port/db',\n});\n\n// or\nconst pool = new Pool({\n  host: '127.0.0.1',\n  port: 5432,\n  user: 'postgres',\n  password: 'password',\n  database: 'db_name',\n});\n\nconst db = drizzle(pool);\n")),(0,n.kt)("h2",d({},{id:"mysql"}),"MySQL"),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"# MySQL\nnpm add drizzle-orm mysql2\nnpm add -D drizzle-kit\n")),(0,n.kt)("pre",null,(0,n.kt)("code",d({parentName:"pre"},{className:"language-ts"}),'import { drizzle } from "drizzle-orm/mysql2";\nimport mysql from "mysql2/promise";\n\nconst poolConnection = mysql.createPool({\n  host: "host",\n  user: "user",\n  database: "database",\n  ...\n});\n\nconst db = drizzle(poolConnection);\n')))}v.isMDXComponent=!0}}]);