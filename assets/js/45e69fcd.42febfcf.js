"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[87450],{49613:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return h}});var n=a(59496);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=p(a),h=l,d=m["".concat(s,".").concat(h)]||m[h]||c[h]||r;return a?n.createElement(d,o(o({ref:t},u),{},{components:a})):n.createElement(d,o({ref:t},u))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},32301:function(e,t,a){a.r(t),a.d(t,{assets:function(){return k},contentTitle:function(){return h},default:function(){return f},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return g}});var n=a(49613),l=Object.defineProperty,r=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,a)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a,c=(e,t)=>{for(var a in t||(t={}))s.call(t,a)&&u(e,a,t[a]);if(i)for(var a of i(t))p.call(t,a)&&u(e,a,t[a]);return e};const m={title:"Bash"},h="Bash",d={unversionedId:"os/linux/shell/bash",id:"os/linux/shell/bash",title:"Bash",description:"- \u914d\u7f6e",source:"@site/../notes/os/linux/shell/bash.md",sourceDirName:"os/linux/shell",slug:"/os/linux/shell/bash",permalink:"/notes/os/linux/shell/bash",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/shell/bash.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1660892989,formattedLastUpdatedAt:"Aug 19, 2022",frontMatter:{title:"Bash"},sidebar:"docs",previous:{title:"Grsecurity",permalink:"/notes/os/linux/security/grsecurity"},next:{title:"dd",permalink:"/notes/os/linux/shell/dd"}},k={},g=[{value:"\u8bed\u6cd5",id:"\u8bed\u6cd5",level:2},{value:"set",id:"set",level:2},{value:"shopt",id:"shopt",level:2},{value:".inputrc",id:"inputrc",level:2},{value:"FAQ",id:"faq",level:2},{value:"Prefix/Suffix",id:"prefixsuffix",level:3},{value:"\u66ff\u6362",id:"\u66ff\u6362",level:2},{value:"Parallels",id:"parallels",level:2},{value:"Base N",id:"base-n",level:2},{value:"SSH",id:"ssh",level:2},{value:"xargs",id:"xargs",level:2},{value:"case",id:"case",level:2},{value:"\u4f7f\u7528\u53d8\u91cf\u540d\u5b57\u8bbf\u95ee\u53d8\u91cf",id:"\u4f7f\u7528\u53d8\u91cf\u540d\u5b57\u8bbf\u95ee\u53d8\u91cf",level:2},{value:"dotenv",id:"dotenv",level:2},{value:"heredoc",id:"heredoc",level:2},{value:"sub shell",id:"sub-shell",level:2},{value:"tcp redir",id:"tcp-redir",level:2},{value:"git branch",id:"git-branch",level:2}],b={toc:g};function f(e){var t,a=e,{components:l}=a,u=((e,t)=>{var a={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(a[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&p.call(e,n)&&(a[n]=e[n]);return a})(a,["components"]);return(0,n.kt)("wrapper",(t=c(c({},b),u),r(t,o({components:l,mdxType:"MDXLayout"}))),(0,n.kt)("h1",c({},{id:"bash"}),"Bash"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u914d\u7f6e",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},".inputrc"),(0,n.kt)("li",{parentName:"ul"},".bashrc - \u4ea4\u4e92 shell"),(0,n.kt)("li",{parentName:"ul"},".profile, .bash_profile - \u767b\u9646 shell"))),(0,n.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://www.gnu.org/software/bash/manual/bash.html"}),"Bash Reference Manual")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"http://mywiki.wooledge.org/BashPitfalls"}),"http://mywiki.wooledge.org/BashPitfalls"))))),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# empty shell\nenv -i /usr/local/bin/bash\n\n# empty env\nenv -i HOME=\"$HOME\" /usr/local/bin/bash -c 'env'\n\n# login shell\ntime env -i HOME=\"$HOME\" LOG4BASH_LOG_LEVE=DEBUG /usr/local/bin/bash -l -c 'env'\n")),(0,n.kt)("h2",c({},{id:"\u8bed\u6cd5"}),"\u8bed\u6cd5"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"[")," = test"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"[[")," - shell \u5185\u7f6e\u8bed\u6cd5 - \u901f\u5ea6\u66f4\u5feb\u4e00\u70b9\u70b9",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u652f\u6301 ",(0,n.kt)("inlineCode",{parentName:"li"},"&&"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"||")," \u8bed\u6cd5"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{}")," - \u5c55\u5f00",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"${var}")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"${var:=default}")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"${var/find/replace}")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"${var%remove}")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{000..2}")," - \u5e8f\u5217\u5c55\u5f00"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{000..2..2}")," - \u5e26 step \u53c2\u6570"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"echo x{,A,B,C}")," - \u7ec4\u5408\u5c55\u5f00"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"{ echo 1; echo 2; }")," - \u547d\u4ee4\u5e8f\u5217"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"(())")," - \u7b97\u672f\u64cd\u4f5c"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"()")," - subshell, array")),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# for \u5faa\u73af\n# ===========\n# bash \u8bed\u6cd5\nfor ((i = 0; i < 3; i++)); do echo $i; done\n# bash \u5c55\u5f00\u5e8f\u5217\nfor i in {0..2}; do echo $i; done\n# \u4f7f\u7528 seq \u751f\u6210\u5e8f\u5217 - ash \u652f\u6301\nfor i in $(seq 0 2); do echo $i; done\nfor i in $(seq 0 $((3 - 1))); do echo $i; done\n")),(0,n.kt)("h2",c({},{id:"set"}),"set"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",c({parentName:"tr"},{align:null}),"set"),(0,n.kt)("th",c({parentName:"tr"},{align:null}),"set -o"),(0,n.kt)("th",c({parentName:"tr"},{align:null})))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"a"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"allexport"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"export \u6240\u6709\u53d8\u91cf")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"E"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"errtrace"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"\u7ee7\u627f ERR trap")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"e"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"errexit"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"\u547d\u4ee4\u5931\u8d25(\u8fd4\u56de\u975e 0)\u5219\u9000\u51fa\u811a\u672c")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"u"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"nounset"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"\u8981\u6c42\u53d8\u91cf unset")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"x"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"xtrace"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"trace - \u56de\u663e\u6267\u884c\u7684\u5185\u5bb9, \u8f93\u51fa\u524d\u7f00\u4e3a PS4")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"B"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"braceexpand"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"\u5c55\u5f00 ",(0,n.kt)("inlineCode",{parentName:"td"},"{"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"T"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"functrace"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"h"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"hashall"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"H"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"histexpand"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null})),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"pipefail"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"pipe \u5931\u8d25\u4e5f\u9000\u51fa")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null})),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"posix"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"Bash \u7b26\u5408 POSIX \u6807\u51c6")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"t"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"onecmd"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"\u6267\u884c\u4e00\u6761\u547d\u4ee4\u540e\u4fbf\u9000\u51fa")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",c({parentName:"tr"},{align:null}),"v"),(0,n.kt)("td",c({parentName:"tr"},{align:null}),"verbose"),(0,n.kt)("td",c({parentName:"tr"},{align:null}))))),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# \u63a8\u8350\nset -Eeuo pipefail\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"trap ERR \u53ef\u5904\u7406 -e \u9000\u51fa"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html"}),"set"))),(0,n.kt)("h2",c({},{id:"shopt"}),"shopt"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Bash \u6269\u5c55\u9009\u9879")),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),"shopt [-pqsu] [-o] [optname \u2026]\n")),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"shopt -s extglob # \u5f00\u542f\nshopt -u extglob # \u5173\u95ed\nshopt -q extglob # \u4f7f\u7528 exit code \u8868\u793a\u662f\u5426\u5f00\u542f\nshopt extglob    # \u5f53\u524d\u72b6\u6001\nshopt            # \u5168\u90e8\u72b6\u6001\nshopt -o nolog   # \u9650\u5b9a\u5185\u7f6e set \u652f\u6301\u9009\u9879\u800c\u975e\u6269\u5c55\u9009\u9879\n\n# \u6240\u6709 on \u7684\u9009\u9879\nshopt | grep \"on$\" | grep -o '^\\S\\+'\n# \u63a8\u8350\nshopt -s autocd cdspell extglob globstar\n\n# \u9ed8\u8ba4\u5f00\u542f\u9009\u9879\nshopt -s checkwinsize cmdhist expand_aliases extquote force_fignore hostcomplete interactive_comments progcomp promptvars sourcepath\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"globstar - ",(0,n.kt)("inlineCode",{parentName:"li"},"**")," \u4f1a\u5339\u914d\u5f53\u524d\u800c\u4e0d\u53ea\u662f\u5b50\u76ee\u5f55",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# \u4f1a\u5339\u914d Makefile\nls **/Makefile\n"))),(0,n.kt)("li",{parentName:"ul"},"extglob - \u6269\u5c55 glob \u8bed\u6cd5",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"[?*+@!](pattern-list)"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"!")," \u6392\u9664"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@")," \u5339\u914d 1 \u4e2a"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://www.gnu.org/software/bash/manual/html_node/Pattern-Matching.html"}),"Pattern Matching"))),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# \u590d\u5236 scripts \u4e0b\u7684 Makefile \u5230\u6240\u6709\u5176\u4ed6 Makefile\nls !(scripts)/**/Makefile | xargs -n 1 cp scripts/stub/Makefile\n"))),(0,n.kt)("li",{parentName:"ul"},"nocaseglob - glob \u5927\u5c0f\u5199\u4e0d\u654f\u611f"),(0,n.kt)("li",{parentName:"ul"},"histappend - \u8ffd\u52a0\u5230\u5386\u53f2\u6587\u4ef6\u800c\u4e0d\u662f\u91cd\u5199"),(0,n.kt)("li",{parentName:"ul"},"cdspell - \u4f7f\u7528 cd \u65f6\u81ea\u52a8\u6821\u6b63\u4e66\u5199",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"cd ignorad # \u4f1a cd \u5230\u5b58\u5728\u7684 ignored \u76ee\u5f55 - a -> e\n"))),(0,n.kt)("li",{parentName:"ul"},"autocd - \u8f93\u5165\u76ee\u5f55\u81ea\u52a8\u5207\u6362\u5230\u76ee\u5f55"),(0,n.kt)("li",{parentName:"ul"},"failglob - glob \u5339\u914d\u4e0d\u5230\u6587\u4ef6\u65f6\u51fa\u9519\u800c\u975e \u76f4\u63a5\u8f93\u51fa\u76f8\u540c\u5b57\u7b26")),(0,n.kt)("h2",c({},{id:"inputrc"}),".inputrc"),(0,n.kt)("p",null,"C-x C-r is bound to re-read-init-file."),(0,n.kt)("p",null,(0,n.kt)("a",c({parentName:"p"},{href:"https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html"}),"https://www.gnu.org/software/bash/manual/html_node/Readline-Init-File.html")),(0,n.kt)("p",null,(0,n.kt)("a",c({parentName:"p"},{href:"https://www.gnu.org/software/bash/manual/bashref.html#Miscellaneous-Commands"}),"https://www.gnu.org/software/bash/manual/bashref.html#Miscellaneous-Commands")),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'# Make Tab autocomplete regardless of filename case\nset completion-ignore-case on\n\n# List all matches in case multiple possible completions are possible\nset show-all-if-ambiguous on\n\n# Immediately add a trailing slash when autocompleting symlinks to directories\nset mark-symlinked-directories on\n\n# Use the text that has already been typed as the prefix for searching through\n# commands (i.e. more intelligent Up/Down behavior)\n"\\eOA": history-search-backward\n"\\e[A": history-search-backward\n"\\eOB": history-search-forward\n"\\e[B": history-search-forward\n')),(0,n.kt)("h2",c({},{id:"faq"}),"FAQ"),(0,n.kt)("h3",c({},{id:"prefixsuffix"}),"Prefix/Suffix"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'# \u53bb\u9664\u524d\u7f00\u548c\u540e\u7f00\nx="/foo/fizzbuzz.bar"\ny=${x%.bar}\necho ${y##*/}\n#> fizzbuzz\n\n# \u53bb\u9664\u540e\u7f00\nx="/foo/fizzbuzz.bar.quux"\ny=${x%.*}\necho $y\n#> /foo/fizzbuzz.bar\ny=${x%%.*}\necho $y\n#> /foo/fizzbuzz\n\n# \u53bb\u9664\u524d\u7f00\nx=/foo/bar/bim/baz/file.gif\ny=${path##*/}\necho $y\n#> file.gif\n')),(0,n.kt)("h2",c({},{id:"\u66ff\u6362"}),"\u66ff\u6362"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"a=abc/da\n# zbc/da\necho ${a/a/z}\n# // \u662f\u6240\u6709\n# zbc/dz\necho ${a//a/z}\n# \u8f6c\u610f\n# abczda\necho ${a//\\//z}\n")),(0,n.kt)("h2",c({},{id:"parallels"}),"Parallels"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'# do it once\nseq 1 | parallel -n0 "curl -H \'Content-Type: application/json\' http://httpbin.org/post -X POST -d \'{\\"url\\":\\"http://google.com/\\"}\'"\n\n# do it twice\nseq 2 | parallel -n0 "curl -H \'Content-Type: application/json\' http://httpbin.org/post -X POST -d \'{\\"url\\":\\"http://google.com/\\"}\'"\n\n# do it 4 times, but at 2 a time\nseq 4 | parallel -n0 -j2 "curl -H \'Content-Type: application/json\' http://httpbin.org/post -X POST -d \'{\\"url\\":\\"http://google.com/\\"}\'"\n\n# you can also put all your commands into a file\necho "ls\\nls" > somefile\ncat somefile | parallel\n\n# finally, just straight command line parameters\nparallel echo ::: a b c\n\n# by default, it runs as many jobs in parallel as there are cores in your computer\n\n# if you try and set more jobs than there are cores, they will be concurrent, but\n# they will only ever be parallel up to your core count\n\n# for httpie use the --ignore-stdin flag, or else it gets mixed up\nseq 1 | parallel -n0 "http --ignore-stdin POST http://httpbin.org/post url=http://google.com/"\n')),(0,n.kt)("h2",c({},{id:"base-n"}),"Base N"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),'# Encode base62\nBASE62=($(echo {0..9} {a..z} {A..Z}))\nfor i in $(bc <<< "obase=62; 9207903953"); do\n    echo -n ${BASE62[$(( 10#$i ))]}\ndone && echo\n# Decode base62\nbase62_decode() { echo $((62#$1)) }\n')),(0,n.kt)("h2",c({},{id:"ssh"}),"SSH"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'# download: remote -> local\n# local_file \u53ef\u4ee5\u4e3a\u76ee\u5f55\u7528 -r \u9012\u5f52\nscp user@remote_host:remote_file local_file\n# upload: local -> remote\nscp local_file user@remote_host:remote_file\n\n# To Forward sshtalk.in:8080 -> Cort.local:4567, you can do\nlocal="Cort.local:4567" # or "localhost:4567"\nremot="*:8080"          # "*" for all interfaces (default is loopback)\n\nssh -R ${remote}:${local} sshtalk.in\n\n# To forward localhost:1234 -> private-host:443, through public-host you can do\nlocal="localhost:1234"   # or just "1234" default is localhost\nremot="private-host:443" # "*" for all interfaces (default is loopback)\n\nssh -L ${local}:${remote} public-host\n\n# \u987b\u5728\u5728Server\u7aef\u5141\u8bb8\u8f6c\u53d1\n# \u5728 /etc/ssh/sshd_config \u4e2d\u6dfb\u52a0\n# GatewayPorts yes\n# \u7136\u540e\u91cd\u542f\nsudo service sshd restart\n')),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'# scp to \u591a\u53f0\nfor dest in $(< destfile.txt); do\n  scp ourfile.txt ${dest}:remote/path/\ndone\n\n# \u5728\u4e0d\u7528 scp \u7684\u60c5\u51b5\u4e0b \u62f7\u8d1d\u5230\u591a\u53f0\ncat file.txt | tee \\\n  >(ssh user@ip1.com "cat > file.txt") \\\n  >(ssh user@ip2.com "cat > file.txt")\n\ntar cz file1 file2 file3 | tee \\\n  >(ssh user@ip1.com "tar xz") \\\n  >(...)\n')),(0,n.kt)("h2",c({},{id:"xargs"}),"xargs"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"http://www.thegeekstuff.com/2013/12/xargs-examples/"}),"xargs example"))),(0,n.kt)("h2",c({},{id:"case"}),"case"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'case $space in\n  [1-6]*)\n    Message="All is quiet."\n    ;;\n  [7-8]*)\n    Message="Start thinking about cleaning out some stuff.  There\'s a partition that is $space % full."\n    ;;\n  9[1-8])\n    Message="Better hurry with that new disk...  One partition is $space % full."\n    ;;\n  99)\n    Message="I\'m drowning here!  There\'s a partition at $space %!"\n    ;;\n  *)\n    Message="I seem to be running with an nonexistent amount of disk space..."\n    ;;\nesac\n')),(0,n.kt)("h2",c({},{id:"\u4f7f\u7528\u53d8\u91cf\u540d\u5b57\u8bbf\u95ee\u53d8\u91cf"}),"\u4f7f\u7528\u53d8\u91cf\u540d\u5b57\u8bbf\u95ee\u53d8\u91cf"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html"}),"Shell Parameter Expansion"))),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"a=PATH\necho ${!a}\n")),(0,n.kt)("h2",c({},{id:"dotenv"}),"dotenv"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"env $(cat .env | xargs) sh -c 'echo $MY_ENV'\n")),(0,n.kt)("h2",c({},{id:"heredoc"}),"heredoc"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'cat << EOF\nPWD=$PWD\nEOF\n# \u8f6c\u4e49\ncat << "EOF"\nPWD=$PWD\nEOF\n# \u79fb\u9664\u7f29\u8fdb - \u9700\u8981 tab\ncat <<- EOF\n    PWD=$PWD\n    EOF\n')),(0,n.kt)("h2",c({},{id:"sub-shell"}),"sub shell"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://tldp.org/LDP/abs/html/subshells.html"}),"https://tldp.org/LDP/abs/html/subshells.html"))),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"(echo 1)\n\n# \u4f1a\u8f93\u51fa 1 2 3 4\nbash << SH &\necho 1\necho 2 && (echo 3; exit 1;)\necho 4\nSH\n")),(0,n.kt)("h2",c({},{id:"tcp-redir"}),"tcp redir"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"echo <>/dev/tcp/wener.me/80\n# 0 - \u8fde\u901a\necho $?\n\necho <>/dev/tcp/localhost/80\n# 1\necho $?\n")),(0,n.kt)("h2",c({},{id:"git-branch"}),"git branch"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"curl -Lo ~/.git-prompt.sh https://github.com/git/git/raw/master/contrib/completion/git-prompt.sh\nsource ~/.git-prompt.sh\n\n__git_ps1 '%s'\n\nexport PS1='\\[\\e[32m\\]\\u@\\h \\[\\e[01;33m\\]\\w $(__git_ps1 \" (%s)\") \\[\\e[34m\\][\\t] \\[\\e[0m\\]\\n$ '\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh"}),"https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh"))))}f.isMDXComponent=!0}}]);