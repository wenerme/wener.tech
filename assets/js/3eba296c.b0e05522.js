"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[7493],{3905:function(e,n,r){r.d(n,{Zo:function(){return m},kt:function(){return f}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=t.createContext({}),s=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},m=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(r),f=o,_=u["".concat(l,".").concat(f)]||u[f]||p[f]||a;return r?t.createElement(_,c(c({ref:n},m),{},{components:r})):t.createElement(_,c({ref:n},m))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=u;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},92793:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var t=r(22122),o=r(19756),a=(r(67294),r(3905)),c=["components"],i={id:"terraform-cookbook",title:"Terraform \u5e38\u7528\u811a\u672c"},l=void 0,s={unversionedId:"ops/infra/terraform-cookbook",id:"ops/infra/terraform-cookbook",isDocsHomePage:!1,title:"Terraform \u5e38\u7528\u811a\u672c",description:"acme dns challenge",source:"@site/notes/ops/infra/terraform-cookbook.md",sourceDirName:"ops/infra",slug:"/ops/infra/terraform-cookbook",permalink:"/notes/ops/infra/terraform-cookbook",editUrl:"https://github.com/wenerme/wener/edit/master/notes/ops/infra/terraform-cookbook.md",version:"current",frontMatter:{id:"terraform-cookbook",title:"Terraform \u5e38\u7528\u811a\u672c"},sidebar:"docs",previous:{title:"cf-terraforming",permalink:"/notes/ops/infra/terraform-cf"},next:{title:"Terraform K8S",permalink:"/notes/ops/infra/terraform-k8s"}},m=[{value:"acme dns challenge",id:"acme-dns-challenge",children:[]},{value:"\u6a21\u677f\u6e32\u67d3\u89e6\u53d1\u547d\u4ee4",id:"\u6a21\u677f\u6e32\u67d3\u89e6\u53d1\u547d\u4ee4",children:[]}],p={toc:m};function u(e){var n=e.components,r=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,t.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"acme-dns-challenge"},"acme dns challenge"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'variable "alicloud_access_key"{type=string}\nvariable "alicloud_secret_key"{type=string}\n\nprovider "acme" {\n  server_url = "https://acme-v02.api.letsencrypt.org/directory"\n}\n\nresource "tls_private_key" "any_wener_me_private_key" {\n  algorithm = "RSA"\n}\n\nresource "acme_registration" "any_wener_me_reg" {\n  account_key_pem = "${tls_private_key.any_wener_me_private_key.private_key_pem}"\n  email_address   = "admin@wener.me"\n}\n\nresource "acme_certificate" "any_wener_me" {\n  account_key_pem           = "${acme_registration.any_wener_me_reg.account_key_pem}"\n  common_name               = "wener.me"\n  subject_alternative_names = ["*.wener.me"]\n\n  dns_challenge {\n    provider = "alidns"\n\n    config = {\n      ALICLOUD_ACCESS_KEY    = var.alicloud_access_key\n      ALICLOUD_SECRET_KEY    = var.alicloud_secret_key\n    }\n\n    # pdns\n    # PDNS_API_KEY\n    # PDNS_API_URL\n\n    # rfc2136\n    # RFC2136_NAMESERVER - "host" or "host:port".\n    # RFC2136_TSIG_ALGORITHM - \u652f\u6301\u7b97\u6cd5 https://github.com/miekg/dns/blob/master/tsig.go#L18 - \u4e0d\u8bbe\u7f6e TSIG \u76f8\u5173\u53d8\u91cf\u5219\u7981\u7528\n    # RFC2136_TSIG_KEY\n    # RFC2136_TSIG_SECRET\n  }\n}\n\n# write cert and key\nresource "local_file" "any_wener_me_crt" {\n    sensitive_content     = acme_certificate.any_wener_me.certificate_pem\n    filename = "${path.module}/wener.me.crt"\n    file_permission = 0600\n}\nresource "local_file" "any_wener_me_key" {\n    sensitive_content     = acme_certificate.any_wener_me.private_key_pem\n    filename = "${path.module}/wener.me.key"\n    file_permission = 0600\n}\n')),(0,a.kt)("h2",{id:"\u6a21\u677f\u6e32\u67d3\u89e6\u53d1\u547d\u4ee4"},"\u6a21\u677f\u6e32\u67d3\u89e6\u53d1\u547d\u4ee4"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-hcl"},'# \u6e32\u67d3\u6a21\u677f\ndata "template_file" "cluster-manifesto" {\n  template = "${file("${path.module}/cluster.yaml.tpl")}"\n  vars {\n    # ....\n  }\n}\n\n# \u5199\u5165\u6587\u4ef6\nresource "local_file" "saved-cluster-manifesto" {\n  content = "${data.template_file.cluster-manifesto.rendered}"\n  filename = "${local.cluster_manifesto_path}"\n}\n\n# \u4f7f\u7528\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\nresource "null_resource" "cluster-upload" {\n  triggers {\n    file = "${data.template_file.cluster-manifesto.rendered}"\n  }\n\n  provisioner "local-exec" {\n    command = "kops -v 10 replace -f ${local.cluster_manifesto_path}\n  }\n}\n')))}u.isMDXComponent=!0}}]);