"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[96518],{49613:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return b}});var n=t(59496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),m=p(t),b=a,f=m["".concat(l,".").concat(b)]||m[b]||s[b]||o;return t?n.createElement(f,i(i({ref:r},u),{},{components:t})):n.createElement(f,i({ref:r},u))}));function b(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},67207:function(e,r,t){t.r(r),t.d(r,{assets:function(){return y},contentTitle:function(){return b},default:function(){return O},frontMatter:function(){return m},metadata:function(){return f},toc:function(){return d}});var n=t(49613),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,r,t)=>r in e?a(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t,s=(e,r)=>{for(var t in r||(r={}))l.call(r,t)&&u(e,t,r[t]);if(c)for(var t of c(r))p.call(r,t)&&u(e,t,r[t]);return e};const m={title:"bramble"},b="bramble",f={unversionedId:"service/api/bramble",id:"service/api/bramble",title:"bramble",description:"- movio/bramble",source:"@site/../notes/service/api/bramble.md",sourceDirName:"service/api",slug:"/service/api/bramble",permalink:"/notes/service/api/bramble",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/api/bramble.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1634945411,formattedLastUpdatedAt:"Oct 22, 2021",frontMatter:{title:"bramble"},sidebar:"docs",previous:{title:"Apollo Federation",permalink:"/notes/service/api/apollo-federation"},next:{title:"buf",permalink:"/notes/service/api/buf"}},y={},d=[],v={toc:d};function O(e){var r,t=e,{components:a}=t,u=((e,r)=>{var t={};for(var n in e)l.call(e,n)&&r.indexOf(n)<0&&(t[n]=e[n]);if(null!=e&&c)for(var n of c(e))r.indexOf(n)<0&&p.call(e,n)&&(t[n]=e[n]);return t})(t,["components"]);return(0,n.kt)("wrapper",(r=s(s({},v),u),o(r,i({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"bramble"}),"bramble"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://github.com/movio/bramble"}),"movio/bramble"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"MIT, Golang"),(0,n.kt)("li",{parentName:"ul"},"GraphQL Gateway"),(0,n.kt)("li",{parentName:"ul"},"\u5305\u542b\u7b80\u5355\u7684 AdminUI")))),(0,n.kt)("admonition",s({},{type:"caution"}),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"\u6682\u4e0d\u652f\u6301 subscription"))),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-graphql"}),"type Service {\n  name: String!\n  version: String!\n  schema: String!\n}\n\ntype Query {\n  # \u8fd4\u56de \u670d\u52a1\u4fe1\u606f\n  service: Service!\n}\n\n# \u8de8\u670d\u52a1 \u7c7b\u578b - \u4f1a\u5408\u5e76\u7c7b\u578b\ndirective @boundary on OBJECT | FIELD_DEFINITION\n\n# \u591a\u4e2a\u670d\u52a1\u53ef\u540c\u65f6\u5728\u76f8\u540c ns \u4e0b\ndirective @namespace on OBJECT\n")),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-graphql"}),"type Gizmo @boundary {\n  id: ID!\n  size: Float!\n}\ntype Query {\n  gizmo(id: ID!): Gizmo @boundary\n}\n\ntype MyNamespaceQuery @namespace {\n  subnamespace: SubNamespaceQuery!\n}\ntype SubNamespaceQuery @namespace {\n  someField: String!\n}\ntype Query {\n  myNamespace: MyNamespaceQuery!\n}\n")))}O.isMDXComponent=!0}}]);