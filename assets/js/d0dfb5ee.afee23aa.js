/*! For license information please see d0dfb5ee.afee23aa.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[78280],{76196:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>_,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var s=r(2488),t=r(62780);const i={id:"dracut"},d="dracut",l={id:"os/linux/boot/dracut",title:"dracut",description:"- \u662f\u4ec0\u4e48",source:"@site/../notes/os/linux/boot/dracut.md",sourceDirName:"os/linux/boot",slug:"/os/linux/boot/dracut",permalink:"/notes/os/linux/boot/dracut",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/boot/dracut.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1605179571,formattedLastUpdatedAt:"Nov 12, 2020",frontMatter:{id:"dracut"},sidebar:"docs",previous:{title:"Linux Boot",permalink:"/notes/os/linux/boot/"},next:{title:"GRUB",permalink:"/notes/os/linux/boot/grub"}},o={},c=[{value:"modules",id:"modules",level:2},{value:"cmdline",id:"cmdline",level:2},{value:"\u542f\u52a8\u6d41\u7a0b",id:"\u542f\u52a8\u6d41\u7a0b",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"dracut",children:"dracut"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u662f\u4ec0\u4e48\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u6784\u5efa initramfs"}),"\n",(0,s.jsx)(n.li,{children:"\u5b9a\u4f4d\u548c\u6302\u8f7d rootfs"}),"\n",(0,s.jsx)(n.li,{children:"\u652f\u6301 btrfs, DM RAID, MD RAID, LVM2, device mapper multipath I/O, dm-crypt, cifs, FCoE, iSCSI, NBD, NFS"}),"\n",(0,s.jsx)(n.li,{children:"\u6e90\u81ea Redhat - \u56e0\u6b64 CentOS\u3001Fedora\u3001RHEL \u90fd\u662f"}),"\n",(0,s.jsx)(n.li,{children:"\u9664\u4e86 Redhat \u4e4b\u5916\u9ed8\u8ba4\u4f7f\u7528\u7684 - openSUSE\u3001SLES"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/dracutdevs/dracut",children:"dracutdevs/dracut"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://dracut.wiki.kernel.org",children:"dracut.wiki.kernel.org"})}),"\n",(0,s.jsxs)(n.li,{children:["\u6a21\u5757\u4f4d\u4e8e /usr/lib/dracut/modules.d\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/dracutdevs/dracut/tree/master/modules.d",children:"modules.d"})}),"\n",(0,s.jsxs)(n.li,{children:["rngd\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u865a\u62df\u673a\u73af\u5883\u6700\u597d\u542f\u52a8 rngd/haveged \u5426\u5219\u542f\u52a8\u975e\u5e38\u6162 200s+"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["fs-lib\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ext4"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/dracutdevs/dracut/blob/master/modules.d/90qemu/module-setup.sh",children:"qemu"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5305\u542b virtio"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/dracutdevs/dracut/tree/master/modules.d/98dracut-systemd",children:"dracut-systemd"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5927\u90e8\u5206\u5b9e\u9645\u542f\u52a8\u811a\u672c\u903b\u8f91"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://mirrors.edge.kernel.org/pub/linux/utils/boot/dracut/dracut.html",children:"\u6587\u6863"})}),"\n",(0,s.jsxs)(n.li,{children:["\u53c2\u8003\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://wiki.centos.org/TipsAndTricks/CreateNewInitrd",children:"Creating a New Initial RAM Disk"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"rd.luks=0 rd.lvm=0 rd.md=0 rd.dm=0"})," - \u4e0d\u626b\u63cf\u4e0d\u5fc5\u8981\u7684\u8bbe\u5907\u53ef\u4ee5\u52a0\u901f\u542f\u52a8"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# \u57fa\u7840\u5305\nyum install -y rng-tools nano\nsystemctl enable rngd\n\nlsinitrd /boot/initrd.img-4.6.0-1-amd64\nmodprobe --show-depends dm-raid|grep crc\n\n\n# --hostonly \u4ec5\u5b89\u88c5\u4e3b\u673a\u9700\u8981\u6a21\u5757\n# --add-drivers \u6dfb\u52a0\u5185\u6838\u6a21\u5757\ndracut --kver 4.18.0-193.19.1.el8_2.x86_64 --no-hostonly --add fs-lib initramfs\nlsinitrd initramfs\n\n# rootfs \u53ea\u5b89\u88c5 kernel-core \u7528\u4e8e\u6784\u5efa initrd\nyum install -y yum-utils\nrpm -Uvh --nodeps $(repoquery --location kernel-core)\n\n# \u67e5\u770b\u6240\u6709\u6a21\u5757\ndracut --kver 4.18.0-193.19.1.el8_2.x86_64 --no-hostonly --list-modules\n\ndracut -m "nfs network base" --no-hostonly initramfs-nfs-only.img\n\nyum install -y rng-tools\n# dracut-systemd systemd-initrd\n# virtio_mmio\ndracut initramfs --kver 4.18.0-193.19.1.el8_2.x86_64 \\\n  -f --no-hostonly -v \\\n  -m "base bash systemd dracut-systemd systemd-initrd qemu qemu-net fs-lib rngd busybox"  \\\n  --kernel-cmdline "rd.debug rd.shell rd.udev.debug rd.driver.pre=ext4 rd.driver.pre=virtio_mmio rd.break=cmdline rd.luks=0 rd.lvm=0 rd.md=0"\n\n'})}),"\n",(0,s.jsx)(n.h2,{id:"modules",children:"modules"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"05-bash - \u5b89\u88c5 bash \u4f5c\u4e3a /bin/sh"}),"\n",(0,s.jsx)(n.li,{children:"05-systemd - \u5b89\u88c5 systemd \u548c\u57fa\u7840\u670d\u52a1"}),"\n",(0,s.jsx)(n.li,{children:"05-busybox - \u5b89\u88c5 /usr/bin/busybox"}),"\n",(0,s.jsx)(n.li,{children:"06-rngd"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# busybox\ncurl -o /usr/bin/busybox https://busybox.net/downloads/binaries/1.31.0-defconfig-multiarch-musl/busybox-x86_64\nchmod +x /usr/bin/busybox\n\n# rngd\nyum install rng-tools -y\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cmdline",children:"cmdline"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["debug\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"rd.info \u65e5\u5fd7\u7ea7\u522b"}),"\n",(0,s.jsx)(n.li,{children:"rd.debug Shell \u6267\u884c\u4f1a set -x"}),"\n",(0,s.jsx)(n.li,{children:"rd.shell root \u6302\u8f7d\u5931\u8d25\u8fdb\u5165 shell"}),"\n",(0,s.jsx)(n.li,{children:"rd.break={cmdline|pre-udev|pre-trigger|initqueue|pre-mount|mount|pre-pivot|cleanup} \u8fdb\u5165 shell"}),"\n",(0,s.jsx)(n.li,{children:"rd.udev.info"}),"\n",(0,s.jsx)(n.li,{children:"rd.udev.debug"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["rd.emergency=[reboot|poweroff|halt]\nspecify, what action to execute in case of a critical failure. rd.shell=0 also be specified.\nrd.driver.blacklist=",(0,s.jsx)(n.code,{children:"<drivername>[,<drivername>,\u2026]"}),"\ndo not load kernel module ",(0,s.jsx)(n.code,{children:"<drivername>"}),". This parameter can be specified multiple times.\nrd.driver.pre=",(0,s.jsx)(n.code,{children:"<drivername>[,<drivername>,\u2026]"}),"\nforce loading kernel module ",(0,s.jsx)(n.code,{children:"<drivername>"}),". This parameter can be specified multiple times.\nrd.driver.post=",(0,s.jsx)(n.code,{children:"<drivername>[,<drivername>,\u2026]"}),"\nforce loading kernel module ",(0,s.jsx)(n.code,{children:"<drivername>"})," after all automatic loading modules have been loaded. This parameter can be specified multiple times.\nrd.retry=",(0,s.jsx)(n.code,{children:"<seconds>"}),"\nspecify how long dracut should retry the initqueue to configure devices. The default is 30 seconds. After 2/3 of the time, degraded raids are force started. If you have hardware, which takes a very long time to announce its drives, you might want to extend this value.\nrd.timeout=",(0,s.jsx)(n.code,{children:"<seconds>"}),"\nspecify how long dracut should wait for devices to appear. The default is 0, which means forever. Note that this timeout should be longer than rd.retry to allow for proper configuration.\nrd.noverifyssl\naccept self-signed certificates for ssl downloads.\nrd.ctty=",(0,s.jsx)(n.code,{children:"<terminal device>"}),'\nspecify the controlling terminal for the console. This is useful, if you have multiple "console=" arguments.']}),"\n",(0,s.jsx)(n.p,{children:"cp -r usr/lib/modules/4.18.0-193.19.1.el8_2.x86_64 lib/modules/"}),"\n",(0,s.jsx)(n.h2,{id:"\u542f\u52a8\u6d41\u7a0b",children:"\u542f\u52a8\u6d41\u7a0b"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://mirrors.edge.kernel.org/pub/linux/utils/boot/dracut/dracut.html#dracutbootup7",children:"dracut.bootup"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"                                    systemd-journal.socket\n                                               |\n                                               v\n                                    dracut-cmdline.service\n                                               |\n                                               v\n                                    dracut-pre-udev.service\n                                               |\n                                               v\n                                     systemd-udevd.service\n                                               |\n                                               v\nlocal-fs-pre.target                dracut-pre-trigger.service\n         |                                     |\n         v                                     v\n (various mounts)                systemd-udev-trigger.service\n         |        (swap devices)               |             (various low-level   (various low-level\n         |               |                     |             services: seed,       API VFS mounts:\n         v               v                     v             tmpfiles, random     mqueue, configfs,\n  local-fs.target   swap.target     dracut-initqueue.service    sysctl, ...)        debugfs, ...)\n         |               |                     |                    |                    |\n         \\_______________|____________________ | ___________________|____________________/\n                                              \\|/\n                                               v\n                                        sysinit.target\n                                               |\n                             _________________/|\\___________________\n                            /                  |                    \\\n                            |                  |                    |\n                            v                  |                    v\n                        (various               |              rescue.service\n                       sockets...)             |                    |\n                            |                  |                    v\n                            v                  |              rescue.target\n                     sockets.target            |\n                            |                  |\n                            \\_________________ |                                 emergency.service\n                                              \\|                                         |\n                                               v                                         v\n                                         basic.target                             emergency.target\n                                               |\n                        ______________________/|\n                       /                       |\n                       |                       v\n                       |            dracut-pre-mount.service\n                       |                       |\n                       |                       v\n                       |                  sysroot.mount\n                       |                       |\n                       |                       v\n                       |             initrd-root-fs.target\n           (custom initrd services)            |\n                       |                       v\n                       |             dracut-mount.service\n                       |                       |\n                       |                       v\n                       |            initrd-parse-etc.service\n                       |                       |\n                       |                       v\n                       |            (sysroot-usr.mount and\n                       |             various mounts marked\n                       |               with fstab option\n                       |                x-initrd.mount)\n                       |                       |\n                       |                       v\n                       |                initrd-fs.target\n                       \\______________________ |\n                                              \\|\n                                               v\n                                          initrd.target\n                                               |\n                                               v\n                                    dracut-pre-pivot.service\n                                               |\n                                               v\n                                     initrd-cleanup.service\n                                          isolates to\n                                    initrd-switch-root.target\n                                               |\n                                               v\n                        ______________________/|\n                       /                       |\n                       |        initrd-udevadm-cleanup-db.service\n                       |                       |\n           (custom initrd services)            |\n                       |                       |\n                       \\______________________ |\n                                              \\|\n                                               v\n                                   initrd-switch-root.target\n                                               |\n                                               v\n                                   initrd-switch-root.service\n                                               |\n                                               v\n                                          switch-root\n"})})]})}function _(e={}){const{wrapper:n}={...(0,t.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},38088:(e,n,r)=>{var s=r(96651),t=Symbol.for("react.element"),i=Symbol.for("react.fragment"),d=Object.prototype.hasOwnProperty,l=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,r){var s,i={},c=null,a=null;for(s in void 0!==r&&(c=""+r),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(a=n.ref),n)d.call(n,s)&&!o.hasOwnProperty(s)&&(i[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===i[s]&&(i[s]=n[s]);return{$$typeof:t,type:e,key:c,ref:a,props:i,_owner:l.current}}n.Fragment=i,n.jsx=c,n.jsxs=c},2488:(e,n,r)=>{e.exports=r(38088)},62780:(e,n,r)=>{r.d(n,{I:()=>l,M:()=>d});var s=r(96651);const t={},i=s.createContext(t);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);