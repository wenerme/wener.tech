"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[47642],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=c(n),f=r,h=d["".concat(s,".").concat(f)]||d[f]||u[f]||l;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},88174:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],o={title:"till"},s=void 0,c={unversionedId:"service/data/crawler/till",id:"service/data/crawler/till",title:"till",description:"- DataHenHQ/till \u662f\u4ec0\u4e48\uff1f",source:"@site/notes/service/data/crawler/till.md",sourceDirName:"service/data/crawler",slug:"/service/data/crawler/till",permalink:"/notes/service/data/crawler/till",editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/data/crawler/till.md",tags:[],version:"current",frontMatter:{title:"till"},sidebar:"docs",previous:{title:"Scrapy",permalink:"/notes/service/data/crawler/scrapy"},next:{title:"WARC",permalink:"/notes/service/data/crawler/warc"}},p=[{value:"config",id:"config",children:[],level:2}],u={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/DataHenHQ/till"},"DataHenHQ/till")," \u662f\u4ec0\u4e48\uff1f\n\u722c\u866b\u8bf7\u6c42\u4ee3\u7406",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Apache-2.0, Go"),(0,l.kt)("li",{parentName:"ul"},"\u9700\u8981\u4ece till.datahen.com \u83b7\u53d6 token",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u514d\u8d39 3 \u5b9e\u4f8b"))),(0,l.kt)("li",{parentName:"ul"},"\u968f\u673a User-Agent"),(0,l.kt)("li",{parentName:"ul"},"Proxy IP address rotation"),(0,l.kt)("li",{parentName:"ul"},"\u7c98\u6027\u4f1a\u8bdd",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"X-DH-Session-ID"))),(0,l.kt)("li",{parentName:"ul"},"Cookie \u7ba1\u7406"),(0,l.kt)("li",{parentName:"ul"},"\u8bf7\u6c42\u65e5\u5fd7"),(0,l.kt)("li",{parentName:"ul"},"HTTP \u7f13\u5b58",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u547d\u4e2d\u7f13\u5b58\u4f1a\u8fd4\u56de X-Dh-Cache-Created-At"))),(0,l.kt)("li",{parentName:"ul"},"Global ID/GID",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7f13\u5b58 Key"),(0,l.kt)("li",{parentName:"ul"},"\u4f1a\u8fd4\u56de X-DH-GID"),(0,l.kt)("li",{parentName:"ul"},"X-DH-Cache-Freshness \u7f13\u5b58\u5237\u65b0\u65f6\u95f4"),(0,l.kt)("li",{parentName:"ul"},"X-DH-Cache-Serve-Failures \u662f\u5426\u7f13\u5b58\u9519\u8bef\u54cd\u5e94"))))),(0,l.kt)("li",{parentName:"ul"},"~/.config/datahen/till",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"default.data/ - \u7f13\u5b58\u548c\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"proxylist.txt - \u4ee3\u7406\u5217\u8868, --proxy-file",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u683c\u5f0f\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"http://<user>:<password>@<ip>:<port>")),(0,l.kt)("li",{parentName:"ul"},"\u5f3a\u5236\u5207\u6362 X-DH-Cache-Freshness: now")))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# curl -LO https://github.com/DataHenHQ/till/releases/download/v0.8.0/till_0.8.0_Darwin_MacOS_x86_64.tar.gz\n\n# HTTP \u4ee3\u7406 http://localhost:2933\n# Till UI http://localhost:2980\ntill serve -t <token>\ncurl -k --proxy http://localhost:2933 https://fetchtest.datahen.com/echo/request\n")),(0,l.kt)("h2",{id:"config"},"config"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u914d\u7f6e\u540d\u5b57\u548c flag \u540d\u5b57\u57fa\u672c\u4e00\u81f4")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"~/.config/datahen/till/config.yaml")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# Get your auth token for FREE at https://till.datahen.com\ntoken: replace-with-your-token\n\n# The Till instance name.\n# This can be changed to match other instance names that you've\n# created on https://till.datahen.com/instances\ninstance: default\n\n# The data directory that is used by various features of Till to store data.\n# It usually follows the naming convention of `<instance name>.data`\ndatadir: ~/.config/datahen/till/default.data\n\n# The proxy port where your scraper codes will connect to.\nport: 2930\n\n# The port to the Till UI.\nuiport: 2980\n\n# Certificate Authority (CA) settings that Till will use to act as Man-In-The-Middle (MIITM) proxy.\n# The path to the CA certificate file.\nca-cert: ~/.config/datahen/till/till-ca-cert.pem\n# The path to the CA key file.\nca-key: ~/.config/datahen/till/till-ca-key.pem\n\n# User agent settings.\n# When set to true, it will override all user-agent with a randomly generated one\nforce-user-agent: false\n# specify user agent type to generate randomly.\nua-type: desktop\n\n# Proxy IP settings.\n# Path to the text file that contains a list of proxy IPs.\n# If you don't specify this, Till will use your real local IP address.\nproxy-file: ~/.config/datahen/till/proxylist.txt\n\n# Sticky Session settings\nsessions:\n  # Disable the sticky sessions feature.\n  # Defaults to false.\n  disabled: false\n\n  # TTL (Time To Live). How long a session record will be allowed to live before it gets deleted.\n  # Defaults to \"week\".\n  ttl: 'week'\n\n# Cache settings\ncache:\n  # Disable the cache feature.\n  # Defaults to false.\n  disabled: false\n\n  # TTL (Time To Live). How long a cache record will be allowed to live before it gets deleted.\n  # Defaults to \"week\".\n  ttl: 'week'\n\n  # Specifies by default on how fresh the Cache Hit will be.\n  # Defaults to \"any\"\n  freshness: 'any'\n\n  # Specifies if Till should serve cached responses of failed HTTP requests (non 2XX statuses)\n  # Defaults to false.\n  serve-failures: false\n\n# Logger settings\nlogger:\n  # Disable the logger feature\n  # Defaults to false.\n  disabled: false\n\n  # TTL (Time To Live). How long a request log record will be allowed to live before it gets deleted.\n  # Defaults to \"week\".\n  ttl: 'week'\n\n# \u8bf7\u6c42\u62e6\u622a\ninterceptors:\n  # this example intercept various image URLs and responds with a local image\n  - name: replace_images\n    disabled: true\n    matches:\n      pattern: '.+\\.(jpe?g|png|tiff|bmp|gif|webp)'\n      method: GET\n    responds:\n      code: 200\n      header:\n        'Content-Type': 'image/png'\n      file: '/path/to/your/image.png'\n  # this example intercept a certain URL and responds with a body\n  - name: replace_body\n    disabled: true\n    matches:\n      pattern: 'fetchtest\\.datahen\\.com\\/echo\\/request'\n      method: GET,POST\n    responds:\n      code: 200\n      header:\n        'Content-Type': 'application/json'\n      body: '{\"Hello\":\"this has been intercepted\"}'\n")))}d.isMDXComponent=!0}}]);