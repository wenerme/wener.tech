"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[59574],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},y={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(t),d=a,f=u["".concat(p,".").concat(d)]||u[d]||y[d]||s;return t?r.createElement(f,i(i({ref:n},c),{},{components:t})):r.createElement(f,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<s;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},65567:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return y}});var r=t(87462),a=t(63366),s=(t(67294),t(3905)),i=["components"],o={title:"TypeScript \u7c7b\u578b\u5b9a\u4e49"},p=void 0,l={unversionedId:"web/script/typescript/typescript-typing",id:"web/script/typescript/typescript-typing",title:"TypeScript \u7c7b\u578b\u5b9a\u4e49",description:"- sindresorhus/type-fest",source:"@site/notes/web/script/typescript/typescript-typing.md",sourceDirName:"web/script/typescript",slug:"/web/script/typescript/typescript-typing",permalink:"/notes/web/script/typescript/typescript-typing",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/web/script/typescript/typescript-typing.md",tags:[],version:"current",frontMatter:{title:"TypeScript \u7c7b\u578b\u5b9a\u4e49"},sidebar:"docs",previous:{title:"tsconfig.json",permalink:"/notes/web/script/typescript/typescript-tsconfig"},next:{title:"Typescript Version",permalink:"/notes/web/script/typescript/typescript-version"}},c={},y=[{value:"RequireOne",id:"requireone",level:2},{value:"\u5185\u7f6e",id:"\u5185\u7f6e",level:2},{value:"Optional",id:"optional",level:2},{value:"maybeFunction",id:"maybefunction",level:2},{value:"keyof \u5f3a\u5236\u4e3a string \u7c7b\u578b",id:"keyof-\u5f3a\u5236\u4e3a-string-\u7c7b\u578b",level:2},{value:"Example",id:"example",level:2},{value:"\u5141\u8bb8\u5bfc\u5165\u5176\u4ed6\u6587\u4ef6",id:"\u5141\u8bb8\u5bfc\u5165\u5176\u4ed6\u6587\u4ef6",level:2}],u={toc:y};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/sindresorhus/type-fest"},"sindresorhus/type-fest"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="\u8986\u76d6 lib"',title:'"\u8986\u76d6','lib"':!0},'{\n  "dependencies": {\n    "@typescript/lib-dom": "npm:@types/web"\n  }\n}\n')),(0,s.kt)("h2",{id:"requireone"},"RequireOne"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type RequireOne<T, K extends keyof T> = {\n  [X in Exclude<keyof T, K>]?: T[X];\n} &\n  {\n    [P in K]-?: T[P];\n  };\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type Conf = RequireOne<Options, 'https' | 'http' | 'websocket'>;\n")),(0,s.kt)("h2",{id:"\u5185\u7f6e"},"\u5185\u7f6e"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"4.5 Awaited")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"type Partial<T> = {\n  [P in keyof T]?: T[P];\n};\n\ntype Required<T> = {\n  [P in keyof T]-?: T[P];\n};\n\ntype Readonly<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\ntype Pick<T, K extends keyof T> = {\n  [P in K]: T[P];\n};\n\ntype Record<K extends keyof any, T> = {\n  [P in K]: T;\n};\n\ntype Exclude<T, U> = T extends U ? never : T;\n\n/**\n * Extract from T those types that are assignable to U\n */\ntype Extract<T, U> = T extends U ? T : never;\n\n/**\n * Construct a type with the properties of T except for those in type K.\n */\ntype Omit<T, K extends keyof any> = Pick<T, Exclude<keyof T, K>>;\n\n/**\n * Exclude null and undefined from T\n */\ntype NonNullable<T> = T extends null | undefined ? never : T;\n\n/**\n * Obtain the parameters of a function type in a tuple\n */\ntype Parameters<T extends (...args: any) => any> = T extends (...args: infer P) => any ? P : never;\n\n/**\n * Obtain the parameters of a constructor function type in a tuple\n */\ntype ConstructorParameters<T extends abstract new (...args: any) => any> = T extends abstract new (\n  ...args: infer P\n) => any\n  ? P\n  : never;\n\n/**\n * Obtain the return type of a function type\n */\ntype ReturnType<T extends (...args: any) => any> = T extends (...args: any) => infer R ? R : any;\n\n/**\n * Obtain the return type of a constructor function type\n */\ntype InstanceType<T extends abstract new (...args: any) => any> = T extends abstract new (...args: any) => infer R\n  ? R\n  : any;\n\n/**\n * Convert string literal type to uppercase\n */\ntype Uppercase<S extends string> = intrinsic;\n\n/**\n * Convert string literal type to lowercase\n */\ntype Lowercase<S extends string> = intrinsic;\n\n/**\n * Convert first character of string literal type to uppercase\n */\ntype Capitalize<S extends string> = intrinsic;\n\n/**\n * Convert first character of string literal type to lowercase\n */\ntype Uncapitalize<S extends string> = intrinsic;\n\n/**\n * Marker for contextual 'this' type\n */\ninterface ThisType<T> {}\n\ninterface ArrayLike<T> {\n  readonly length: number;\n  readonly [n: number]: T;\n}\n")),(0,s.kt)("h2",{id:"optional"},"Optional"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// \u90e8\u5206\u5b57\u6bb5 Partial\ntype Optional<T, K extends keyof T> = Omit<T, K> & Partial<T>;\n")),(0,s.kt)("h2",{id:"maybefunction"},"maybeFunction"),(0,s.kt)("p",null,"T \u9700\u8981\u68c0\u6d4b\u662f\u5426\u4e3a\u51fd\u6570\uff0c\u5426\u5219\u76f4\u63a5 typeof \u65e0\u6cd5\u533a\u5206"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// eslint-disable-next-line @typescript-eslint/ban-types\nexport type MaybeFunction<T, A extends any[]> = T extends Function ? (...args: A) => T : T;\n\nexport function maybeFunction<T, A extends any[]>(v: MaybeFunction<T, A>, ...args: A): T {\n  return typeof v === 'function' ? v(...args) : v;\n}\n")),(0,s.kt)("h2",{id:"keyof-\u5f3a\u5236\u4e3a-string-\u7c7b\u578b"},"keyof \u5f3a\u5236\u4e3a string \u7c7b\u578b"),(0,s.kt)("p",null,"\u9ed8\u8ba4 keyof \u4f1a\u8fd4\u56de ",(0,s.kt)("inlineCode",{parentName:"p"},"string|number|symbol")," \u7c7b\u578b"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"// \u53d6 string\ntype StringKeys = Extract<keyof AbstractModel, string>;\n// \u5f3a\u5236 string\ntype Keys = keyof AbstractModel & string;\n// \u5b9a\u4e49\u5de5\u5177\u7c7b\u578b\ntype KeyOf<T extends object> = Extract<keyof T, string>;\n")),(0,s.kt)("h2",{id:"example"},"Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},"/// 1\nconst values = ['A', 'B'] as const;\ntype ElementType<T extends ReadonlyArray<unknown>> = T extends ReadonlyArray<infer ElementType> ? ElementType : never;\n\ntype Foo = ElementType<typeof values>; // this is correctly inferred as literal \"A\" | \"B\"\n\n/// 2\n\nexport const type = <const>['room', 'room_with_gifter', 'user_send'];\n\nexport interface Activity {\n  id?: string;\n  type: typeof type[number];\n}\n\n/// 3\nconst pages = <const>[\n  {\n    label: 'homepage',\n    url: '',\n  },\n  {\n    label: 'team',\n    url: '',\n  },\n];\n\n// resulting signature = function getUrl(label: \"homepage\" | \"team\"): void\nfunction getUrl(label: typeof pages[number]['label']) {}\n\ngetUrl('homepage'); // ok\ngetUrl('team'); // ok\ngetUrl('bad'); // wrong\n\n// stub \u7c7b\u578b\n\ninterface ExampleType {\n  [key: string]: string | (() => string);\n}\n\nconst specific =\n  <T>() =>\n  <U extends T>(argument: U) =>\n    argument;\nconst testObj = specific<ExampleType>()({\n  firstName: 'Peter',\n  lastName: 'Parker',\n  gender: 'male',\n  getFullName: () => 'I am Peter Parker',\n});\nconsole.log(testObj.getFullName()); // this works\n")),(0,s.kt)("h2",{id:"\u5141\u8bb8\u5bfc\u5165\u5176\u4ed6\u6587\u4ef6"},"\u5141\u8bb8\u5bfc\u5165\u5176\u4ed6\u6587\u4ef6"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title='types.d.ts'",title:"'types.d.ts'"},"declare module '*.module.css' {\n  const classes: { readonly [key: string]: string };\n  export default classes;\n}\n\ndeclare module '*.module.sass' {\n  const classes: { readonly [key: string]: string };\n  export default classes;\n}\n\ndeclare module '*.module.scss' {\n  const classes: { readonly [key: string]: string };\n  export default classes;\n}\n\ndeclare module '*.mdx' {\n  let MDXComponent: (props) => JSX.Element;\n  export default MDXComponent;\n}\n\ndeclare module '*.yaml' {\n  const data: any;\n  export default data;\n}\n")))}d.isMDXComponent=!0}}]);