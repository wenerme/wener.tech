"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[49427],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return b}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),f=a,b=p["".concat(s,".").concat(f)]||p[f]||m[f]||o;return n?r.createElement(b,l(l({ref:t},u),{},{components:n})):r.createElement(b,l({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},79760:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return d},default:function(){return w},frontMatter:function(){return b},metadata:function(){return k},toc:function(){return N}});var r=n(49613),a=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&u(e,n,t[n]);if(i)for(var n of i(t))c.call(t,n)&&u(e,n,t[n]);return e},m=(e,t)=>o(e,l(t)),f=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&c.call(e,r)&&(n[r]=e[r]);return n};const b={tags:["Client"]},d="Client",k={unversionedId:"queue/nats/nats-client",id:"queue/nats/nats-client",title:"Client",description:"- NodeJS",source:"@site/../notes/queue/nats/nats-client.md",sourceDirName:"queue/nats",slug:"/queue/nats/client",permalink:"/notes/queue/nats/client",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/queue/nats/nats-client.md",tags:[{label:"Client",permalink:"/notes/tags/client"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1695042174,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{tags:["Client"]},sidebar:"docs",previous:{title:"nats",permalink:"/notes/queue/nats/cli"},next:{title:"NATS Conf",permalink:"/notes/queue/nats/conf"}},y={},N=[{value:"Request/Reply",id:"requestreply",level:2},{value:"NodeJS Websocket",id:"nodejs-websocket",level:2}],g={toc:N},O="wrapper";function w(e){var t=e,{components:n}=t,a=f(t,["components"]);return(0,r.kt)(O,m(p(p({},g),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",p({},{id:"client"}),"Client"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NodeJS",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"nats - ",(0,r.kt)("strong",{parentName:"li"},"\u4e0d\u652f\u6301 websocket")))),(0,r.kt)("li",{parentName:"ul"},"NodeJS/Browser - Websocket",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"nats.ws"))),(0,r.kt)("li",{parentName:"ul"},"\u5b98\u65b9 Client",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"WebSocket"),(0,r.kt)("li",{parentName:"ul"},"C, C#, Crystal, Deno, Elixir, Go, Java, Nginx, NodeJS, Ruby, Pure Ruby"),(0,r.kt)("li",{parentName:"ul"},"Python Asyncio, Python Torando, Rust"))),(0,r.kt)("li",{parentName:"ul"},"Connectors/Utils",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5b98\u65b9: Spark, Redis PubSub, Kafka Bridge, MQ Series Bridge, Replicator"))),(0,r.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://nats.io/download/"}),"Clients"))))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"// \u6700\u591a 10 \u6b21\u91cd\u8fde\nexport const DEFAULT_MAX_RECONNECT_ATTEMPTS = 10;\n// \u91cd\u8fde\u968f\u673a\u95f4\u9694\u8303\u56f4\nexport const DEFAULT_JITTER = 100;\n// jitter for tls\nexport const DEFAULT_JITTER_TLS = 1000;\n// Ping interval\nexport const DEFAULT_PING_INTERVAL = 2 * 60 * 1000; // 2 minutes\nexport const DEFAULT_MAX_PING_OUT = 2;\n\n// DISCONNECT Parameters, 2 sec wait, 10 tries\n// \u91cd\u8fde\u95f4\u9694\nexport const DEFAULT_RECONNECT_TIME_WAIT = 2 * 1000;\n\n// \u91cd\u8fde\u95f4\u9694\u8ba1\u7b97\u903b\u8f91\nconst reconnectDelayHandler = () => {\n  let extra = options.tls ? options.reconnectJitterTLS : options.reconnectJitter;\n  if (extra) {\n    extra++;\n    extra = Math.floor(Math.random() * extra);\n  }\n  return options.reconnectTimeWait + extra;\n};\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://github.com/nats-io/nats.deno/blob/main/nats-base-client/options.ts"}),"https://github.com/nats-io/nats.deno/blob/main/nats-base-client/options.ts"))),(0,r.kt)("h2",p({},{id:"requestreply"}),"Request/Reply"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Request/Reply",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"client: subscribe INBOX"),(0,r.kt)("li",{parentName:"ul"},"client: publish subject"),(0,r.kt)("li",{parentName:"ul"},"server: reply -> publish(msg.replay) -> client.INBOX"),(0,r.kt)("li",{parentName:"ul"},"client: handle reply"),(0,r.kt)("li",{parentName:"ul"},"client: unsubscribe INBOX")))),(0,r.kt)("h2",p({},{id:"nodejs-websocket"}),"NodeJS Websocket"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"function polyfillWebSocket(ws?: any): MaybePromise<boolean> {\n  const globalThis = getGlobalThis();\n  if ('WebSocket' in globalThis) {\n    return false;\n  }\n  if (ws) {\n    const { WebSocket } = ws;\n    Object.assign(globalThis, { WebSocket });\n  }\n  return import('ws').then((ws) => polyfillWebSocket(ws));\n}\n\nconst { connect } = await import('nats.ws');\nconst client = await connect({\n  servers: ['wss://nats.example.com:443'],\n});\nconsole.log(client.stats());\n")))}w.isMDXComponent=!0}}]);