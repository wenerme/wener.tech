"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[30277],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},p=Object.keys(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)n=p[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,p=e.originalType,a=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),s=c(n),d=o,f=s["".concat(a,".").concat(d)]||s[d]||m[d]||p;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var p=n.length,i=new Array(p);i[0]=s;var u={};for(var a in t)hasOwnProperty.call(t,a)&&(u[a]=t[a]);u.originalType=e,u.mdxType="string"==typeof e?e:o,i[1]=u;for(var c=2;c<p;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},94283:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return l},default:function(){return s}});var r=n(87462),o=n(63366),p=(n(67294),n(3905)),i=["components"],u={title:"tcpdump"},a=void 0,c={unversionedId:"os/linux/network/tcpdump",id:"os/linux/network/tcpdump",isDocsHomePage:!1,title:"tcpdump",description:"- \u53c2\u8003",source:"@site/notes/os/linux/network/tcpdump.md",sourceDirName:"os/linux/network",slug:"/os/linux/network/tcpdump",permalink:"/notes/os/linux/network/tcpdump",editUrl:"https://github.com/wenerme/wener/edit/master/notes/os/linux/network/tcpdump.md",tags:[],version:"current",frontMatter:{title:"tcpdump"},sidebar:"docs",previous:{title:"socat",permalink:"/notes/os/linux/network/socat"},next:{title:"Linux Device",permalink:"/notes/os/linux/dev/dev"}},l=[],m={toc:l};function s(e){var t=e.components,n=(0,o.Z)(e,i);return(0,p.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"https://www.tcpdump.org/manpages/tcpdump.1.html"},"tcpdump.1")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"https://danielmiessler.com/study/tcpdump/"},"A tcpdump Tutorial with Examples")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"http://www.mavetju.org/unix/dhcpdump-man.php"},"dhcpdump")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"http://linuxwiki.github.io/NetTools/tcpdump.html"},"http://linuxwiki.github.io/NetTools/tcpdump.html")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",{parentName:"li",href:"https://github.com/linuxwiki/SourceWiki"},"https://github.com/linuxwiki/SourceWiki"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-bash"},"# \u76d1\u542c ICMP\ntcpdump -nni eth0 icmp\n# NAT \u5305\ntcpdump -qnn\n# \u5e7f\u64ad\u5305 - DHCP, ARP\ntcpdump -n -i mynet broadcast\n# DHCP - \u5339\u914d Client MAC\ntcpdump -i br0 -vvv -s 1500 '((port 67 or port 68) and (udp[38:4] = 0x3e0ccf08))'\n# DHCP - DISCOVER, REQUEST, INFORM\ntcpdump -i br0 -vvv -s 1500 '((port 67 or port 68) and (udp[8:1] = 0x1))'\n\ntcpdump port 80 -w capture_file\ntcpdump -r capture_file\n\ntcpdump -i any host 1.1.1.1\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-shell"},"# \u534f\u8bae\n# /etc/protocols\nicmp\nip6\n\n# \u7aef\u53e3\nport 443\nportrange 21-23\n\n# \u4e3b\u673a\n# to or from\nhost 1.1.1.1\n# to or from\nnet 1.2.3.0/24\n\n# from\nsrc 1.1.1.1\n# to\ndst 1.0.0.1\n\n# \u6765\u6e90\u9650\u5b9a\nsrc port 1025\nsrc net 192.168.0.0/16\n\n# \u5305\u5927\u5c0f\nless 32\ngreater 64\n<= 128\n")))}s.isMDXComponent=!0}}]);