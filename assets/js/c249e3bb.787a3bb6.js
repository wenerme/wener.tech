"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[63088],{49613:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,d=m["".concat(l,".").concat(f)]||m[f]||u[f]||i;return r?n.createElement(d,o(o({ref:t},c),{},{components:r})):n.createElement(d,o({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},2398:function(e,t,r){r.r(t),r.d(t,{assets:function(){return N},contentTitle:function(){return k},default:function(){return w},frontMatter:function(){return d},metadata:function(){return b},toc:function(){return v}});var n=r(49613),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&c(e,r,t[r]);if(s)for(var r of s(t))p.call(t,r)&&c(e,r,t[r]);return e},u=(e,t)=>i(e,o(t)),f=(e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&s)for(var n of s(e))t.indexOf(n)<0&&p.call(e,n)&&(r[n]=e[n]);return r};const d={title:"\u5fae\u670d\u52a1"},k="microservices",b={unversionedId:"web/framework/nestjs/nestjs-microservices",id:"web/framework/nestjs/nestjs-microservices",title:"\u5fae\u670d\u52a1",description:"- \u4f20\u8f93",source:"@site/../notes/web/framework/nestjs/nestjs-microservices.md",sourceDirName:"web/framework/nestjs",slug:"/web/framework/nestjs/microservices",permalink:"/notes/web/framework/nestjs/microservices",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/web/framework/nestjs/nestjs-microservices.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1695042174,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{title:"\u5fae\u670d\u52a1"},sidebar:"docs",previous:{title:"NestJS FAQ",permalink:"/notes/web/framework/nestjs/faq"},next:{title:"NestJS Version",permalink:"/notes/web/framework/nestjs/version"}},N={},v=[{value:"Hybrid application",id:"hybrid-application",level:2}],y={toc:v},j="wrapper";function w(e){var t=e,{components:r}=t,a=f(t,["components"]);return(0,n.kt)(j,u(m(m({},y),a),{components:r,mdxType:"MDXLayout"}),(0,n.kt)("h1",m({},{id:"microservices"}),"microservices"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u4f20\u8f93",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"TCP"),(0,n.kt)("li",{parentName:"ul"},"Redis Pub/Sub",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u4e0d\u505a\u5904\u7406\u4f1a\u88ab\u591a\u4e2a \u670d\u52a1\u7aef \u5904\u7406"),(0,n.kt)("li",{parentName:"ul"},"\u7528 redis stream \u53ef\u4ee5\u907f\u514d\u91cd\u590d\u6d88\u8d39\u95ee\u9898",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/tamimaj/nestjs-redis-streams"}),"tamimaj/nestjs-redis-streams")),(0,n.kt)("li",{parentName:"ul"},"\u4f46\u4f1a\u6709 stale \u95ee\u9898\uff0c\u9700\u8981\u6ce8\u610f"))))),(0,n.kt)("li",{parentName:"ul"},"MQTT Pub/Sub - ",(0,n.kt)("inlineCode",{parentName:"li"},"{data,headers}")),(0,n.kt)("li",{parentName:"ul"},"NATS reqreply, pubsub"),(0,n.kt)("li",{parentName:"ul"},"RabbitMQ"),(0,n.kt)("li",{parentName:"ul"},"Kafka"),(0,n.kt)("li",{parentName:"ul"},"gRPC"))),(0,n.kt)("li",{parentName:"ul"},"\u6838\u5fc3\u6a21\u5757\u4e0d\u4f1a\u589e\u52a0\u989d\u5916\u7684\u4f20\u8f93\u7b56\u7565",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/nestjs/nest/issues/3960#issuecomment-771647374"}),"https://github.com/nestjs/nest/issues/3960#issuecomment-771647374")))),(0,n.kt)("li",{parentName:"ul"},"pattern",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u4f1a\u5e8f\u5217\u5316\u4e3a JSON - \u56e0\u6b64\u53ef\u4ee5\u7528 Object"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@MessagePattern({ cmd: '' })")," - \u8bf7\u6c42\u54cd\u5e94",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u652f\u6301\u8fd4\u56de Promise, Observable"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@EventPattern('')")," - \u4e8b\u4ef6"),(0,n.kt)("li",{parentName:"ul"},"ClientProxy",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ClientsModule.register()")," - \u6ce8\u518c\u540e\u4f7f\u7528"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@Client({ transport: Transport.TCP }) client: ClientProxy;")," - \u76f4\u63a5\u6ce8\u89e3\u4f7f\u7528"))),(0,n.kt)("li",{parentName:"ul"},"adopted by",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/amplication/amplication"}),"amplication/amplication")))),(0,n.kt)("li",{parentName:"ul"},"\u5b9e\u73b0\u4f9d\u8d56 rxjs"),(0,n.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://amplication.com/blog/working-with-microservices-with-nestjs"}),"https://amplication.com/blog/working-with-microservices-with-nestjs"))))),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"npm add rxjs @nestjs/microservices\n")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"import { NestFactory } from '@nestjs/core';\nimport { Transport, MicroserviceOptions } from '@nestjs/microservices';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.createMicroservice<MicroserviceOptions>(AppModule, {\n    transport: Transport.TCP,\n  });\n  await app.listen();\n}\nbootstrap();\n")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"import { Controller } from '@nestjs/common';\nimport { MessagePattern } from '@nestjs/microservices';\n\n@Controller()\nexport class MathController {\n  @MessagePattern({ cmd: 'sum' })\n  accumulate(data: number[]): number {\n    return (data || []).reduce((a, b) => a + b);\n  }\n}\n")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"import { Injectable, Scope, Inject } from '@nestjs/common';\nimport { CONTEXT, RequestContext } from '@nestjs/microservices';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class CatsService {\n  constructor(@Inject(CONTEXT) private ctx: RequestContext) {}\n}\n\nexport interface RequestContext<T = any> {\n  pattern: string | Record<string, any>;\n  data: T;\n}\n")),(0,n.kt)("h2",m({},{id:"hybrid-application"}),"Hybrid application"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"HTTP + Microservice")),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"const app = await NestFactory.create(AppModule);\nconst microservice = app.connectMicroservice<MicroserviceOptions>({\n  transport: Transport.TCP,\n});\n\nawait app.startAllMicroservices();\nawait app.listen(3001);\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://docs.nestjs.com/faq/hybrid-application"}),"https://docs.nestjs.com/faq/hybrid-application"))))}w.isMDXComponent=!0}}]);