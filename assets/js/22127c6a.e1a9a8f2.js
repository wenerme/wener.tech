"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[34687],{49613:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),m=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=m(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=m(n),b=o,f=p["".concat(c,".").concat(b)]||p[b]||u[b]||a;return n?r.createElement(f,s(s({ref:t},l),{},{components:n})):r.createElement(f,s({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var m=2;m<a;m++)s[m]=n[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},46104:function(e,t,n){n.r(t),n.d(t,{assets:function(){return O},contentTitle:function(){return d},default:function(){return x},frontMatter:function(){return f},metadata:function(){return y},toc:function(){return v}});var r=n(49613),o=Object.defineProperty,a=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,l=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&l(e,n,t[n]);if(i)for(var n of i(t))m.call(t,n)&&l(e,n,t[n]);return e},u=(e,t)=>a(e,s(t)),b=(e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&m.call(e,r)&&(n[r]=e[r]);return n};const f={title:"immer"},d="immer",y={unversionedId:"web/react/immer",id:"web/react/immer",title:"immer",description:"- immerjs/immer",source:"@site/../notes/web/react/immer.md",sourceDirName:"web/react",slug:"/web/react/immer",permalink:"/notes/web/react/immer",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/web/react/immer.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1702882608,formattedLastUpdatedAt:"Dec 18, 2023",frontMatter:{title:"immer"},sidebar:"docs",previous:{title:"history",permalink:"/notes/web/react/history"},next:{title:"Jotai",permalink:"/notes/web/react/jotai"}},O={},v=[],j={toc:v},w="wrapper";function x(e){var t=e,{components:n}=t,o=b(t,["components"]);return(0,r.kt)(w,u(p(p({},j),o),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",p({},{id:"immer"}),"immer"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://github.com/immerjs/immer"}),"immerjs/immer")),(0,r.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://immerjs.github.io/immer/performance/"}),"https://immerjs.github.io/immer/performance/"))))),(0,r.kt)("admonition",p({},{type:"tip"}),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4f1a autofreeze - \u635f\u5931\u4e00\u70b9\u6027\u80fd\uff0c\u8fd4\u56de\u4e0d\u53ef\u53d8\u5bf9\u8c61"),(0,r.kt)("li",{parentName:"ul"},"\u5927 list \u53ef\u4ee5\u5148 freeze \u5728\u8fdb\u884c produce"))),(0,r.kt)("admonition",p({},{type:"caution"}),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u80fd\u6709\u5faa\u73af\u5f15\u7528"))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-ts"}),"import assert from 'node:assert/strict';\nimport test from 'node:test';\nimport { produce } from 'immer';\nimport { createStore } from 'zustand';\nimport { immer } from 'zustand/middleware/immer';\n\ntest('immer', () => {\n  const o: Record<string, any> = {\n    a: { v: 0 },\n    b: { v: 0 },\n    c: { v: 0 },\n  };\n\n  // by produce\n  {\n    const o2 = produce(o, (s) => {\n      s.b.v = 1;\n    });\n\n    assert.equal(o2.b.v, 1);\n    // \u6ca1\u53d8\n    assert(o.a === o2.a);\n    assert(o.b !== o2.b);\n  }\n  {\n    const store = createStore(\n      immer(() => {\n        return o;\n      }),\n    );\n    store.setState((s) => {\n      s.a.v = 0;\n      s.b.v = 1;\n    });\n    let next = store.getState();\n    // same\n    assert(o.a === next.a);\n    assert(o.b !== next.b);\n    assert(!Object.isFrozen(next)); // not frozen\n    // all frozen\n    assert(Object.isFrozen(next.a));\n    assert(Object.isFrozen(next.b));\n    assert(Object.isFrozen(next.c));\n\n    // set by merge instead of produce\n    store.setState({ b: o.b });\n    next = store.getState();\n    assert(o.b === next.b);\n\n    assert(!Object.isFrozen(next)); // not frozen\n    assert(Object.isFrozen(next.a)); // frozen\n    assert(!Object.isFrozen(next.b)); // not frozen\n  }\n\n  {\n    const state = {\n      a: { v: 1 },\n      b: { v: 1 },\n      c: { v: 1 },\n      d: { v: 1 },\n    };\n    const next = produce(state, (s) => {\n      s.a.v++;\n      s.b.v++;\n      s.b.v--;\n      s.c.v = 1;\n    });\n\n    assert(state !== next);\n    assert(state.a !== next.a); // \u53d8\u4e86\n    assert(state.b !== next.b);\n    assert.deepEqual(state.b, next.b); // \u53d8\u4e86\uff0c\u4f46\u76f8\u540c\n    assert(state.c === next.c); // \u6ca1\u53d8\n    assert(state.d === next.d); // \u6ca1\u53d8\n\n    assert(Object.isFrozen(next));\n    assert(Object.isFrozen(next.a));\n    assert(Object.isFrozen(next.b));\n    assert(Object.isFrozen(next.c)); // \u6ca1\u53d8 \u4f9d\u7136 frozen\n    assert(Object.isFrozen(next.d)); // frozen\n  }\n});\n")))}x.isMDXComponent=!0}}]);