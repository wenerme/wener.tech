"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[23303],{49613:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return f}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},i=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||s;return n?r.createElement(f,o(o({ref:t},i),{},{components:n})):r.createElement(f,o({ref:t},i))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<s;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5374:function(e,t,n){n.r(t),n.d(t,{assets:function(){return v},contentTitle:function(){return h},default:function(){return w},frontMatter:function(){return f},metadata:function(){return k},toc:function(){return g}});var r=n(49613),a=Object.defineProperty,s=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,i=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))c.call(t,n)&&i(e,n,t[n]);if(l)for(var n of l(t))u.call(t,n)&&i(e,n,t[n]);return e},d=(e,t)=>s(e,o(t)),m=(e,t)=>{var n={};for(var r in e)c.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&u.call(e,r)&&(n[r]=e[r]);return n};const f={title:"nats-server"},h="nats-server",k={unversionedId:"queue/nats/nats-server",id:"queue/nats/nats-server",title:"nats-server",description:"| port | for                          |",source:"@site/../notes/queue/nats/nats-server.md",sourceDirName:"queue/nats",slug:"/queue/nats/server",permalink:"/notes/queue/nats/server",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/queue/nats/nats-server.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1695042174,formattedLastUpdatedAt:"Sep 18, 2023",frontMatter:{title:"nats-server"},sidebar:"docs",previous:{title:"NATS Protocol",permalink:"/notes/queue/nats/protocol"},next:{title:"Nats Version",permalink:"/notes/queue/nats/version"}},v={},g=[{value:"jwt seutp",id:"jwt-seutp",level:2},{value:"Cluster",id:"cluster",level:2},{value:"cluster",id:"cluster-1",level:2},{value:"jetstream cluster",id:"jetstream-cluster",level:2},{value:"gateway",id:"gateway",level:2},{value:"leafnode",id:"leafnode",level:2},{value:"HELM",id:"helm",level:2},{value:"Account fetch failed: fetching jwt timed out",id:"account-fetch-failed-fetching-jwt-timed-out",level:2},{value:"system_account in config and operator JWT must be identical",id:"system_account-in-config-and-operator-jwt-must-be-identical",level:2},{value:"no nkey seed found",id:"no-nkey-seed-found",level:2},{value:"using nats based account resolver - the system account needs to be specified in configuration or the operator jwt",id:"using-nats-based-account-resolver---the-system-account-needs-to-be-specified-in-configuration-or-the-operator-jwt",level:2},{value:"JetStream not enabled for account (10039)",id:"jetstream-not-enabled-for-account-10039",level:2}],y={toc:g},b="wrapper";function w(e){var t=e,{components:n}=t,a=m(t,["components"]);return(0,r.kt)(b,d(p(p({},y),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",p({},{id:"nats-server"}),"nats-server"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"brew install nats-server\n\n# http://127.0.0.1:8222/\nnats-server -js -sd $PWD/jetstream-store -m 8222\n\nnats-server --signal reload\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",p({parentName:"tr"},{align:null}),"port"),(0,r.kt)("th",p({parentName:"tr"},{align:null}),"for"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",p({parentName:"tr"},{align:null}),"4222"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"client")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",p({parentName:"tr"},{align:null}),"8222"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"HTTP management")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",p({parentName:"tr"},{align:null}),"6222"),(0,r.kt)("td",p({parentName:"tr"},{align:null}),"routing port for clustering.")))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),"port: 4222\nmonitor_port: 8222\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"/etc/nats/nats-server.conf"),(0,r.kt)("li",{parentName:"ul"},"$var",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5728\u914d\u7f6e\u91cc\u5b9a\u4e49"),(0,r.kt)("li",{parentName:"ul"},"\u53ef\u4f7f\u7528 \u73af\u5883\u53d8\u91cf")))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-hcl"}),'# \u8fde\u63a5\u914d\u7f6e\nhost: 0.0.0.0\nport: 4222\nlisten: "$host:$port"\n# client_advertise: "$host:$port"\n\n# HTTP monitoring port\nmonitor_port: 8222\n\ntls: {}\ngateway: {}\nleafnode: {}\nmqtt: {}\nwebsocket: {}\n\n# \u8d85\u65f6\u914d\u7f6e\nping_interval: "2m"\nping_max: 2\nwrite_deadline: "10s"\n\n# \u9650\u5236\nmax_connections: 64K\nmax_control_line: 4KB\nmax_payload: 1MB\nmax_pending: 64MB\nmax_subscriptions: 0\n\n# JetStream\njetstream: {\n  store_dir: "/tmp/nats/jetstream"\n  # \u5185\u5b58\u7684 75%\n  # max_memory_store:\n  max_file_store: 1TB\n  # chachapoly, aes\n  # cipher:\n  # 32+\n  # key:\n  max_outstanding_catchup: 32MB\n}\n\nauthorization {\n  # timeout: 3\n\n  # \u540c --auth\n  # nats sub -s nats://s3cr3t@localhost:4222 ">"\n  # \u652f\u6301 bcrypt: nats server passwd\n  token: "s3cr3t"\n\n  # \u5bc6\u7801\u652f\u6301 Bcrypted\n  user: ""\n  password: ""\n  users: [\n        {user: "", password: ""b""}\n  ]\n}\n\naccounts {\n\n}\nno_auth_user:\n\n# \u96c6\u7fa4\u914d\u7f6e\ncluster {\n  # It is recommended to set a cluster name\n  name: "my_cluster"\n\n  # Route connections to be received on any interface on port 6222\n  port: 6222\n\n  # Routes are protected, so need to use them with --routes flag\n  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222\n  authorization {\n    user: ruser\n    password: T0pS3cr3t\n    timeout: 2\n  }\n\n  # Routes are actively solicited and connected to from this server.\n  # This Docker image has none by default, but you can pass a\n  # flag to the nats-server docker image to create one to an existing server.\n  routes = []\n}\n')),(0,r.kt)("h2",p({},{id:"jwt-seutp"}),"jwt seutp"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"alg ed25519-nkey")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"docker run -w /nsc --rm -it -v $PWD/nsc:/nsc natsio/nats-box:latest\n\n# -n operator \u540d\u5b57\n# /nsc/nats/nsc/stores\nnsc init -n nats\n\nnsc generate config --nats-resolver > jwt.conf\n")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-hcl"}),'host: 0.0.0.0\nport: 4222\nmonitor_port: 8222\n\njetstream: {\n  store_dir: "./jetstream-store"\n}\n\nwebsocket {\n  port: 9222\n  no_tls: true\n}\n\ninclude ./nsc/jwt.conf\n')),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"# \u6dfb\u52a0\u5b9e\u9645\u4f7f\u7528\u7684 account \u548c user\nnsc add account wener --js-disk-storage 1g\nnsc add user apis\n\n# \u68c0\u67e5\u4fe1\u606f\nnsc list keys\nnsc describe operator\n# nsc edit operator --service-url nats://127.0.0.1:4222\n\n# \u63a8\u9001\u5230 nats\nnsc push -a incs -u nats://127.0.0.1\n\n# \u5ba2\u6237\u7aef\u8fde\u63a5\nnats context add nats --server 127.0.0.1:4222 --select --creds ./nkeys/creds/nats/wener/apis.creds\nnats account info\n")),(0,r.kt)("h2",p({},{id:"cluster"}),"Cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-yaml"}),"version: '3.5'\nservices:\n  nats:\n    image: nats\n    ports:\n      - '8222:8222'\n    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --http_port 8222 '\n    networks: ['nats']\n  nats-1:\n    image: nats\n    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222'\n    networks: ['nats']\n    depends_on: ['nats']\n  nats-2:\n    image: nats\n    command: '--cluster_name NATS --cluster nats://0.0.0.0:6222 --routes=nats://ruser:T0pS3cr3t@nats:6222'\n    networks: ['nats']\n    depends_on: ['nats']\n\nnetworks:\n  nats:\n    name: nats\n")),(0,r.kt)("h2",p({},{id:"cluster-1"}),"cluster"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),"--routes [rurl-1, rurl-2]     Routes to solicit and connect\n--cluster nats://host:port    Cluster URL for solicited routes\n")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),"listen: 127.0.0.1:4222\nhttp: 8222\n\ncluster {\n  name: example\n\n  # host/port for inbound route connections from other server\n  listen: localhost:4244\n\n  # Authorization for route connections\n  # Other server can connect if they supply the credentials listed here\n  # This server will connect to discovered routes using this user\n  authorization {\n    user: route_user\n    password: pwd\n    timeout: 0.5\n  }\n\n  # This server establishes routes with these server.\n  # This server solicits new routes and Routes are actively solicited and connected to from this server.\n  # Other servers can connect to us if they supply the correct credentials\n  # in their routes definitions from above.\n  routes = [\n    nats://route_user:pwd@127.0.0.1:4245\n    nats://route_user:pwd@127.0.0.1:4246\n  ]\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u53ea\u4f1a forward client \u6d88\u606f\u7ed9\u76f8\u90bb\u8282\u70b9"),(0,r.kt)("li",{parentName:"ul"},"gossiping")),(0,r.kt)("h2",p({},{id:"jetstream-cluster"}),"jetstream cluster"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"RAFT")),(0,r.kt)("h2",p({},{id:"gateway"}),"gateway"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"cluster <-> cluster"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://docs.nats.io/running-a-nats-service/configuration/gateways"}),"https://docs.nats.io/running-a-nats-service/configuration/gateways"))),(0,r.kt)("h2",p({},{id:"leafnode"}),"leafnode"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8fde\u63a5 super cluster"),(0,r.kt)("li",{parentName:"ul"},"\u5ef6\u4f38 nats-server"),(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u672c\u5730 authz+authn"),(0,r.kt)("li",{parentName:"ul"},"\u672c\u5730 low RTT"),(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u9700\u8981\u80fd\u8bbf\u95ee\u81ea\u5df1"),(0,r.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u540c\u65f6\u8fde\u591a\u4e2a\u96c6\u7fa4")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),'Nats-Request-Info: {"acc":"LEAF_ACCOUNT","rtt":11491934}\n')),(0,r.kt)("h2",p({},{id:"helm"}),"HELM"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",p({parentName:"li"},{href:"https://github.com/nats-io/k8s/tree/main/helm/charts/nats"}),"https://github.com/nats-io/k8s/tree/main/helm/charts/nats"))),(0,r.kt)("h1",p({},{id:"faq"}),"FAQ"),(0,r.kt)("h2",p({},{id:"account-fetch-failed-fetching-jwt-timed-out"}),"Account fetch failed: fetching jwt timed out"),(0,r.kt)("p",null,"\u914d\u7f6e resolver.timeout"),(0,r.kt)("h2",p({},{id:"system_account-in-config-and-operator-jwt-must-be-identical"}),"system_account in config and operator JWT must be identical"),(0,r.kt)("p",null,"\u751f\u6210\u914d\u7f6e\u4e0d\u8981\u6307\u5b9a --sys-account,\u9ed8\u8ba4\u4e3a SYS"),(0,r.kt)("h2",p({},{id:"no-nkey-seed-found"}),"no nkey seed found"),(0,r.kt)("h2",p({},{id:"using-nats-based-account-resolver---the-system-account-needs-to-be-specified-in-configuration-or-the-operator-jwt"}),"using nats based account resolver - the system account needs to be specified in configuration or the operator jwt"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"nsc add account -n SYS\nnsc edit operator --system-account SYS\n")),(0,r.kt)("h2",p({},{id:"jetstream-not-enabled-for-account-10039"}),"JetStream not enabled for account (10039)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5fc5\u987b\u8981\u914d\u7f6e js-disk-storage")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"nsc edit account server --js-disk-storage 1g\nnsc describe account server\n")))}w.isMDXComponent=!0}}]);