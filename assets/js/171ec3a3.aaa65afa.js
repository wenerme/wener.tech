/*! For license information please see 171ec3a3.aaa65afa.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[62801],{64914:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>o});var s=r(11527),t=r(47214);const i={title:"coturn"},l="coturn",c={id:"service/network/coturn",title:"coturn",description:"- coturn/coturn",source:"@site/../notes/service/network/coturn.md",sourceDirName:"service/network",slug:"/service/network/coturn",permalink:"/notes/service/network/coturn",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/network/coturn.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1625926581,formattedLastUpdatedAt:"Jul 10, 2021",frontMatter:{title:"coturn"},sidebar:"docs",previous:{title:"Avahi",permalink:"/notes/service/network/avahi"},next:{title:"curl",permalink:"/notes/service/network/curl"}},d={},o=[{value:"\u914d\u7f6e\u793a\u4f8b",id:"\u914d\u7f6e\u793a\u4f8b",level:2},{value:"turn",id:"turn",level:3},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"TURN REST API",id:"turn-rest-api",level:2},{value:"server stun returned an error with code=701",id:"server-stun-returned-an-error-with-code701",level:2},{value:"self-signed certificates for Turn Server",id:"self-signed-certificates-for-turn-server",level:2},{value:"incoming packet CREATE_PERMISSION processed, error 443: Peer Address Family Mismatch (4)",id:"incoming-packet-create_permission-processed-error-443-peer-address-family-mismatch-4",level:2}];function a(n){const e={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"coturn",children:"coturn"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://github.com/coturn/coturn",children:"coturn/coturn"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"BSD-3, C, RFC 3489/5389/5766/5780/6062/6156 STUN/TURN Server"}),"\n",(0,s.jsx)(e.li,{children:"\u5b9e\u73b0\u4e86\u975e\u5e38\u591a\u7684\u89c4\u8303 - \u6bd4 pion/turn \u5b9e\u73b0\u66f4\u591a"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u534f\u8bae UDP, TCP, TLS, DTLS, SCTP"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u4e2d\u7ee7\u534f\u8bae UDP, TCP"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u7528\u6237\u6570\u636e\u5e93 SQLite, MySQL, PostgreSQL, Redis, MongoDB"}),"\n",(0,s.jsxs)(e.li,{children:["prometheus metrics :9641\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u6784\u5efa\u4f9d\u8d56 ",(0,s.jsx)(e.a,{href:"https://github.com/digitalocean/prometheus-client-c",children:"digitalocean/prometheus-client-c"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u591a\u5e73\u53f0- Linux, BSD, macOS, Windows/cygwin"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u53c2\u8003\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://www.webrtc-experiment.com/docs/TURN-server-installation-guide.html",children:"TURN server installation Guide"})}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/",children:"Trickle ICE"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u6d4b\u8bd5\u5de5\u5177"}),"\n",(0,s.jsx)(e.li,{children:"\u6ce8\u610f\u9700\u8981\u5199\u7aef\u53e3 \u4f8b\u5982 3478"}),"\n",(0,s.jsx)(e.li,{children:"turn \u9700\u8981\u6388\u6743\u4fe1\u606f"}),"\n",(0,s.jsxs)(e.li,{children:["turn \u6dfb\u52a0 ",(0,s.jsx)(e.code,{children:"?transport=tcp"})," \u4f7f\u7528 TCP \u534f\u8bae"]}),"\n",(0,s.jsx)(e.li,{children:"turn \u4fee\u6539\u7aef\u53e3\u540e udp \u4f3c\u4e4e\u4e0d\u901a"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["bigbluebutton ",(0,s.jsx)(e.a,{href:"https://docs.bigbluebutton.org/admin/setup-turn-server.html",children:"Configure TURN"})]}),"\n",(0,s.jsxs)(e.li,{children:["nextcloud-talk ",(0,s.jsx)(e.a,{href:"https://nextcloud-talk.readthedocs.io/en/turn_doc/TURN/",children:"Configuring coTURN"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"SQLite DB \u4f4d\u7f6e /var/lib/turn/turndb, /usr/local/var/db/turndb"}),"\n"]}),"\n",(0,s.jsx)(e.admonition,{type:"caution",children:(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["chrome turn \u4e0d\u652f\u6301\u4e09\u65b9\u6388\u6743 - \u4e0d\u652f\u6301 oauth\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://bugs.chromium.org/p/webrtc/issues/detail?id=4907",children:"chromium/webrtc#4907"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/coturn/coturn/issues/448",children:"coturn/coturn#448"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["webrtc \u672c\u8eab\u6ca1\u6709 realm \u6982\u5ff5 - \u662f\u901a\u8fc7\u6362\u53d6 token \u540e\u5305\u542b\u4e86 realm\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["realm \u65e0\u610f\u4e49 ",(0,s.jsx)(e.a,{href:"https://mailarchive.ietf.org/arch/msg/tram/rKb19tMU71Wn4BootKOOtIi0z54/",children:"stun-origin status is it dead?"})]}),"\n",(0,s.jsx)(e.li,{children:"TLS SNI \u53ef\u7528\u4e8e\u865a\u62df\u4e3b\u673a"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u63a8\u8350\u4f7f\u7528 TURN REST API \u65b9\u5f0f\u6388\u6743"}),"\n"]})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"port"}),(0,s.jsx)(e.th,{children:"conf"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"3478"}),(0,s.jsx)(e.td,{children:"listening-port"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"3479"}),(0,s.jsx)(e.td,{children:"alt-listening-port"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"5934"}),(0,s.jsx)(e.td,{children:"tls-listening-port"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"5935"}),(0,s.jsx)(e.td,{children:"alt-tls-listening-port"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"49152"}),(0,s.jsx)(e.td,{children:"min-port"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"65535"}),(0,s.jsx)(e.td,{children:"max-port"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"5766"}),(0,s.jsx)(e.td,{children:"cli-port"})]})]})]}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"alt \u7aef\u53e3\u662f\u6807\u51c6\u7aef\u53e3+1"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"protocol"}),(0,s.jsx)(e.th,{children:"port"}),(0,s.jsx)(e.th,{children:"desc"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"stun"}),(0,s.jsx)(e.td,{children:"3478/udp"}),(0,s.jsx)(e.td,{children:"STUN"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"stun"}),(0,s.jsx)(e.td,{children:"3478/tcp"}),(0,s.jsx)(e.td,{children:"STUN/TLS - de-multiplex"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turn"}),(0,s.jsx)(e.td,{children:"3478/tcp"}),(0,s.jsx)(e.td,{children:"TURN over TCP"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turn"}),(0,s.jsx)(e.td,{children:"3478/udp"}),(0,s.jsx)(e.td,{children:"TURN over UDP"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"stun-behavior"}),(0,s.jsx)(e.td,{children:"3478/tcp"}),(0,s.jsx)(e.td,{children:"STUN Behavior Discovery over TCP"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"stun-behavior"}),(0,s.jsx)(e.td,{children:"3478/udp"}),(0,s.jsx)(e.td,{children:"STUN Behavior Discovery over UDP"})]})]})]}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"PeerConnection \u53c2\u6570"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "iceServers": [\n    { "urls": ["stun:stun.l.google.com:19302"] },\n    { "urls": ["turn:192.168.1.2:3478"], "username": "test", "credential": "test" }\n  ],\n  "iceTransportPolicy": "all",\n  "iceCandidatePoolSize": "0"\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# macOS\nbrew install coturn\n# AlpineLinux\napk add coturn\n\nturnserver\nturnutils_stunclient 127.0.0.1\n\n# \u5982\u679c\u6709\u5916\u7f51 IP\nturnserver -X $(curl icanhazip.com) -a -f -r example\n\n# \u6d4b\u8bd5\u670d\u52a1\nsudo turnadmin -a -r example -u test -p test\nsudo turnadmin -A -u admin -p admin\nsudo turnserver -L 0.0.0.0 -a -f -r example -v --web-admin --web-admin-ip 0.0.0.0 --cli-password test\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"cli"}),(0,s.jsx)(e.th,{children:"desc"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnadmin -> turnserver"}),(0,s.jsx)(e.td,{children:"TURN relay administration tool - \u7ba1\u7406 Server \u8d26\u6237"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnserver"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnutils_natdiscovery"}),(0,s.jsx)(e.td,{children:"RFC5780 nat \u53d1\u73b0"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnutils_oauth"}),(0,s.jsx)(e.td,{children:"\u751f\u6210\uff0c\u6821\u9a8c access_token"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnutils_peer"}),(0,s.jsx)(e.td,{children:"UDP echo \u540e\u7aef\u670d\u52a1, \u7528\u4e8e\u914d\u5408 turnutils_uclient \u6d4b\u8bd5"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnutils_rfc5769check"}),(0,s.jsx)(e.td,{children:"\u68c0\u6d4b STUN/TURN \u5b9e\u73b0\u51c6\u786e"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnutils_stunclient"}),(0,s.jsx)(e.td,{children:"STUN RFC 5389 UDP \u5ba2\u6237\u7aef"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"turnutils_uclient"}),(0,s.jsx)(e.td,{children:"\u6d4b\u8bd5\u5e94\u7528"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"/etc/init.d/turnserver"}),(0,s.jsx)(e.td,{children:"OpenRC init"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"\u914d\u7f6e\u793a\u4f8b",children:"\u914d\u7f6e\u793a\u4f8b"}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"/etc/turnserver.conf"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-conf",children:"# you can listen ports 3478 and 5349 instead of 80/443\nlistening-port=80\ntls-listening-port=443\n\nlistening-ip=your-ip-address\n\nrelay-ip=your-ip-address\nexternal-ip=your-ip-address\n\nrealm=yourdomain.com\nserver-name=yourdomain.com\n\nlt-cred-mech\nuserdb=/etc/turnuserdb.conf\n\ncert=/etc/ssl/certificate.pem\npkey=/etc/ssl/private.key\n\nno-stdout-log\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"/etc/turnuserdb.conf"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-conf",children:"# pass\nyourName:yourPassword\n\n# db\nuserdb=/var/lib/turn/turndb\n\n# in this case, please add following:\n# lt-cred-mech             # remove or comment this one\noauth                      # add this\nuser=youruser:yourpassword # add this\n\n# source: askubuntu.com/a/819264\n"})}),"\n",(0,s.jsx)(e.h3,{id:"turn",children:"turn"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ini",children:'# \u5efa\u8bae\u4fee\u6539\n#external-ip=\n#listening-ip=0.0.0.0\n#listening-port=\n#tls-listening-port=\n# \u770b\u60c5\u51b5\nweb-admin\nweb-admin-ip=127.0.0.1\n\nrealm=example.com\n# openssl rand -hex 16\nstatic-auth-secret = <secret_value>\n\nfingerprint\nlt-cred-mech\nuse-auth-secret\n\n# \u9ed8\u8ba4 - \u4f7f\u7528 selfsign \u6216 acme\n# cert=turn_server_cert.pem\n# pkey=turn_server_pkey.pem\n# From https://ssl-config.mozilla.org/ Intermediate, openssl 1.1.0g, 2020-01\ncipher-list="ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"\n# openssl dhparam -dsaparam  -out /etc/coturn/dhp.pem 2048\ndh-file=/etc/coturn/dhp.pem\n\nkeep-address-family\nno-cli\nno-tlsv1\nno-tlsv1_1\nno-software-attribute\n\n# Block connections to IP ranges which shouldn\'t be reachable\n# no-loopback-peers\nno-multicast-peers\n\n# IPv4 Private-Use\ndenied-peer-ip=10.0.0.0-10.255.255.255\ndenied-peer-ip=172.16.0.0-172.31.255.255\ndenied-peer-ip=192.168.0.0-192.168.255.255\n# Other IPv4 Special-Purpose addresses\ndenied-peer-ip=100.64.0.0-100.127.255.255\ndenied-peer-ip=169.254.0.0-169.254.255.255\ndenied-peer-ip=192.0.0.0-192.0.0.255\ndenied-peer-ip=192.0.2.0-192.0.2.255\ndenied-peer-ip=198.18.0.0-198.19.255.255\ndenied-peer-ip=198.51.100.0-198.51.100.255\ndenied-peer-ip=203.0.113.0-203.0.113.255\n# IPv6 Unique-Local\ndenied-peer-ip=fc00::-fdff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n# IPv6 Link-Local Unicast\ndenied-peer-ip=fe80::-febf:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n# Other IPv6 Special-Purpose assignments\ndenied-peer-ip=::ffff:0:0-::ffff:ffff:ffff\ndenied-peer-ip=64:ff9b::-64:ff9b::ffff:ffff\ndenied-peer-ip=64:ff9b:1::-64:ff9b:1:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2001::-2001:1ff:ffff:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2001:db8::-2001:db8:ffff:ffff:ffff:ffff:ffff:ffff\ndenied-peer-ip=2002::-2002:ffff:ffff:ffff:ffff:ffff:ffff:ffff\n'})}),"\n",(0,s.jsx)(e.h2,{id:"\u914d\u7f6e",children:"\u914d\u7f6e"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u914d\u7f6e\u4e5f\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u53c2\u6570\u4f20\u9012\uff0c\u90e8\u5206\u53c2\u6570\u6709\u77ed\u53c2\u6a21\u5f0f"}),"\n",(0,s.jsx)(e.li,{children:"\u63a8\u8350 TCP SSLv3, TLS 1.0,1.1,1.2\u3001UDP DTLSv1"}),"\n",(0,s.jsx)(e.li,{children:"-c \u914d\u7f6e\u6587\u4ef6 - \u9ed8\u8ba4 turnserver.conf"}),"\n",(0,s.jsx)(e.li,{children:"-n \u4e0d\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6"}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://github.com/coturn/coturn/blob/master/examples/etc/turnserver.conf",children:"examples/etc/turnserver.conf"})}),"\n",(0,s.jsxs)(e.li,{children:["use-auth-secret \u4e0e lt-cred-mech \u51b2\u7a81\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u63a8\u8350 use-auth-secret\uff0c\u4f46\u8981\u590d\u6742\u4e00\u70b9"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"AlpineLinux turndb /var/lib/coturn/turndb"}),"\n",(0,s.jsx)(e.li,{children:"prometheus \u9700\u8981\u542f\u7528\u4e86\u6a21\u5757\u624d\u80fd\u4f7f\u7528"}),"\n",(0,s.jsx)(e.li,{children:"4.5.1 no-loopback-peers \u66ff\u6362\u4e3a allow-loopback-peers"}),"\n",(0,s.jsx)(e.li,{children:"4.5.3 keep-address-family \u66ff\u6362\u4e3a allocation-default-address-family"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-conf",children:'# -d \u76d1\u542c\u8bbe\u5907 - \u4e0d\u5efa\u8bae\u4f7f\u7528 - linux \u7684 interface\n# listening-device=\n# -p \u76d1\u542c\u7aef\u53e3\n# \u4e5f\u80fd\u63a5\u6536 TLS & DTLS \u4f1a\u8bdd\nlistening-port=3478\n# TLS & DTLS\n# \u4e5f\u80fd\u63a5\u6536 "plain" TCP & UDP \u4f1a\u8bdd - \u4f1a\u81ea\u52a8\u8bc6\u522b\ntls-listening-port=5349\n\n# \u7aef\u53e3\u7684\u989d\u5916\u76d1\u542c\u7aef\u53e3 - STUN CHANGE_REQUEST - RFC 5780\n# 0=listening-port+1\nalt-listening-port=0\nalt-tls-listening-port=0\n\n# tcp proxy \u534f\u8bae - https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\n# \u7528\u4e8e\u652f\u6301\u8d1f\u8f7d\u5747\u8861\n# tcp-proxy-port=\n\n# -L \u76d1\u542c\u5730\u5740\uff0c\u652f\u6301\u591a\u4e2a\n# \u9ed8\u8ba4\u76d1\u542c \u6240\u6709 IPv4 \u548c IPv6\n# listening-ip=0.0.0.0\n\n# \u8f85\u52a9\u670d\u52a1\u5730\u5740\n# \u8f85\u52a9\u670d\u52a1\u4e0d\u652f\u6301 alternative ports, \u4e0d\u652f\u6301 CHANGE REQUEST\n# aux-server = <ip:port>\n\n# \u4ec5\u7528\u4e8e\u65e7\u7684 Linux - \u81ea\u52a8\u4e0e auxiliary \u670d\u52a1\u5747\u8861 UDP \u6d41\u91cf\nudp-self-balance\n\n# -i \u4e2d\u7ee7\u8bbe\u5907 - \u4e0d\u63a8\u8350\n# relay-device = <device-name>\n# -E \u4e2d\u7ee7\u5730\u5740\n# relay-ip = <ip>\n\n# -X \u5916\u90e8\u5730\u5740\n# TURN Server \u5171\u79c1\u5730\u5740\u6620\u5c04\n# \u5982\u679c\u53ea\u6307\u5b9a\u4e86 public \u5730\u5740\uff0c\u5219\u6240\u6709 relay \u90fd\u4f1a\u4f7f\u7528\u8be5\u5730\u5740 - one single relay, no RFC5780 functionality is required\n# \u5730\u5740\u4f1a\u8fd4\u56de\u4e3a XOR-RELAYED-ADDRESS \u5b57\u6bb5\n# external-ip = <public-ip[/private-ip]>\n\n# \u5141\u8bb8\u672c\u5730\u5730\u5740 - 127.x.x.x,::1\nallow-loopback-peers\n# \u4e0d\u5141\u8bb8\u5e7f\u64ad\u5730\u5740 - 224.0.0.0, FFXX:*\nno-multicast-peers\n# -m \u4e2d\u7ee7\u7ebf\u7a0b\u6570\u91cf - 0 \u4e3a\u5355\u7ebf\u7a0b\u6a21\u5f0f, \u9ed8\u8ba4\u4f1a\u4f7f\u7528 cpu \u6570\n# relay-threads = <number>\n\n# \u4e2d\u7ee7 UDP \u7aef\u53e3\u8303\u56f4\nmin-port=49152\nmax-port=65535\n\n# Production mode - \u9690\u85cf\u670d\u52a1\u7aef\u7248\u672c\n# \u4e4b\u524d\u662f prod\nno-software-attribute\n# -f \u5728 TURN \u6d88\u606f\u4e2d\u6dfb\u52a0\u6307\u7eb9\nfingerprint\n# -a long-term credential mechanism\nlt-cred-mech\n# \u65e0\u8ba4\u8bc1 - \u5141\u8bb8\u533f\u540d\u8bbf\u95ee\nno-auth\n# \u7528\u6237\u8d26\u53f7\n# user = <user:pwd>\n# \u9ed8\u8ba4\u57df\n# realm = <realm>\n# \u8981\u6c42\u8bf7\u6c42\u7684 ORIGIN \u76f8\u540c\ncheck-origin-consistency\n\n# -q \u5355\u7528\u6237\u914d\u989d - \u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u591a\u5c11\u5e76\u53d1\n# user-quota = <number>\n# -Q \u603b\u914d\u989d - \u5168\u5c40\u5e76\u53d1\u9650\u5236\n# total-quota = <number>\n# TURN \u9650\u6d41 - sessoion bytes-per-second\n# max-bps = <number>\n# \u670d\u52a1\u5668\u6d41\u91cf - bytes-per-second\n# bps-capacity = <number>\n\n# -b,--userdb SQLite DB\n# /usr/local/var/db/turndb, /var/lib/turn/turndb.\n# db=/var/db/turndb\n# userdb=/var/db/turndb\n\n# -e, --psql-userdb, --sql-userdb\n# http://www.postgresql.org/docs/9.2/static/libpq-connect.html#LIBPQ-CONNSTRING\n# psql-userdb = "host=<host> dbname=<database-name> user=<database-user> password=<database-user-password> connect_timeout=30"\n\n# -N\n# host=<ip-addr> dbname=<db-number> password=<database-user-password> port=<db-port> connect_timeout=<seconds>\n# redis-userdb = <connection-string\n# -O redisl \u7edf\u8ba1\u548c\u72b6\u6001 db\uff0c\u652f\u6301\u4e8b\u4ef6\u8ba2\u9605\n# redis-statsdb = <connection-string>\n\n# TURN REST API\n#\n# Time Limited Long Term Credential\n#   sets a special authorization option that is based upon authentication secret\n# \u7528\u4e8e\u652f\u6301 TURN Server REST API\n# usercombo -> "timestamp:userid"\n# turn user -> usercombo\n# turn password -> base64(hmac(secret key, usercombo))\n#\n# allows TURN credentials to be accounted for a specific user id\n# turning on secret-based authentication - static-auth-secret \u6216 turn_secret \u8868\n# \u4f9d\u8d56 lt-cred-mech\uff0c\u4f1a\u4fee\u6539\u90e8\u5206\u914d\u7f6e\n# use-auth-secret\n# \u9759\u6001 secret - \u9ed8\u8ba4\u4f7f\u7528 turn_secret \u8868\u6570\u636e\n# static-auth-secret = <secret>\n# \u7528\u4e8e oAuth \u6d41\u7a0b - \u9ed8\u8ba4\u4e3a realm \u540d\u5b57\n# server-name\n# \u542f\u7528 oAuth\noauth\n\n# \u9759\u6001\u7528\u6237 - \u4e0d\u53ef\u4ee5\u7528\u4e8e TURN REST API\n# \u751f\u6210 key - turnadmin -k -u ninefingers -r north.gov -p youhavetoberealistic\n#user=usr:key\n#user=usr:pass\n\n# Disable periodic health checks to \'dynamic\' auth secret tables\nno-auth-pings\n# \u4e0d\u4f7f\u7528\u52a8\u6001\u7684 \u5141\u8bb8/\u62d2\u7edd ip \u5217\u8868\nno-dynamic-ip-list\n# \u4e0d\u4f7f\u7528\u52a8\u6001 realm \u5c5e\u6027\nno-dynamic-realms\n\n\n# TLS\n# ====================\n# \u9ed8\u8ba4 turn_server_cert.pem\n# cert = <filename>\n# \u9ed8\u8ba4 turn_server_pkey.pem\n# pkey = <filename>\n# pkey-pwd = <password>\n# \u9ed8\u8ba4\u503c\u4e3a DEFAULT\n# cipher-list = <"cipher-string">\n# \u8bbe\u7f6e CA \u540e\u4f1a\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8bc1\u4e66\n# CA-file = <filename>\n# \u9ed8\u8ba4 prime256v1\n# ec-curve-name = <curve-name>\n# 566 bits predefined DH TLS key - \u9ed8\u8ba4 2066.\n# dh566\n# 1066 bits predefined DH TLS key - \u9ed8\u8ba4 2066.\n# dh1066\n# DH TLS key - pem \u683c\u5f0f\n# dh-file = <dh-file-name>\n\nno-tlsv1\nno-tlsv1_1\nno-tlsv1_2\n\n# \u534f\u8bae\u914d\u7f6e\n# ====================\n# \u4e0d\u76d1\u542c \u534f\u8bae\nno-udp\nno-udp\nno-tls\nno-dtls\n# \u7981\u6b62 udp relay - \u53ea\u4f7f\u7528 tcp\nno-udp-relay\n# \u7981\u6b62 tcp relay - \u53ea\u4f7f\u7528 udp\nno-tcp-relay\n# \u670d\u52a1\u7aef\u4e2d\u7ee7 - \u975e\u6807\u51c6\u903b\u8f91 - \u4ec5\u7528\u4e8e\u7279\u6b8a\u573a\u666f\n# server-relay\n\n# \u7981\u7528 RFC5780 (NAT behavior discovery)\n# \u5982\u679c\u76d1\u542c\u4e86\u591a\u4e2a\u76f8\u540c\u5730\u5740\u65cf\u5219\u4f1a\u542f\u7528\u8be5\u529f\u80fd\n# \u542f\u7528\u4f1a\u8fd4\u56de\u66f4\u591a\u4fe1\u606f\uff0c\u7981\u7528\u53ef\u4ee5\u51cf\u5c0f\u653b\u51fb\u653e\u5927\u98ce\u9669\n# \u5efa\u8bae\u5f00\u542f\u8be5\u9009\u9879\nno-rfc5780\n\n# \u7981\u7528 MAPPED-ADDRESS, \u53ea\u4f7f\u7528 XOR-MAPPED-ADDRESS\n# \u542f\u7528\u53ef\u4ee5 decrease gain factor in STUN binding responses\n# \u5efa\u8bae\u5f00\u542f\u8be5\u9009\u9879\nno-stun-backward-compatibility\n\n# \u5982\u679c\u5f00\u542f\u4e86 RFC5780 \u53ea\u53d1\u9001 RESPONSE-ORIGIN\n# \u542f\u7528\u53ef\u4ee5 decrease gain factor in STUN binding responses\n# \u5efa\u8bae\u5f00\u542f\u8be5\u9009\u9879\nresponse-origin-only-with-rfc5780\n\n# \u65e5\u5fd7\u914d\u7f6e\n# ====================\n# -l \u6587\u4ef6\u540d\u53ef\u4ee5\u4f7f\u7528 syslog,stdout \u548c -\n# \u4f1a\u5c1d\u8bd5\u76ee\u5f55 /var/log/turnserver/, /var/log, /var/tmp, /tmp, .\n# log-file = <filename>\n# \u4e0d\u8f93\u51fa stdout - \u9ed8\u8ba4\u662f log \u6587\u4ef6+stdout\nno-stdout-log\nsyslog\n# log \u6587\u4ef6\u540d\u4e0d\u6dfb\u52a0 pid \u548c\u65e5\u671f\u4fe1\u606f\nsimple-log\n\n# ISO-8601\nnew-log-timestamp\n# strftime\n# new-log-timestamp-format = <format>\n# STUN binding request - \u9ed8\u8ba4\u5173\u95ed - \u907f\u514d DoS\n# log-binding\n\n# \u5931\u6548\u65f6\u95f4 - \u79d2\nstale-nonce=600\nmax-allocate-lifetime=3600\nchannel-lifetime=600\n# \u751f\u4ea7\u4e0d\u5efa\u8bae\u4fee\u6539\npermission-lifetime=300\nmax-allocate-timeout=60\n\n# -S \u62d2\u7edd\u6240\u6709 turn \u8bf7\u6c42\nstun-only\n# \u62d2\u7edd\u6240\u6709 sturn \u8bf7\u6c42\nno-stun\n# stun \u8981\u6c42\u9a8c\u8bc1\nsecure-stun\n\n# \u7528\u4e8e\u8d1f\u8f7d\u7684\u670d\u52a1 - \u4f1a\u91cd\u5b9a\u5411\n# alternate-server = <ip:port>\n# tls-alternate-server = <ip:port>\n\n# -C timestamp/username \u5206\u5272\nrest-api-separator=:\n# \u91cd\u5b9a\u5411 ^/.well-known/acme-challenge/(.*)\n# acme-redirect = <URL>\n\n# allowed-peer-ip = <ip[-ip]>\n# denied-peer-ip = <ip[-ip]>\n\n# \u4f1a\u5c1d\u8bd5 /var/run/turnserver.pid, /var/tmp/turnserver.pid\n# pidfile = <"pid-file-name">\n# \u8fdb\u7a0b\u8fd0\u884c\u8eab\u4efd\n# proc-user = <user-name>\n# proc-group = <group-name>\n\n# \u652f\u6301 MICE - Mobility with ICE\nmobility\n# -K \u57fa\u4e8e\u901a\u8baf\u9009\u62e9\u5730\u5740 - RFC6156 section-4.2 \u8981\u6c42\u9ed8\u8ba4 IPv4\n# keep-address-family\n\n# \u7981\u7528 CLI \u652f\u6301\n# no-cli\ncli-ip=127.0.0.1\ncli-port=5766\n# \u5efa\u8bae\u4f7f\u7528 turnadmin -P \u751f\u6210\u52a0\u5bc6\u5bc6\u94a5\n# cli-password = <password>\ncli-max-output-sessions\n\n# \u542f\u7528 web-admin - \u9700\u8981 cert\nweb-admin\nweb-admin-ip=127.0.0.1\nweb-admin-port=8080\n# \u51fa\u4e8e\u5b89\u5168\u8003\u8651\u9ed8\u8ba4\u5173\u95ed\nweb-admin-listen-on-workers\n\nprometheus\n'})}),"\n",(0,s.jsx)(e.h2,{id:"turn-rest-api",children:"TURN REST API"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u4f7f\u7528 use-auth-secret+static-auth-secret \u6388\u6743\u65b9\u5f0f\u76f8\u5bf9\u66f4\u5b89\u5168"}),"\n",(0,s.jsxs)(e.li,{children:["password=",(0,s.jsx)(e.code,{children:'base64(hmac(usercombo = "${timestamp}:${username}", secret))'})]}),"\n",(0,s.jsx)(e.li,{children:"timestamp \u4e3a\u5931\u6548\u65f6\u95f4"}),"\n",(0,s.jsx)(e.li,{children:"\u8bf7\u6c42 turn \u7684\u65f6\u5019 username \u9700\u8981\u4f7f\u7528 usercombo"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u914d\u7f6e\u591a\u4e2a shared-secret\uff0c\u4f1a\u904d\u5386\uff0c\u53ef\u4ee5\u6839\u636e realm \u914d\u7f6e"}),"\n",(0,s.jsxs)(e.li,{children:["\u6d41\u7a0b\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u5ba2\u6237\u7aef\u5148\u548c\u81ea\u5df1\u7684\u670d\u52a1\u7aef\u4ea4\u4e92\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u670d\u52a1\u7aef\u9a8c\u8bc1\u5ba2\u6237\u7aef\uff0c\u4ece coturn \u751f\u6210 token"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"\u5ba2\u6237\u7aef\u53d6\u5230 token \u8fdb\u884c turn \u64cd\u4f5c"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://datatracker.ietf.org/doc/html/draft-uberti-behave-turn-rest-00",children:"A REST API For Access To TURN Services"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-go",children:'func hashPassword(name, ts, secret string) (string, string) {\n\tcombo := fmt.Sprintf("%v:%v", ts, name)\n\thash := hmac.New(sha1.New, []byte(secret))\n\thash.Write([]byte(combo))\n\treturn combo, base64.StdEncoding.EncodeToString(hash.Sum(nil))\n}\n'})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"SECRET=<secret_value>\n\ntime=$(date +%s)\nexpiry=8400\nusername=$(( $time + $expiry )):${username}\necho username: ${username}\necho password:\necho -n $username | openssl dgst -binary -sha1 -hmac $SECRET | openssl base64\n"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"var crypto = require('crypto');\n\nfunction getTURNCredentials(name, secret) {\n  var unixTimeStamp = parseInt(Date.now() / 1000) + 24 * 3600, // this credential would be valid for the next 24 hours\n    username = [unixTimeStamp, name].join(':'),\n    password,\n    hmac = crypto.createHmac('sha1', secret);\n  hmac.setEncoding('base64');\n  hmac.write(username);\n  hmac.end();\n  password = hmac.read();\n  return {\n    username: username,\n    password: password,\n  };\n}\n"})}),"\n",(0,s.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(e.h2,{id:"server-stun-returned-an-error-with-code701",children:"server stun returned an error with code=701"}),"\n",(0,s.jsx)(e.p,{children:"701 - none of the ICE candidates were able to successfully make contact with the STUN or TURN server"}),"\n",(0,s.jsx)(e.h2,{id:"self-signed-certificates-for-turn-server",children:"self-signed certificates for Turn Server"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"openssl req -x509 -newkey rsa:2048 -keyout turn_server_pkey.pem -out turn_server_cert.pem -days 3650 -nodes\nturnserver -n -L 0.0.0.0 -v -a -f -r example -u test:test --cert turn_server_cert.pem --pkey turn_server_pkey.pem --oauth --web-admin\n"})}),"\n",(0,s.jsx)(e.h2,{id:"incoming-packet-create_permission-processed-error-443-peer-address-family-mismatch-4",children:"incoming packet CREATE_PERMISSION processed, error 443: Peer Address Family Mismatch (4)"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"1 - handle_turn_refresh"}),"\n",(0,s.jsx)(e.li,{children:"2 - handle_turn_connect"}),"\n",(0,s.jsx)(e.li,{children:"3 - handle_turn_channel_bind"}),"\n",(0,s.jsx)(e.li,{children:"4 - handle_turn_create_permission"}),"\n"]})]})}function u(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(a,{...n})}):a(n)}},3354:(n,e,r)=>{var s=r(50959),t=Symbol.for("react.element"),i=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,c=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function o(n,e,r){var s,i={},o=null,a=null;for(s in void 0!==r&&(o=""+r),void 0!==e.key&&(o=""+e.key),void 0!==e.ref&&(a=e.ref),e)l.call(e,s)&&!d.hasOwnProperty(s)&&(i[s]=e[s]);if(n&&n.defaultProps)for(s in e=n.defaultProps)void 0===i[s]&&(i[s]=e[s]);return{$$typeof:t,type:n,key:o,ref:a,props:i,_owner:c.current}}e.Fragment=i,e.jsx=o,e.jsxs=o},11527:(n,e,r)=>{n.exports=r(3354)},47214:(n,e,r)=>{r.d(e,{Z:()=>c,a:()=>l});var s=r(50959);const t={},i=s.createContext(t);function l(n){const e=s.useContext(i);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),s.createElement(i.Provider,{value:e},n.children)}}}]);