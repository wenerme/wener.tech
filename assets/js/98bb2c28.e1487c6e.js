"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[12427],{49613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(59496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=u(n),d=r,k=c["".concat(s,".").concat(d)]||c[d]||m[d]||l;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},52063:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return d},default:function(){return N},frontMatter:function(){return c},metadata:function(){return k},toc:function(){return f}});var a=n(49613),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?r(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(o)for(var n of o(t))u.call(t,n)&&p(e,n,t[n]);return e};const c={title:"K8S \u5e38\u89c1\u95ee\u9898",tags:["FAQ"]},d="K8S \u5e38\u89c1\u95ee\u9898",k={unversionedId:"devops/kubernetes/k8s-faq",id:"devops/kubernetes/k8s-faq",title:"K8S \u5e38\u89c1\u95ee\u9898",description:"headless service",source:"@site/../notes/devops/kubernetes/k8s-faq.md",sourceDirName:"devops/kubernetes",slug:"/devops/kubernetes/faq",permalink:"/notes/devops/kubernetes/faq",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/k8s-faq.md",tags:[{label:"FAQ",permalink:"/notes/tags/faq"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1656950348,formattedLastUpdatedAt:"Jul 4, 2022",frontMatter:{title:"K8S \u5e38\u89c1\u95ee\u9898",tags:["FAQ"]},sidebar:"docs",previous:{title:"Kubernates \u9762\u677f",permalink:"/notes/devops/kubernetes/dashboard"},next:{title:"MountPropagation",permalink:"/notes/devops/kubernetes/feature"}},h={},f=[{value:"headless service",id:"headless-service",level:2},{value:"limits",id:"limits",level:2},{value:"operator vs controller",id:"operator-vs-controller",level:2},{value:"cni-plugins \u4e0d\u518d\u5305\u542b flannel",id:"cni-plugins-\u4e0d\u518d\u5305\u542b-flannel",level:2},{value:"\u8d44\u6e90\u9650\u5236",id:"\u8d44\u6e90\u9650\u5236",level:2},{value:"K3S \u5e38\u89c1\u95ee\u9898",id:"k3s-\u5e38\u89c1\u95ee\u9898",level:2},{value:"Pod \u65f6\u533a",id:"pod-\u65f6\u533a",level:2},{value:"taint",id:"taint",level:2},{value:"\u96c6\u7fa4\u9650\u5236",id:"\u96c6\u7fa4\u9650\u5236",level:2},{value:"\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42 / Linux Kernel Requirement",id:"\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42--linux-kernel-requirement",level:2},{value:"invalid capacity 0 on image filesystem",id:"invalid-capacity-0-on-image-filesystem",level:2},{value:"\u5bfc\u51fa\u8d44\u6e90\u5ffd\u7565\u72b6\u6001\u5b57\u6bb5",id:"\u5bfc\u51fa\u8d44\u6e90\u5ffd\u7565\u72b6\u6001\u5b57\u6bb5",level:2},{value:"\u5220\u9664\u5361\u5728 Terminating \u72b6\u6001\u7684\u8d44\u6e90",id:"\u5220\u9664\u5361\u5728-terminating-\u72b6\u6001\u7684\u8d44\u6e90",level:2},{value:"\u5220\u9664 rancher \u9879\u76ee\u7a7a\u95f4",id:"\u5220\u9664-rancher-\u9879\u76ee\u7a7a\u95f4",level:2},{value:"Unable to connect to the server: x509: certificate is valid for 10.10.1.2, 10.43.0.1, 127.0.0.1, 192.168.1.10, not 123.123.123.123",id:"unable-to-connect-to-the-server-x509-certificate-is-valid-for-101012-104301-127001-192168110-not-123123123123",level:2},{value:"Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create a sandbox for pod &quot;cron-1594372200-lmkcb&quot;: operation timeout: context deadline exceeded",id:"failed-to-create-pod-sandbox-rpc-error-code--unknown-desc--failed-to-create-a-sandbox-for-pod-cron-1594372200-lmkcb-operation-timeout-context-deadline-exceeded",level:2},{value:"error: specifying a root certificates file with the insecure flag is not allowed",id:"error-specifying-a-root-certificates-file-with-the-insecure-flag-is-not-allowed",level:2},{value:"node_lifecycle_controller.go:1433 Initializing eviction metric for zone",id:"node_lifecycle_controllergo1433-initializing-eviction-metric-for-zone",level:2},{value:"running &quot;VolumeBinding&quot; filter plugin for pod &quot;web-0&quot;: pod has unbound immediate PersistentVolumeClaims",id:"running-volumebinding-filter-plugin-for-pod-web-0-pod-has-unbound-immediate-persistentvolumeclaims",level:2},{value:"error: unable to retrieve the complete list of server APIs: write: broken pipe",id:"error-unable-to-retrieve-the-complete-list-of-server-apis-write-broken-pipe",level:2},{value:"dns \u4e0d\u901a",id:"dns-\u4e0d\u901a",level:2},{value:"MountVolume.SetUp failed for volume &quot;config-volume&quot; : failed to sync secret cache: timed out waiting for the condition",id:"mountvolumesetup-failed-for-volume-config-volume--failed-to-sync-secret-cache-timed-out-waiting-for-the-condition",level:2},{value:"kubernetes swap",id:"kubernetes-swap",level:2},{value:"didn&#39;t have free ports for the requested pod ports",id:"didnt-have-free-ports-for-the-requested-pod-ports",level:2},{value:"scale to zero",id:"scale-to-zero",level:2},{value:"The StorageClass is invalid: provisioner: Forbidden: updates to provisioner are forbidden.",id:"the-storageclass-is-invalid-provisioner-forbidden-updates-to-provisioner-are-forbidden",level:2},{value:"\u9884\u7559\u8d44\u6e90",id:"\u9884\u7559\u8d44\u6e90",level:2},{value:"node(s) had volume node affinity conflict",id:"nodes-had-volume-node-affinity-conflict",level:2},{value:"\u5982\u4f55\u4fdd\u6301\u8d1f\u8f7d\u5747\u8861",id:"\u5982\u4f55\u4fdd\u6301\u8d1f\u8f7d\u5747\u8861",level:2},{value:"pause \u662f\u4ec0\u4e48\u8fdb\u7a0b",id:"pause-\u662f\u4ec0\u4e48\u8fdb\u7a0b",level:2},{value:"1 node(s) had volume node affinity conflict",id:"1-nodes-had-volume-node-affinity-conflict",level:2},{value:"failed to run Kubelet: mountpoint for cpu not found",id:"failed-to-run-kubelet-mountpoint-for-cpu-not-found",level:2},{value:"orphaned pod found, but error not a directory occurred when trying to remove the volumes dir",id:"orphaned-pod-found-but-error-not-a-directory-occurred-when-trying-to-remove-the-volumes-dir",level:2},{value:"1 node(s) didn&#39;t have free ports for the requested pod ports.",id:"1-nodes-didnt-have-free-ports-for-the-requested-pod-ports",level:2},{value:"\u8d44\u6e90",id:"\u8d44\u6e90",level:2},{value:"failed to reserve container name &quot;&quot;: name &quot;&quot; is reserved for",id:"failed-to-reserve-container-name--name--is-reserved-for",level:2},{value:"parent snapshot does not exist: not found",id:"parent-snapshot-does-not-exist-not-found",level:2},{value:"invalid bearer token, Token has been invalidated",id:"invalid-bearer-token-token-has-been-invalidated",level:2},{value:"Node Shell",id:"node-shell",level:2},{value:"\u8bc1\u4e66\u8f6e\u6362",id:"\u8bc1\u4e66\u8f6e\u6362",level:2},{value:"eStargz",id:"estargz",level:2},{value:"could not load server certificate file : Permission denied",id:"could-not-load-server-certificate-file--permission-denied",level:2},{value:"Usage of EmptyDir volume exceeds the limit 1m",id:"usage-of-emptydir-volume-exceeds-the-limit-1m",level:2},{value:"\u5e38\u7528 fieldRef",id:"\u5e38\u7528-fieldref",level:2}],g={toc:f};function N(e){var t,n=e,{components:r}=n,p=((e,t)=>{var n={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&u.call(e,a)&&(n[a]=e[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(t=m(m({},g),p),l(t,i({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h1",m({},{id:"k8s-\u5e38\u89c1\u95ee\u9898"}),"K8S \u5e38\u89c1\u95ee\u9898"),(0,a.kt)("h2",m({},{id:"headless-service"}),"headless service"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u9700\u8981 clusterIP \u7684 service"),(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u7528\u4e8e\u8def\u7531\uff0c\u800c\u662f\u7528\u4e8e dns \u67e5\u8be2 - \u8fd4\u56de endpoint \u5730\u5740")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"spec:\n  clusterIP: None\n")),(0,a.kt)("h2",m({},{id:"limits"}),"limits"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"110 pods/node"),(0,a.kt)("li",{parentName:"ul"},"1 MB/object - etcd \u9650\u5236 - ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/issues/19781"}),"#19781"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5927\u578b CRD \u5b9a\u4e49\u53ef\u80fd\u8fbe\u5230\u8fd9\u4e2a\u9650\u5236 - embed \u5916\u90e8\u5b9a\u4e49 - ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/issues/82292"}),"#82292")),(0,a.kt)("li",{parentName:"ul"},"ConfigMap \u5982\u679c\u8fc7\u5927\uff0c\u5efa\u8bae\u62c6\u5206"))),(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709 annotation KV \u52a0\u8d77\u6765\u4e0d\u8d85\u8fc7 ",(0,a.kt)("strong",{parentName:"li"},"256Kb")," - ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/blob/fa16bf8e121e9a9ce0a8b92d96a39c986152c484/staging/src/k8s.io/apimachinery/pkg/api/validation/objectmeta.go#L36"}),"TotalAnnotationSizeLimitB")),(0,a.kt)("li",{parentName:"ul"},"RFC-1123 - DNS LabelName \u6700\u957f ",(0,a.kt)("strong",{parentName:"li"},"63")," \u5b57\u7b26 - K8S \u4e2d\u5f88\u591a\u5730\u65b9\u4f7f\u7528\u8be5\u9a8c\u8bc1 ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709\u652f\u6301 DNS \u7684\u5bf9\u8c61",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"pod,service,namespace"))),(0,a.kt)("li",{parentName:"ul"},"label - ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/pull/1830"}),"#1830"))))),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://stackoverflow.com/a/32294443/1870054"}),"https://stackoverflow.com/a/32294443/1870054")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://etcd.io/docs/v3.3/dev-guide/limit/"}),"https://etcd.io/docs/v3.3/dev-guide/limit/"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"handle small key value pairs typical for metadata."),(0,a.kt)("li",{parentName:"ul"},"--max-request-bytes=1.5MiB"),(0,a.kt)("li",{parentName:"ul"},"--quota-backend-bytes=2GB - \u5efa\u8bae\u4e0d\u8d85\u8fc7 8GB")))),(0,a.kt)("h2",m({},{id:"operator-vs-controller"}),"operator vs controller"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"operator \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a controller"),(0,a.kt)("li",{parentName:"ul"},"controller \u8d1f\u8d23 CRD \u5904\u7406")),(0,a.kt)("h2",m({},{id:"cni-plugins-\u4e0d\u518d\u5305\u542b-flannel"}),"cni-plugins \u4e0d\u518d\u5305\u542b flannel"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"flannel \u72ec\u7acb\u51fa\u5355\u72ec\u7684 repo ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/flannel-io/cni-plugin"}),"flannel-io/cni-plugin")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/containernetworking/plugins/issues/655"}),"https://github.com/containernetworking/plugins/issues/655"))),(0,a.kt)("h2",m({},{id:"\u8d44\u6e90\u9650\u5236"}),"\u8d44\u6e90\u9650\u5236"),(0,a.kt)("h2",m({},{id:"k3s-\u5e38\u89c1\u95ee\u9898"}),"K3S \u5e38\u89c1\u95ee\u9898"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/rancher/k3s/issues/396"}),"#396")," - Initializing eviction metric for zone")),(0,a.kt)("h2",m({},{id:"pod-\u65f6\u533a"}),"Pod \u65f6\u533a"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"TZ \u73af\u5883\u53d8\u91cf")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u8981\u6c42 \u8bed\u8a00/runtime \u652f\u6301"),(0,a.kt)("li",{parentName:"ul"},"\u9700\u8981 tzdata")),(0,a.kt)("ol",m({},{start:2}),(0,a.kt)("li",{parentName:"ol"},"\u6620\u5c04 tz \u4fe1\u606f")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u4e0e host \u4fdd\u6301\u4e00\u81f4"),(0,a.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u4e0d\u9700\u8981\u5b89\u88c5 tzdata"),(0,a.kt)("li",{parentName:"ul"},"\u8981\u6c42 host \u5b89\u88c5\u4e86 tzdata"),(0,a.kt)("li",{parentName:"ul"},"\u8981\u6c42\u8c03\u6574 Pod")),(0,a.kt)("ol",m({},{start:3}),(0,a.kt)("li",{parentName:"ol"},"\u4ee3\u7801\u5185\u63a7\u5236")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"bundle tzdata\uff0c\u8fd0\u884c\u65f6\u52a0\u8f7d"),(0,a.kt)("li",{parentName:"ul"},"golang ",(0,a.kt)("inlineCode",{parentName:"li"},'import _ "time/tzdata"'),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u589e\u52a0\u7ea6 450 KB")))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Pod\nmetadata:\n  name: busybox-sleep\nspec:\n  containers:\n    - name: busybox\n      image: busybox\n      args:\n        - sleep\n        - '1000000'\n      env:\n        - name: TZ\n          value: Asia/Shanghai\n      volumeMounts:\n        - name: tz-config\n          mountPath: /etc/localtime\n  volumes:\n    - name: tz-config\n      hostPath:\n        path: /usr/share/zoneinfo/Asia/Shanghai\n        type: File\n")),(0,a.kt)("h2",m({},{id:"taint"}),"taint"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"node.kubernetes.io/disk-pressure:NoSchedule"),(0,a.kt)("li",{parentName:"ul"},"\u4e3a pod \u8bbe\u7f6e priorityClassName \u786e\u4fdd\u8c03\u5ea6\uff0c\u907f\u514d\u9a71\u9010",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"system-node-critical,system-cluster-critical")))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"df -h\ndf -Hi\n\n# remove DiskPressure\nkubectl taint nodes < nodename > node.kubernetes.io/disk-pressure-\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u76d1\u63a7\u6765\u81ea\u4e8e cadvisor"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://kubernetes.io/docs/concepts/architecture/garbage-collection/#container-image-lifecycle"}),"https://kubernetes.io/docs/concepts/architecture/garbage-collection/#container-image-lifecycle"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"HighThresholdPercent"),(0,a.kt)("li",{parentName:"ul"},"LowThresholdPercent")))),(0,a.kt)("h2",m({},{id:"\u96c6\u7fa4\u9650\u5236"}),"\u96c6\u7fa4\u9650\u5236"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"5000 \u8282\u70b9"),(0,a.kt)("li",{parentName:"ul"},"150000 \u603b Pod"),(0,a.kt)("li",{parentName:"ul"},"300000 \u603b\u5bb9\u5668"),(0,a.kt)("li",{parentName:"ul"},"100 \u8282\u70b9 Pod"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://kubernetes.io/docs/setup/best-practices/cluster-large/"}),"Building large clusters")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://cloud.google.com/compute/docs/machine-types"}),"GCE Type"))),(0,a.kt)("p",null,"\u96c6\u7fa4 Master \u6027\u80fd\u63a8\u8350"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Nodes"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"GCE Type"),(0,a.kt)("th",m({parentName:"tr"},{align:null}),"Spec"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"1-5"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"n1-standard-1"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"1 \u6838 4G")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"6-10"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"n1-standard-2"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"2 \u6838 8G")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"11-100"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"n1-standard-4"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"4 \u6838 16G")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"101-250"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"n1-standard-8"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"8 \u6838 32G")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"251-500"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"n1-standard-16"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"16 \u6838 64G")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",m({parentName:"tr"},{align:null}),"500+"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"n1-standard-32"),(0,a.kt)("td",m({parentName:"tr"},{align:null}),"32 \u6838 128G")))),(0,a.kt)("h2",m({},{id:"\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42--linux-kernel-requirement"}),"\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42 / Linux Kernel Requirement"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Linux Kernel 3.10+"),(0,a.kt)("li",{parentName:"ul"},"moby ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/moby/moby/blob/master/contrib/check-config.sh"}),"contrib/check-config.sh")),(0,a.kt)("li",{parentName:"ul"},"Calico ",(0,a.kt)("a",m({parentName:"li"},{href:"https://docs.projectcalico.org/getting-started/kubernetes/requirements"}),"System requirements"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Linux Kernel 3.10+")))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"./check-config.sh kernel.config\n")),(0,a.kt)("h2",m({},{id:"invalid-capacity-0-on-image-filesystem"}),"invalid capacity 0 on image filesystem"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u786e\u4fdd\u5b58\u5728\u5185\u6838\u53c2\u6570 ",(0,a.kt)("inlineCode",{parentName:"li"},"cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"syslinux",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"/etc/update-extlinux.conf"),(0,a.kt)("li",{parentName:"ul"},"update-extlinux && reboot"))),(0,a.kt)("li",{parentName:"ul"},"grub",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"/etc/default/grub")))))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"cat /proc/cmdline | grep cgroup_enable\n")),(0,a.kt)("hr",null),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/issues/51798#issuecomment-481366041"}),"kubernetes/kubernetes#51798")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/k3s-io/k3s/issues/1857#issuecomment-637852959"}),"k3s-io/k3s#1857")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/canonical/microk8s/issues/912"}),"canonical/microk8s#912"))),(0,a.kt)("h2",m({},{id:"\u5bfc\u51fa\u8d44\u6e90\u5ffd\u7565\u72b6\u6001\u5b57\u6bb5"}),"\u5bfc\u51fa\u8d44\u6e90\u5ffd\u7565\u72b6\u6001\u5b57\u6bb5"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5e38\u89c1\u5b57\u6bb5",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"status"),(0,a.kt)("li",{parentName:"ul"},"metadata.managedFields"),(0,a.kt)("li",{parentName:"ul"},"metadata",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"annotations",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"kubectl.kubernetes.io/last-applied-configuration"),(0,a.kt)("li",{parentName:"ul"},"deployment.kubernetes.io/revision"))),(0,a.kt)("li",{parentName:"ul"},"resourceVersion"),(0,a.kt)("li",{parentName:"ul"},"selfLink"),(0,a.kt)("li",{parentName:"ul"},"uid"),(0,a.kt)("li",{parentName:"ul"},"creationTimestamp"),(0,a.kt)("li",{parentName:"ul"},"generation")))))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"kubectl get -o=yaml deploy whoami | yq d - status | yq d - 'metadata.managedFields'\n")),(0,a.kt)("h2",m({},{id:"\u5220\u9664\u5361\u5728-terminating-\u72b6\u6001\u7684\u8d44\u6e90"}),"\u5220\u9664\u5361\u5728 Terminating \u72b6\u6001\u7684\u8d44\u6e90"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5220\u9664 Pod \u53ef\u5c1d\u8bd5\u5f3a\u5236"),(0,a.kt)("li",{parentName:"ul"},"\u8d44\u6e90\u5220\u4e0d\u6389\u5c1d\u8bd5\u79fb\u9664 finalizers\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),'# \u5f3a\u5236\u5220\u9664 Pod\nkubectl delete pods --force < pod > --grace-period=0\n# \u5c1d\u8bd5\u79fb\u9664 Pod \u7684 finalizers\nkubectl patch pod \'{"metadata":{"finalizers":null}}\' < pod > -p\n\n# \u67e5\u770b\u6240\u6709\u7684 Terminating Namespace\nkubectl get ns --field-selector status.phase=Terminating\n\n# \u6240\u6709 NS\nkubectl get ns --field-selector status.phase=Terminating -o jsonpath=\'{..metadata.name}\'\n\n# \u6279\u91cf\n# kubectl patch ns -p \'{"metadata":{"finalizers": null}}\' $NS\n# kubectl patch ns -p \'{"metadata":{"finalizers":[]}}\' --type=merge $NS\nkubectl patch ns -p \'{"metadata":{"finalizers":[]}}\' --type=merge $(kubectl get ns --field-selector status.phase=Terminating -o jsonpath=\'{..metadata.name}\')\n')),(0,a.kt)("h2",m({},{id:"\u5220\u9664-rancher-\u9879\u76ee\u7a7a\u95f4"}),"\u5220\u9664 rancher \u9879\u76ee\u7a7a\u95f4"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u4e3b\u8981\u96be\u70b9\u5728\u4e8e get all \u4e0d\u4f1a\u8fd4\u56de\u6240\u6709\u8d44\u6e90",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u53ef\u5c1d\u8bd5 ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/corneliusweig/ketall#via-krew"}),"ketall")))),(0,a.kt)("li",{parentName:"ul"},"\u90e8\u5206\u8d44\u6e90\u9700\u8981\u5148 patch \u624d\u80fd\u5220\u9664")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),'for ns in local p-66lfd; do\n  for error in app.project.cattle.io/cluster-alerting app.project.cattle.io/cluster-monitoring app.project.cattle.io/monitoring-operator app.project.cattle.io/project-monitoring clusteralertgroup.management.cattle.io/cluster-scan-alert clusteralertgroup.management.cattle.io/etcd-alert clusteralertgroup.management.cattle.io/event-alert clusteralertgroup.management.cattle.io/kube-components-alert clusteralertgroup.management.cattle.io/node-alert clusterroletemplatebinding.management.cattle.io/creator-cluster-owner clusterroletemplatebinding.management.cattle.io/u-b4qkhsnliz-admin node.management.cattle.io/machine-9sssc node.management.cattle.io/machine-ks6z6 node.management.cattle.io/machine-v4v89 project.management.cattle.io/p-cnj28 project.management.cattle.io/p-mbvfd projectalertgroup.management.cattle.io/projectalert-workload-alert projectalertrule.management.cattle.io/less-than-half-workload-available projectalertrule.management.cattle.io/memory-close-to-resource-limited projectroletemplatebinding.management.cattle.io/app-jdnmz projectroletemplatebinding.management.cattle.io/creator-project-owner projectroletemplatebinding.management.cattle.io/prtb-s6fhc projectroletemplatebinding.management.cattle.io/u-2gacgc4nfu-member projectroletemplatebinding.management.cattle.io/u-efxo6n6ndd-member; do\n    for resource in $(kubectl get -n $ns $error -o name); do\n      kubectl patch -n $ns $resource -p \'{"metadata": {"finalizers": []}}\' --type=\'merge\'\n    done\n  done\ndone\n\n# \u5168\u5c40\u8d44\u6e90\nfor res in $(kubectl api-resources --namespaced=false --api-group management.cattle.io | cut -d \' \' -f 1); do\n  echo "=== $res.management.cattle.io ==="\n  kubectl get $res.management.cattle.io\ndone\n\n# namespaced\ngroups="management.cattle.io catalog.cattle.io project.cattle.io"\nfor grp in $groups; do\n  for res in $(kubectl api-resources --namespaced=true --api-group $grp -o name); do\n    echo "=== $res ==="\n    kubectl get --all-namespaces $res\n  done\ndone\n\n# \u6e05\u9664\u8d44\u6e90\ncleargroup() {\n  kubectl patch $1 -p \'{"metadata":{"finalizers":[]}}\' --type=merge $(kubectl get $1 -o jsonpath=\'{..metadata.name}\')\n  kubectl delete --all $1\n}\n\ncleargroup globalroles.management.cattle.io\n')),(0,a.kt)("h2",m({},{id:"unable-to-connect-to-the-server-x509-certificate-is-valid-for-101012-104301-127001-192168110-not-123123123123"}),"Unable to connect to the server: x509: certificate is valid for 10.10.1.2, 10.43.0.1, 127.0.0.1, 192.168.1.10, not 123.123.123.123"),(0,a.kt)("p",null,"\u7b7e\u53d1\u7684\u8bc1\u4e66\u4e0d\u5305\u542b IP\uff0c\u521d\u59cb\u5316\u7684\u65f6\u5019\u53ef\u4ee5\u6dfb\u52a0\uff0c\u5efa\u8bae\u65b0\u5efa\u5b50\u8d26\u53f7\u7ba1\u7406\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"# \u539f\u5148\u7684\u4f4d\u4e8e\n# /etc/kubernetes/pki/apiserver.*\nkubeadm init --apiserver-cert-extra-sans=123.123.123.123\n")),(0,a.kt)("h2",m({},{id:"failed-to-create-pod-sandbox-rpc-error-code--unknown-desc--failed-to-create-a-sandbox-for-pod-cron-1594372200-lmkcb-operation-timeout-context-deadline-exceeded"}),'Failed to create pod sandbox: rpc error: code = Unknown desc = failed to create a sandbox for pod "cron-1594372200-lmkcb": operation timeout: context deadline exceeded'),(0,a.kt)("p",null,"\u6d4b\u8bd5\u662f\u5426\u6b63\u5e38"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"apiVersion: batch/v1\nkind: Job\nmetadata:\n  name: alpine-pwd\nspec:\n  template:\n    spec:\n      containers:\n        - name: alpine\n          image: wener/base\n          command: ['pwd']\n      restartPolicy: Never\n  backoffLimit: 4\n")),(0,a.kt)("p",null,"\u4e00\u4e2a\u4e3b\u8282\u70b9\u5f02\u5e38\uff0c\u91cd\u542f\u89e3\u51b3\u3002"),(0,a.kt)("h2",m({},{id:"error-specifying-a-root-certificates-file-with-the-insecure-flag-is-not-allowed"}),"error: specifying a root certificates file with the insecure flag is not allowed"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"insecure-skip-tls-verify")," \u4e0d\u80fd\u7528\u4e8e\u6839\u8bc1\u4e66\uff0c\u65b0\u5efa\u5b50\u8d26\u53f7\u3002"),(0,a.kt)("h2",m({},{id:"node_lifecycle_controllergo1433-initializing-eviction-metric-for-zone"}),"node_lifecycle_controller.go:1433 Initializing eviction metric for zone"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5f53\u6709\u65b0\u7684 zone \u65f6\u4f1a\u521d\u59cb\u5316 metric"),(0,a.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/blob/d01cc01ab4455d1c0db84d2cc79d963a1b15d292/pkg/controller/nodelifecycle/node_lifecycle_controller.go#L1429"}),"node_lifecycle_controller.go:1433")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://kubernetes.io/docs/setup/best-practices/multiple-zones/"}),"\u591a\u53ef\u7528\u533a\u5b9e\u8df5"))))),(0,a.kt)("h2",m({},{id:"running-volumebinding-filter-plugin-for-pod-web-0-pod-has-unbound-immediate-persistentvolumeclaims"}),'running "VolumeBinding" filter plugin for pod "web-0": pod has unbound immediate PersistentVolumeClaims'),(0,a.kt)("h2",m({},{id:"error-unable-to-retrieve-the-complete-list-of-server-apis-write-broken-pipe"}),"error: unable to retrieve the complete list of server APIs: write: broken pipe"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u7f51\u7edc\u4e0d\u7a33\u5b9a\u4e5f\u53ef\u80fd\u5bfc\u81f4",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u4f8b\u5982 \u5728\u4f7f\u7528 sshuttle \u7684\u65f6\u5019\u5076\u5c14\u5c31\u4f1a\u51fa\u73b0"),(0,a.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 ssh \u8f6c\u53d1 - ",(0,a.kt)("inlineCode",{parentName:"li"},"ssh -vNL 6443:10.10.1.1:6443 admin@192.168.1.2 -o ExitOnForwardFailure=yes")))),(0,a.kt)("li",{parentName:"ul"},'an error on the server ("") has prevented the request from succeeding')),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"# \u6982\u7387\u5931\u8d25\nkubectl api-resources\n\n# \u786e\u4fdd metric \u6b63\u5e38\nkubectl get apiservices\n# \u786e\u4fdd \u7cfb\u7edf\u670d\u52a1 \u6b63\u5e38\nkubectl get pods -n kube-system\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/prometheus-operator/kube-prometheus/issues/275"}),"https://github.com/prometheus-operator/kube-prometheus/issues/275"))),(0,a.kt)("h2",m({},{id:"dns-\u4e0d\u901a"}),"dns \u4e0d\u901a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u73b0\u8c61 - \u6240\u6709 \u670d\u52a1 504\uff0c\u7f51\u5173\u8d85\u65f6"),(0,a.kt)("li",{parentName:"ul"},"\u6392\u67e5",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u9a8c\u8bc1 kube-dns 53 \u80fd\u5426\u89e3\u6790"),(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709\u8282\u70b9\u90fd\u6709\u95ee\u9898\u8fd8\u662f\u5355\u4e2a\u8282\u70b9",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u6240\u6709\u8282\u70b9\u90fd\u6709\u95ee\u9898\u5219\u53ef\u80fd\u662f\u670d\u52a1\u7684\u95ee\u9898"),(0,a.kt)("li",{parentName:"ul"},"\u5355\u4e2a\u8282\u70b9\u5219\u53ef\u80fd\u662f\u73af\u5883\u95ee\u9898"))),(0,a.kt)("li",{parentName:"ul"},"ping \u540e\u7aef endpoint"),(0,a.kt)("li",{parentName:"ul"},"ping \u4e0d\u901a\u5219\u8bf4\u660e\u53ef\u80fd\u662f flannel \u63d2\u4ef6\u4e4b\u7c7b\u5f02\u5e38\u6216\u8005\u4f7f\u7528\u7684\u5e95\u5c42 interface \u5f02\u5e38"))),(0,a.kt)("li",{parentName:"ul"},"\u89e3\u51b3",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5c1d\u8bd5\u91cd\u542f k3s"),(0,a.kt)("li",{parentName:"ul"},"\u5c1d\u8bd5\u91cd\u542f \u7f51\u7edc"),(0,a.kt)("li",{parentName:"ul"},"\u5c1d\u8bd5\u91cd\u542f \u7cfb\u7edf")))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"# \u9a8c\u8bc1 DNS \u80fd\u5426\u89e3\u6790\n# k3s \u9ed8\u8ba4\u4f7f\u7528 10.43.0.10\n# kube-dns.kube-system.svc\nnslookup wener.me 10.43.0.10\n# \u6216\ndig @10.43.0.10 wener.me\n")),(0,a.kt)("h2",m({},{id:"mountvolumesetup-failed-for-volume-config-volume--failed-to-sync-secret-cache-timed-out-waiting-for-the-condition"}),'MountVolume.SetUp failed for volume "config-volume" : failed to sync secret cache: timed out waiting for the condition'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6761\u4ef6\u672a\u6ee1\u8db3\uff0c\u65e0\u6cd5\u7ee7\u7eed\u6267\u884c\uff0c\u4e14\u7b49\u5f85\u8d85\u65f6"),(0,a.kt)("li",{parentName:"ul"},"\u89e3\u51b3\u529e\u6cd5",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u7b49\u5f85 \u6216 \u5220\u9664 Pod")))),(0,a.kt)("p",null,"\u67e5\u770b\u6761\u4ef6"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"status:\n  phase: Pending\n  conditions:\n    - type: Initialized\n      status: 'True'\n      lastProbeTime: null\n      lastTransitionTime: '2020-09-04T10:09:51Z'\n    - type: Ready\n      status: 'False'\n      lastProbeTime: null\n      lastTransitionTime: '2020-09-04T10:09:51Z'\n      reason: ContainersNotReady\n      message: 'containers with unready status: [alertmanager config-reloader]'\n    # \u8fd9\u4e00\u6b65\u672a\u80fd\u6210\u529f\n    - type: ContainersReady\n      status: 'False'\n      lastProbeTime: null\n      lastTransitionTime: '2020-09-04T10:09:51Z'\n      reason: ContainersNotReady\n      message: 'containers with unready status: [alertmanager config-reloader]'\n    - type: PodScheduled\n      status: 'True'\n      lastProbeTime: null\n      lastTransitionTime: '2020-09-04T10:09:51Z'\n")),(0,a.kt)("h2",m({},{id:"kubernetes-swap"}),"kubernetes swap"),(0,a.kt)("p",null,"\u4e0d\u5efa\u8bae\u4f7f\u7528 swap"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/issues/53533"}),"kubernetes/kubernetes#3533")," - Kubelet/Kubernetes should work with Swap Enabled")),(0,a.kt)("h2",m({},{id:"didnt-have-free-ports-for-the-requested-pod-ports"}),"didn't have free ports for the requested pod ports"),(0,a.kt)("p",null,"deploy \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u4f7f\u7528 Recreate\uff0c RollingUpdate \u4f1a\u5931\u8d25\u3002"),(0,a.kt)("h2",m({},{id:"scale-to-zero"}),"scale to zero"),(0,a.kt)("p",null,"\u4f7f\u7528 keda \u6216\u8005 knative"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"keda \u7b80\u5355 - \u8d1f\u8d23 autoscaler"),(0,a.kt)("li",{parentName:"ul"},"knative \u590d\u6742 - \u6574\u5957\u5f00\u53d1\u903b\u8f91")),(0,a.kt)("h2",m({},{id:"the-storageclass-is-invalid-provisioner-forbidden-updates-to-provisioner-are-forbidden"}),"The StorageClass is invalid: provisioner: Forbidden: updates to provisioner are forbidden."),(0,a.kt)("p",null,"provisioner \u540d\u5b57\u4e0d\u5339\u914d\uff0c\u8fd8 sc \u540d\u5b57\u6216\u5220\u4e86\u91cd\u5efa\u3002"),(0,a.kt)("h2",m({},{id:"\u9884\u7559\u8d44\u6e90"}),"\u9884\u7559\u8d44\u6e90"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://kubernetes.io/docs/tasks/administer-cluster/reserve-compute-resources/"}),"Reserve Compute Resources for System Daemons"))),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{}),"--kube-reserved=[cpu=100m][,][memory=100Mi][,][ephemeral-storage=1Gi][,][pid=1000]\n--system-reserved=[cpu=100m][,][memory=100Mi][,][ephemeral-storage=1Gi][,][pid=1000]\n--reserved-cpus=0-3\n# \u5f00\u59cb\u9a71\u9010\u7684\u9600\u503c\n--eviction-hard=[memory.available<500Mi]\n--enforce-node-allocatable=pods[,][system-reserved][,][kube-reserved]\n\n# \u6307\u5411\u73b0\u6709\u7684 cgroup\n--kube-reserved-cgroup=\n--system-reserved-cgroup=\n")),(0,a.kt)("h2",m({},{id:"nodes-had-volume-node-affinity-conflict"}),"node(s) had volume node affinity conflict"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c\u662f pv \u65e0\u6cd5\u8fc1\u79fb\uff0c\u5207\u5f71\u54cd\u4e0d\u5927\uff0c\u53ef\u4ee5\u8003\u8651\u5220\u9664\u4e86\u4ece\u5efa")),(0,a.kt)("p",null,"\u53ef\u80fd pvc \u548c pod zone \u51b2\u7a81\uff0c\u53ef\u4ee5\u9488\u5bf9 zone \u521b\u5efa sc"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"kind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: region1storageclass\nprovisioner: kubernetes.io/aws-ebs\nvolumeBindingMode: WaitForFirstConsumer\nallowedTopologies:\n  - matchLabelExpressions:\n      - key: failure-domain.beta.kubernetes.io/zone\n        values:\n          - eu-west-2b\n")),(0,a.kt)("h2",m({},{id:"\u5982\u4f55\u4fdd\u6301\u8d1f\u8f7d\u5747\u8861"}),"\u5982\u4f55\u4fdd\u6301\u8d1f\u8f7d\u5747\u8861"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"\u914d\u7f6e\u53cd\u4eb2\u548c"),(0,a.kt)("li",{parentName:"ol"},"kill pod \u89e6\u53d1\u91cd\u65b0\u8c03\u5ea6"),(0,a.kt)("li",{parentName:"ol"},"\u5c1d\u8bd5 rollout \u4ece\u65b0\u8c03\u5ea6"),(0,a.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u7c7b\u4f3c ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes-sigs/descheduler"}),"kubernetes-sigs/descheduler")," \u8fd9\u6837\u7684\u5de5\u5177\u81ea\u52a8\u7ef4\u62a4\u5747\u8861")),(0,a.kt)("h2",m({},{id:"pause-\u662f\u4ec0\u4e48\u8fdb\u7a0b"}),"pause \u662f\u4ec0\u4e48\u8fdb\u7a0b"),(0,a.kt)("h2",m({},{id:"1-nodes-had-volume-node-affinity-conflict"}),"1 node(s) had volume node affinity conflict"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u68c0\u67e5 StorageClass \u7684\u4eb2\u548c\u7b56\u7565"),(0,a.kt)("li",{parentName:"ul"},"\u68c0\u67e5 PersistentVolume \u7684\u4eb2\u548c\u7b56\u7565",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Pod \u9700\u8981\u5339\u914d PV \u7684\u4eb2\u548c\u7b56\u7565")))),(0,a.kt)("h2",m({},{id:"failed-to-run-kubelet-mountpoint-for-cpu-not-found"}),"failed to run Kubelet: mountpoint for cpu not found"),(0,a.kt)("p",null,"\u5e94\u8be5\u662f\u6ca1\u6709\u6302\u8f7d cgroups"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"service cgroups start\n")),(0,a.kt)("h2",m({},{id:"orphaned-pod-found-but-error-not-a-directory-occurred-when-trying-to-remove-the-volumes-dir"}),"orphaned pod found, but error not a directory occurred when trying to remove the volumes dir"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),'pods=$(tail -n 1000 /var/log/k0s.log | grep \'orphaned pod\' | sed -r \'s/.*pod[^"]+"([^\\\\"]+).*/\\1/\' | uniq)\nfor i in $pods; do\n  echo "Deleting Orphaned pod id: $i"\n  rm -rf /var/lib/kubelet/pods/$i\ndone\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/issues/105536"}),"kubernetes#105536")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://quemingfei.com/archives/kubernetes-wen-ti-pai-cha-orphanedpodfound-butvolumepathsarestillpresentondisk"}),"scripts"))),(0,a.kt)("h2",m({},{id:"1-nodes-didnt-have-free-ports-for-the-requested-pod-ports"}),"1 node(s) didn't have free ports for the requested pod ports."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u68c0\u67e5 hostPort")),(0,a.kt)("h2",m({},{id:"\u8d44\u6e90"}),"\u8d44\u6e90"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"cpu",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"1.0 -> 1vcpu -> 1000m"))),(0,a.kt)("li",{parentName:"ul"},"memory",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"base 1000 - E,T,P,G,M,k"),(0,a.kt)("li",{parentName:"ul"},"2^n - Ei,Pi,Ti,Gi,Mi,Ki"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"hugepages-<size>")),(0,a.kt)("li",{parentName:"ul"},"ephemeral-storage"),(0,a.kt)("li",{parentName:"ul"},"storage")),(0,a.kt)("h2",m({},{id:"failed-to-reserve-container-name--name--is-reserved-for"}),'failed to reserve container name "": name "" is reserved for'),(0,a.kt)("h2",m({},{id:"parent-snapshot-does-not-exist-not-found"}),"parent snapshot does not exist: not found"),(0,a.kt)("h2",m({},{id:"invalid-bearer-token-token-has-been-invalidated"}),"invalid bearer token, Token has been invalidated"),(0,a.kt)("h2",m({},{id:"node-shell"}),"Node Shell"),(0,a.kt)("p",null,"\u53ef\u901a\u8fc7\u4e00\u4e2a Pod \u8fdb\u5165"),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"apiVersion: v1\nkind: Pod\nmetadata:\n  name: node-shell\n  namespace: kube-system\nspec:\n  containers:\n    - name: shell\n      image: docker.io/alpine:3.13\n      command:\n        - nsenter\n      args:\n        - '-t'\n        - '1'\n        - '-m'\n        - '-u'\n        - '-i'\n        - '-n'\n        - sleep\n        - '14000'\n      resources: {}\n      volumeMounts:\n        - name: kube-api-access\n          readOnly: true\n          mountPath: /var/run/secrets/kubernetes.io/serviceaccount\n      terminationMessagePath: /dev/termination-log\n      terminationMessagePolicy: File\n      imagePullPolicy: IfNotPresent\n      securityContext:\n        privileged: true\n  volumes:\n    - name: kube-api-access\n      projected:\n        sources:\n          - serviceAccountToken:\n              expirationSeconds: 3607\n              path: token\n          - configMap:\n              name: kube-root-ca.crt\n              items:\n                - key: ca.crt\n                  path: ca.crt\n          - downwardAPI:\n              items:\n                - path: namespace\n                  fieldRef:\n                    apiVersion: v1\n                    fieldPath: metadata.namespace\n        defaultMode: 420\n  restartPolicy: Never\n  terminationGracePeriodSeconds: 0\n  dnsPolicy: ClusterFirst\n  serviceAccountName: default\n  serviceAccount: default\n  # \u5e0c\u671b\u8fdb\u5165\u7684 Node\n  nodeName: master-1\n  hostNetwork: true\n  hostPID: true\n  hostIPC: true\n  securityContext: {}\n  schedulerName: default-scheduler\n  tolerations:\n    - operator: Exists\n  priorityClassName: system-node-critical\n  priority: 2000001000\n  enableServiceLinks: true\n  preemptionPolicy: PreemptLowerPriority\n")),(0,a.kt)("h2",m({},{id:"\u8bc1\u4e66\u8f6e\u6362"}),"\u8bc1\u4e66\u8f6e\u6362"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"k3s",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"12 \u4e2a\u6708\u6709\u6548\uff0c90 \u5929\u5185\u8f6e\u6362"),(0,a.kt)("li",{parentName:"ul"},"\u8bc1\u4e66\u8f6e\u6362\u9700\u8981\u91cd\u542f - ",(0,a.kt)("inlineCode",{parentName:"li"},"service k3s restart")),(0,a.kt)("li",{parentName:"ul"},"\u6b63\u5728\u5f00\u59cb\u652f\u6301\u7684\u4e0d\u91cd\u542f\u8bc1\u4e66\u8f6e\u6362 ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/k3s-io/k3s/wiki/K3s-Cert-Rotation"}),"k3s certificate")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://rancher.com/docs/k3s/latest/en/advanced/#certificate-rotation"}),"Certificate Rotation")),(0,a.kt)("li",{parentName:"ul"},"Improved and Manual Cert Rotation ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/k3s-io/k3s/issues/2636"}),"k3s-io/k3s#2636")))),(0,a.kt)("li",{parentName:"ul"},"k0s",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u540c k3s \u5728\u91cd\u542f\u65f6\u8f6e\u6362 ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/k0sproject/k0s/pull/952"}),"k0sproject/k0s#952")))),(0,a.kt)("li",{parentName:"ul"},"RKE2",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/rancher/rke2/issues/570"}),"rancher/rke2#570")))),(0,a.kt)("li",{parentName:"ul"},"k8s",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://devopstales.github.io/kubernetes/k8s-cert/"}),"Kubernetes Certificate Rotation")))),(0,a.kt)("li",{parentName:"ul"},"\u8bc1\u4e66\u7c7b\u578b",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"server ca",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"kubeapi-server cert"))),(0,a.kt)("li",{parentName:"ul"},"client ca",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"kube-controller cert"),(0,a.kt)("li",{parentName:"ul"},"kube-scheduler cert"),(0,a.kt)("li",{parentName:"ul"},"kube-proxy cert"),(0,a.kt)("li",{parentName:"ul"},"kube-api client cert"),(0,a.kt)("li",{parentName:"ul"},"CCM cert"))),(0,a.kt)("li",{parentName:"ul"},"etcd ca cert",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"etcd server cert"),(0,a.kt)("li",{parentName:"ul"},"etcd peer cert"),(0,a.kt)("li",{parentName:"ul"},"etcd client cert"))),(0,a.kt)("li",{parentName:"ul"},"request header ca cert",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"client auth proxy cert")))))),(0,a.kt)("h2",m({},{id:"estargz"}),"eStargz"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"k3s/k0s \u4f7f\u7528 containerd \u7684\u80fd\u529b\u652f\u6301 stargz")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-bash"}),"k3s server --snapshotter=stargz\n")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-toml",metastring:'title="/etc/containerd/config.toml"',title:'"/etc/containerd/config.toml"'}),'# Plug stargz snapshotter into containerd\n# Containerd recognizes stargz snapshotter through specified socket address.\n# The specified address below is the default which stargz snapshotter listen to.\n[proxy_plugins]\n\n[proxy_plugins.stargz]\ntype = "snapshot"\naddress = "/run/containerd-stargz-grpc/containerd-stargz-grpc.sock"\n\n# Use stargz snapshotter through CRI\n[plugins."io.containerd.grpc.v1.cri".containerd]\nsnapshotter = "stargz"\n\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/containerd/stargz-snapshotter"}),"containerd/stargz-snapshotter")),(0,a.kt)("li",{parentName:"ul"},"\u521d\u59cb proposal ",(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/google/crfs"}),"google/crfs")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://medium.com/nttlabs/243d94522361"}),"Startup Containers in Lightning Speed with Lazy Image Distribution on Containerd"))),(0,a.kt)("h2",m({},{id:"could-not-load-server-certificate-file--permission-denied"}),"could not load server certificate file : Permission denied"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/kubernetes/kubernetes/issues/81089"}),"kubernetes#81089"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u4e0d\u652f\u6301\u4fee\u6539 owner"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",m({parentName:"li"},{href:"https://github.com/docker-library/postgres/issues/777"}),"https://github.com/docker-library/postgres/issues/777"))),(0,a.kt)("h2",m({},{id:"usage-of-emptydir-volume-exceeds-the-limit-1m"}),"Usage of EmptyDir volume exceeds the limit 1m"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"emptyDir \u4f7f\u7528 tmpfs \u6302\u8f7d",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"medium: Memory")))),(0,a.kt)("h2",m({},{id:"\u5e38\u7528-fieldref"}),"\u5e38\u7528 fieldRef"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"fieldRef"),(0,a.kt)("li",{parentName:"ul"},"resourceFieldRef")),(0,a.kt)("pre",null,(0,a.kt)("code",m({parentName:"pre"},{className:"language-yaml"}),"env:\n  - name: POD_NAME\n    valueFrom:\n      fieldRef:\n        fieldPath: metadata.name\n  - name: POD_NAMESPACE\n    valueFrom:\n      fieldRef:\n        fieldPath: metadata.namespace\n  - name: POD_IP\n    valueFrom:\n      fieldRef:\n        fieldPath: status.podIP\n  - name: NODE_NAME\n    valueFrom:\n      fieldRef:\n        fieldPath: spec.nodeName\n  - name: POD_SERVICE_ACCOUNT\n    valueFrom:\n      fieldRef:\n        fieldPath: spec.serviceAccountName\n")))}N.isMDXComponent=!0}}]);