"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[19789],{49613:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return m}});var t=r(59496);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function u(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=t.createContext({}),i=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):u(u({},n),e)),r},s=function(e){var n=i(e.components);return t.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=i(r),m=o,k=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return r?t.createElement(k,u(u({ref:n},s),{},{components:r})):t.createElement(k,u({ref:n},s))}));function m(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,u=new Array(a);u[0]=p;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,u[1]=l;for(var i=2;i<a;i++)u[i]=r[i];return t.createElement.apply(null,u)}return t.createElement.apply(null,r)}p.displayName="MDXCreateElement"},78192:function(e,n,r){r.r(n),r.d(n,{assets:function(){return f},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return p},metadata:function(){return k},toc:function(){return N}});var t=r(49613),o=Object.defineProperty,a=Object.defineProperties,u=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,s=(e,n,r)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[n]=r,d=(e,n)=>{for(var r in n||(n={}))c.call(n,r)&&s(e,r,n[r]);if(l)for(var r of l(n))i.call(n,r)&&s(e,r,n[r]);return e};const p={title:"Drone Runner"},m="drone runner",k={unversionedId:"service/forge/drone/drone-runner",id:"service/forge/drone/drone-runner",title:"Drone Runner",description:"- exec runner \u76ee\u524d\u7528\u4e0d\u4e86 - \u65e0\u6cd5\u6ce8\u5165 git cred",source:"@site/../notes/service/forge/drone/drone-runner.md",sourceDirName:"service/forge/drone",slug:"/service/forge/drone/runner",permalink:"/notes/service/forge/drone/runner",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/drone/drone-runner.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1675652392,formattedLastUpdatedAt:"Feb 6, 2023",frontMatter:{title:"Drone Runner"},sidebar:"docs",previous:{title:"Drone Pipeline",permalink:"/notes/service/forge/drone/pipeline"},next:{title:"Forge Awesome",permalink:"/notes/service/forge/awesome"}},f={},N=[{value:"exec runner",id:"exec-runner",level:2},{value:"docker runner",id:"docker-runner",level:2},{value:"kubernates runner",id:"kubernates-runner",level:2}],b={toc:N};function g(e){var n,r=e,{components:o}=r,s=((e,n)=>{var r={};for(var t in e)c.call(e,t)&&n.indexOf(t)<0&&(r[t]=e[t]);if(null!=e&&l)for(var t of l(e))n.indexOf(t)<0&&i.call(e,t)&&(r[t]=e[t]);return r})(r,["components"]);return(0,t.kt)("wrapper",(n=d(d({},b),s),a(n,u({components:o,mdxType:"MDXLayout"}))),(0,t.kt)("h1",d({},{id:"drone-runner"}),"drone runner"),(0,t.kt)("admonition",d({},{type:"caution"}),(0,t.kt)("ul",{parentName:"admonition"},(0,t.kt)("li",{parentName:"ul"},"exec runner \u76ee\u524d\u7528\u4e0d\u4e86 - \u65e0\u6cd5\u6ce8\u5165 git cred",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"\u65b0\u7684\u63d2\u4ef6\u57fa\u4e8e container"),(0,t.kt)("li",{parentName:"ul"},"exec \u4e0d\u518d\u7ef4\u62a4\u4e86"))))),(0,t.kt)("h2",d({},{id:"exec-runner"}),"exec runner"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"/etc/drone-runner-exec/config"),(0,t.kt)("li",{parentName:"ul"},"~/.drone-runner-exec/config"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://github.com/drone-runners/drone-runner-exec"}),"drone-runners/drone-runner-exec")," \u5df2\u7ecf\u88ab\u5f52\u6863")),(0,t.kt)("pre",null,(0,t.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"curl -L https://github.com/drone-runners/drone-runner-exec/releases/latest/download/drone_runner_exec_linux_amd64.tar.gz | tar zx\nsudo install -t /usr/local/bin drone-runner-exec\n")),(0,t.kt)("pre",null,(0,t.kt)("code",d({parentName:"pre"},{className:"language-ini"}),"DRONE_RPC_PROTO=https\nDRONE_RPC_HOST=drone.company.com\nDRONE_RPC_SECRET=super-duper-secret\nDRONE_LOG_FILE=/var/log/drone-runner-exec/log.txt\n")),(0,t.kt)("p",null,"\u914d\u7f6e UI \u540e\u53ef\u8bbf\u95ee runner \u7684\u754c\u9762\uff0c :3000"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"DRONE_UI_USERNAME=root"),(0,t.kt)("li",{parentName:"ul"},"DRONE_UI_PASSWORD=root")),(0,t.kt)("pre",null,(0,t.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"# daemon \u524d\u53f0\u8fd0\u884c\ndrone-runner-exec daemon /etc/drone-runner-exec/config\n\nDRONE_DEBUG=true drone-runner-exec service run --config /etc/drone-runner-exec/config\n\n# \u670d\u52a1\u6a21\u5f0f - \u540e\u53f0\ndrone-runner-exec service install # \u4e0d\u662f OpenRC /etc/init.d/drone-runner-exec\ndrone-runner-exec service start   # service run\n")),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",d({parentName:"tr"},{align:null}),"var"),(0,t.kt)("th",d({parentName:"tr"},{align:null}),"e.g."))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",d({parentName:"tr"},{align:null}),"DRONE_RUNNER_ROOT"),(0,t.kt)("td",d({parentName:"tr"},{align:null}),"/tmp")))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://docs.drone.io/runner/exec/configuration/reference/"}),"https://docs.drone.io/runner/exec/configuration/reference/")),(0,t.kt)("li",{parentName:"ul"},"\u6ce8\u518c\u7684 Webhook ",(0,t.kt)("inlineCode",{parentName:"li"},"https://drone.dev.zhang66.cn/hook?secret="))),(0,t.kt)("h2",d({},{id:"docker-runner"}),"docker runner"),(0,t.kt)("pre",null,(0,t.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"docker run --detach \\\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\\n  --env=DRONE_RPC_PROTO=https \\\n  --env=DRONE_RPC_HOST=drone.company.com \\\n  --env=DRONE_RPC_SECRET=super-duper-secret \\\n  --env=DRONE_RUNNER_CAPACITY=2 \\\n  --env=DRONE_RUNNER_NAME=first-runner \\\n  --publish=3000:3000 \\\n  --restart=always \\\n  --name=runner \\\n  drone/drone-runner-docker:1\n\ndocker run --rm -it \\\n  --volume=/var/run/docker.sock:/var/run/docker.sock \\\n  --env-file=config \\\n  --publish=3000:3000 \\\n  --name=drone-runner drone/drone-runner-docker:1\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"DRONE_RUNNER_CLONE_IMAGE=docker/git:1",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"clone \u5230 /drone/src/.git/"))),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://docs.drone.io/runner/docker/configuration/reference/"}),"https://docs.drone.io/runner/docker/configuration/reference/")),(0,t.kt)("li",{parentName:"ul"},"DRONE_RUNNER_VOLUMES")),(0,t.kt)("pre",null,(0,t.kt)("code",d({parentName:"pre"},{className:"language-bash"}),'if [ ! -z "${DRONE_NETRC_FILE}" ]; then\n    echo $DRONE_NETRC_FILE > $HOME/.netrc\n    chmod 600 $HOME/.netrc\nfi\nunset DRONE_SCRIPT\nunset DRONE_NETRC_MACHINE\nunset DRONE_NETRC_USERNAME\nunset DRONE_NETRC_PASSWORD\nunset DRONE_NETRC_FILE\nset -e\n')),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://github.com/drone-runners/drone-runner-docker/blob/7e9969423c0883c0300c974bbb7583e3d9ece875/engine/compiler/shell/shell.go#L37-L50"}),"https://github.com/drone-runners/drone-runner-docker/blob/7e9969423c0883c0300c974bbb7583e3d9ece875/engine/compiler/shell/shell.go#L37-L50")),(0,t.kt)("li",{parentName:"ul"},"DRONE_BUILD_DEBUG=true",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"\u4f1a\u8bbe\u7f6e DRONE_TMATE_HOST")))),(0,t.kt)("h2",d({},{id:"kubernates-runner"}),"kubernates runner"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://github.com/drone-runners/drone-runner-kube"}),"drone-runners/drone-runner-kube")),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://github.com/drone-runners/drone-runner-kube/blob/master/command/daemon/config.go"}),"https://github.com/drone-runners/drone-runner-kube/blob/master/command/daemon/config.go"))),(0,t.kt)("pre",null,(0,t.kt)("code",d({parentName:"pre"},{className:"language-bash"}),"docker run --rm -it \\\n  --name=drone-runner-kube drone/drone-runner-kube\n")),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("a",d({parentName:"li"},{href:"https://docs.drone.io/runner/kubernetes/installation/"}),"https://docs.drone.io/runner/kubernetes/installation/"))))}g.isMDXComponent=!0}}]);