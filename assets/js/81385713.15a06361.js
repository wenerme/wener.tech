"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[1737],{49613:function(e,r,t){t.d(r,{Zo:function(){return u},kt:function(){return d}});var n=t(59496);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var k=n.createContext({}),c=function(e){var r=n.useContext(k),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(k.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,k=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,m=p["".concat(k,".").concat(d)]||p[d]||s[d]||o;return t?n.createElement(m,i(i({ref:r},u),{},{components:t})):n.createElement(m,i({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var k in r)hasOwnProperty.call(r,k)&&(l[k]=r[k]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},42473:function(e,r,t){t.r(r),t.d(r,{assets:function(){return u},contentTitle:function(){return k},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var n=t(96600),a=t(27279),o=(t(59496),t(49613)),i=["components"],l={title:"krakend"},k="krakend",c={unversionedId:"devops/service/krakend",id:"devops/service/krakend",title:"krakend",description:"- krakendio/krakend-ce",source:"@site/../notes/devops/service/krakend.md",sourceDirName:"devops/service",slug:"/devops/service/krakend",permalink:"/notes/devops/service/krakend",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/../notes/devops/service/krakend.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1663838677,formattedLastUpdatedAt:"Sep 22, 2022",frontMatter:{title:"krakend"},sidebar:"docs",previous:{title:"Istio",permalink:"/notes/devops/service/istio"},next:{title:"Kuma",permalink:"/notes/devops/service/kuma"}},u={},s=[{value:"Lura vs KrakenD",id:"lura-vs-krakend",level:2}],p={toc:s};function d(e){var r=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"krakend"},"krakend"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/krakendio/krakend-ce"},"krakendio/krakend-ce"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Apache-2.0, Go"))),(0,o.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.krakend.io/docs/benchmarks/"},"https://www.krakend.io/docs/benchmarks/"))))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# https://github.com/krakendio/krakend-playground\ndocker run --rm -it \\\n  -p 8080:8080 \\\n  -v $PWD:/etc/krakend/ \\\n  devopsfaith/krakend run --config /etc/krakend/krakend.json\n\n# macOS\nbrew install krakend\n")),(0,o.kt)("h1",{id:"faq"},"FAQ"),(0,o.kt)("h2",{id:"lura-vs-krakend"},"Lura vs KrakenD"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Lura is the KrakenD\u2019s engine - \u4e4b\u524d\u53eb KrakenD framework"),(0,o.kt)("li",{parentName:"ul"},"lura is toolkit/set of libraries to build API gateways"),(0,o.kt)("li",{parentName:"ul"},"KrakenD CE - \u5f00\u6e90 API Gateway"),(0,o.kt)("li",{parentName:"ul"},"KrakenD Enterprise")),(0,o.kt)("hr",null),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.krakend.io/docs/overview/lura-vs-krakend/"},"https://www.krakend.io/docs/overview/lura-vs-krakend/"))))}d.isMDXComponent=!0}}]);