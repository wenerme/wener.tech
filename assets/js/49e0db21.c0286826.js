/*! For license information please see 49e0db21.c0286826.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[83865],{63780:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var r=t(2488),i=t(62780);const s={title:"Gitea Runner"},a="Gitea Runner",o={id:"service/forge/gitea/gitea-runner",title:"Gitea Runner",description:"- gitea/actrunner",source:"@site/../notes/service/forge/gitea/gitea-runner.md",sourceDirName:"service/forge/gitea",slug:"/service/forge/gitea/runner",permalink:"/notes/service/forge/gitea/runner",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/gitea/gitea-runner.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1699003495,formattedLastUpdatedAt:"Nov 3, 2023",frontMatter:{title:"Gitea Runner"},sidebar:"docs",previous:{title:"Package",permalink:"/notes/service/forge/gitea/package"},next:{title:"Gitea Version",permalink:"/notes/service/forge/gitea/version"}},c={},l=[{value:"cache",id:"cache",level:2},{value:"Docker",id:"docker",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"gitea-runner",children:"Gitea Runner"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://gitea.com/gitea/act_runner",children:"gitea/act_runner"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u57fa\u4e8e ",(0,r.jsx)(n.a,{href:"/notes/service/forge/act",children:"act"})]}),"\n",(0,r.jsx)(n.li,{children:"\u7c7b\u4f3c github action"}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://hub.docker.com/r/gitea/act_runner/tags",children:"https://hub.docker.com/r/gitea/act_runner/tags"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"/root/.cache/act/"})}),"\n",(0,r.jsxs)(n.li,{children:["\u53c2\u8003\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u4e0b\u8f7d ",(0,r.jsx)(n.a,{href:"https://dl.gitea.com/act_runner/",children:"https://dl.gitea.com/act_runner/"})]}),"\n",(0,r.jsxs)(n.li,{children:["Docs ",(0,r.jsx)(n.a,{href:"https://docs.gitea.io/en-us/usage/usage/actions/act-runner/",children:"https://docs.gitea.io/en-us/usage/usage/actions/act-runner/"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/vegardit/docker-gitea-act-runner",children:"vegardit/docker-gitea-act-runner"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u624b\u52a8\u89e6\u53d1 ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/issues/23668",children:"#23668"})]}),"\n",(0,r.jsxs)(n.li,{children:["concurrency ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/issues/24769",children:"#24769"})]}),"\n",(0,r.jsxs)(n.li,{children:["cron ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/pull/22751",children:"gitea#22751"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u53d8\u91cf\u800c\u4e0d\u662f\u5bc6\u94a5 ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/issues/23763",children:"#23763"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u65e5\u5fd7\u6e05\u7406 ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/issues/24256",children:"#24256"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u57fa\u4e8e Job \u7684 Token ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/issues/23642",children:"#23642"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"docker login -u ${{github.repository_owner}} -p $GITEA_TOKEN"})}),"\n",(0,r.jsx)(n.li,{children:"github.actor"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\u5916\u90e8 ",(0,r.jsx)(n.a,{href:"https://github.com/go-gitea/gitea/issues/24454",children:"#24454"})]}),"\n"]})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u914d\u7f6e Gitea"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",metastring:'title="app.ini"',children:"[actions]\nENABLED=true\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"https://gitea.example.com/admin/runners"})," \u83b7\u53d6 Token"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run --rm -it --entrypoint bash gitea/act_runner:nightly\n\nact_runner generate-config > config.yaml\n\n./act_runner register --instance http://192.168.8.8:3000 --token $TOKEN --no-interactive\n\ndocker run --rm -it \\\n  -e GITEA_INSTANCE_URL=http://192.168.8.18:3000 \\\n  -e GITEA_RUNNER_REGISTRATION_TOKEN=$TOKEN \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v $PWD/data:/data \\\n  --name my_runner gitea/act_runner:nightly\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u9ed8\u8ba4\u7f13\u5b58\u4f4d\u7f6e ~/.cache/actcache/"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"log:\n  # The level of logging, can be trace, debug, info, warn, error, fatal\n  level: info\n\nrunner:\n  # Where to store the registration result.\n  file: .runner\n  # Execute how many tasks concurrently at the same time.\n  capacity: 1\n  # Extra environment variables to run jobs.\n  envs:\n    A_TEST_ENV_NAME_1: a_test_env_value_1\n    A_TEST_ENV_NAME_2: a_test_env_value_2\n  # Extra environment variables to run jobs from a file.\n  # It will be ignored if it's empty or the file doesn't exist.\n  env_file: .env\n  # The timeout for a job to be finished.\n  # Please note that the Gitea instance also has a timeout (3h by default) for the job.\n  # So the job could be stopped by the Gitea instance if it's timeout is shorter than this.\n  timeout: 3h\n  # Whether skip verifying the TLS certificate of the Gitea instance.\n  insecure: false\n  # The timeout for fetching the job from the Gitea instance.\n  fetch_timeout: 5s\n  # The interval for fetching the job from the Gitea instance.\n  fetch_interval: 2s\n\ncache:\n  # Enable cache server to use actions/cache.\n  enabled: true\n  # The directory to store the cache data.\n  # If it's empty, the cache data will be stored in $HOME/.cache/actcache.\n  dir: ''\n  # The host of the cache server.\n  # It's not for the address to listen, but the address to connect from job containers.\n  # So 0.0.0.0 is a bad choice, leave it empty to detect automatically.\n  host: ''\n  # The port of the cache server.\n  # 0 means to use a random available port.\n  port: 0\n\ncontainer:\n  # Which network to use for the job containers. Could be bridge, host, none, or the name of a custom network.\n  network_mode: bridge\n  # Whether to use privileged mode or not when launching task containers (privileged mode is required for Docker-in-Docker).\n  privileged: false\n  # And other options to be used when the container is started (eg, --add-host=my.gitea.url:host-gateway).\n  options:\n  # The parent directory of a job's working directory.\n  # If it's empty, /workspace will be used.\n  workdir_parent:\n"})}),"\n",(0,r.jsx)(n.h2,{id:"cache",children:"cache"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.gitea.com/next/usage/actions/act-runner",children:"https://docs.gitea.com/next/usage/actions/act-runner"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"docker",children:"Docker"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"/root/.cache/act"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u9ed8\u8ba4 entrypoint"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/usr/bin/env bash\n\nif [[ ! -d /data ]]; then\n  mkdir -p /data\nfi\n\ncd /data\n\nCONFIG_ARG=""\nif [[ ! -z "${CONFIG_FILE}" ]]; then\n  CONFIG_ARG="--config ${CONFIG_FILE}"\nfi\n\n# Use the same ENV variable names as https://github.com/vegardit/docker-gitea-act-runner\n\nif [[ ! -s .runner ]]; then\n  try=$((try + 1))\n  success=0\n\n  # The point of this loop is to make it simple, when running both act_runner and gitea in docker,\n  # for the act_runner to wait a moment for gitea to become available before erroring out.  Within\n  # the context of a single docker-compose, something similar could be done via healthchecks, but\n  # this is more flexible.\n  while [[ $success -eq 0 ]] && [[ $try -lt ${GITEA_MAX_REG_ATTEMPTS:-10} ]]; do\n    act_runner register \\\n      --instance "${GITEA_INSTANCE_URL}" \\\n      --token "${GITEA_RUNNER_REGISTRATION_TOKEN}" \\\n      --name "${GITEA_RUNNER_NAME:-$(hostname)}" \\\n      --labels "${GITEA_RUNNER_LABELS}" \\\n      ${CONFIG_ARG} --no-interactive > /tmp/reg.log 2>&1\n\n    cat /tmp/reg.log\n\n    cat /tmp/reg.log | grep \'Runner registered successfully\' > /dev/null\n    if [[ $? -eq 0 ]]; then\n      echo "SUCCESS"\n      success=1\n    else\n      echo "Waiting to retry ..."\n      sleep 5\n    fi\n  done\nfi\n# Prevent reading the token from the act_runner process\nunset GITEA_RUNNER_REGISTRATION_TOKEN\n\nact_runner daemon ${CONFIG_ARG}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="/data/.runner"',children:'{\n  "WARNING": "This file is automatically generated by act-runner. Do not edit it manually unless you know what you are doing. Removing this file will cause act runner to re-register as a new runner.",\n  "id": 1,\n  "uuid": "",\n  "name": "gitea-runner-0",\n  "token": "",\n  "address": "http://gitea",\n  "labels": [\n    "ubuntu-latest:docker://node:16-bullseye",\n    "ubuntu-22.04:docker://node:16-bullseye",\n    "ubuntu-20.04:docker://node:16-bullseye",\n    "ubuntu-18.04:docker://node:16-buster"\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GITEA_RUNNER_LABELS=ubuntu-latest:docker://node:16-bullseye,ubuntu-22.04:docker://node:16-bullseye,ubuntu-20.04:docker://node:16-bullseye,ubuntu-18.04:docker://node:16-buster\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GITEA_RUNNER_LABELS=ubuntu-latest:docker://wener/node:18,alpine-latest:docker://wener/node:18,alpine-exec:host\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/nektos/act/blob/master/IMAGES.md",children:"https://github.com/nektos/act/blob/master/IMAGES.md"})}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"cloning https://gitea.com/actions/setup-node to /root/.cache/act/actions-setup-node@v3\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://gitea.com/actions",children:"https://gitea.com/actions"})}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,i.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},38088:(e,n,t)=>{var r=t(96651),i=Symbol.for("react.element"),s=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,o=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var r,s={},l=null,h=null;for(r in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(h=n.ref),n)a.call(n,r)&&!c.hasOwnProperty(r)&&(s[r]=n[r]);if(e&&e.defaultProps)for(r in n=e.defaultProps)void 0===s[r]&&(s[r]=n[r]);return{$$typeof:i,type:e,key:l,ref:h,props:s,_owner:o.current}}n.Fragment=s,n.jsx=l,n.jsxs=l},2488:(e,n,t)=>{e.exports=t(38088)},62780:(e,n,t)=>{t.d(n,{I:()=>o,M:()=>a});var r=t(96651);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);