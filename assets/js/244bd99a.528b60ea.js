"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[8739],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(67294);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var l=r.createContext({}),u=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,c=e.mdxType,o=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),f=u(t),m=c,d=f["".concat(l,".").concat(m)]||f[m]||p[m]||o;return t?r.createElement(d,a(a({ref:n},s),{},{components:t})):r.createElement(d,a({ref:n},s))}));function m(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var o=t.length,a=new Array(o);a[0]=f;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:c,a[1]=i;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},58353:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=t(87462),c=t(63366),o=(t(67294),t(3905)),a=["components"],i={title:"C Build"},l=void 0,u={unversionedId:"languages/c/c-build",id:"languages/c/c-build",title:"C Build",description:"\u7f16\u8bd1\u8fc7\u7a0b",source:"@site/notes/languages/c/c-build.md",sourceDirName:"languages/c",slug:"/languages/c/c-build",permalink:"/notes/languages/c/c-build",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/languages/c/c-build.md",tags:[],version:"current",frontMatter:{title:"C Build"},sidebar:"docs",previous:{title:"C Awesome",permalink:"/notes/languages/c/c-awesome"},next:{title:"C Cookbook",permalink:"/notes/languages/c/c-cookbook"}},s={},p=[{value:"\u7f16\u8bd1\u8fc7\u7a0b",id:"\u7f16\u8bd1\u8fc7\u7a0b",level:2}],f={toc:p};function m(e){var n=e.components,t=(0,c.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"gcc main.c -static\n\n\necho 'int main(){}' > test.c\ngcc -o test test.c\nfile test\n\nCC=arm-linux-gnueabi-gcc\necho 'int main(){}' > test.c\n# ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), statically linked, for GNU/Linux 3.2.0, BuildID[sha1]=a839e1b10daec5d9c348eef8854bb271f8097d34, not stripped\n# \u6ce8\u610f GNU/Linux 3.2.0\n$CC -o test test.c\nfile test\n")),(0,o.kt)("h2",{id:"\u7f16\u8bd1\u8fc7\u7a0b"},"\u7f16\u8bd1\u8fc7\u7a0b"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"          |\n          |----\x3e  Input is Source file(.c)\n          |\n          V\n+=================+\n|                 |\n| C Preprocessor  |\n|                 |\n+=================+\n          |\n          | ---\x3e Pure C file ( comd:cc -E <file.name> )\n          |\n          V\n+=================+\n|                 |\n| Lexical Analyzer|\n|                 |\n+-----------------+\n|                 |\n| Syntax Analyzer |\n|                 |\n+-----------------+\n|                 |\n| Semantic Analyze|\n|                 |\n+-----------------+\n|                 |\n| Pre Optimization|\n|                 |\n+-----------------+\n|                 |\n| Code generation |\n|                 |\n+-----------------+\n|                 |\n| Post Optimize   |\n|                 |\n+=================+\n          |\n          |---\x3e  Assembly code (comd: cc -S <file.name> )\n          |\n          V\n+=================+\n|                 |\n|   Assembler     |\n|                 |\n+=================+\n          |\n          |---\x3e  Object file (.obj) (comd: cc -c <file.name>)\n          |\n          V\n+=================+\n|     Linker      |\n|      and        |\n|     loader      |\n+=================+\n          |\n          |---\x3e  Executable (.Exe/a.out) (com:cc <file.name> )\n          |\n          V\nExecutable file(a.out)\n")))}m.isMDXComponent=!0}}]);