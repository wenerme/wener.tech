"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[40783],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(67294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var u=r.createContext({}),l=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,u=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),g=l(t),m=s,k=g["".concat(u,".").concat(m)]||g[m]||c[m]||a;return t?r.createElement(k,i(i({ref:n},p),{},{components:t})):r.createElement(k,i({ref:n},p))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,i=new Array(a);i[0]=g;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o.mdxType="string"==typeof e?e:s,i[1]=o;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},73562:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return l},toc:function(){return p},default:function(){return g}});var r=t(22122),s=t(19756),a=(t(67294),t(3905)),i=["components"],o={title:"Nginx Ingress \u5e38\u89c1\u95ee\u9898"},u=void 0,l={unversionedId:"devops/kubernetes/network/nginx-ingress-faq",id:"devops/kubernetes/network/nginx-ingress-faq",isDocsHomePage:!1,title:"Nginx Ingress \u5e38\u89c1\u95ee\u9898",description:"\u6cdb\u57df\u540d Host \u8def\u7531",source:"@site/notes/devops/kubernetes/network/nginx-ingress-faq.md",sourceDirName:"devops/kubernetes/network",slug:"/devops/kubernetes/network/nginx-ingress-faq",permalink:"/notes/devops/kubernetes/network/nginx-ingress-faq",editUrl:"https://github.com/wenerme/wener/edit/master/notes/devops/kubernetes/network/nginx-ingress-faq.md",version:"current",frontMatter:{title:"Nginx Ingress \u5e38\u89c1\u95ee\u9898"},sidebar:"docs",previous:{title:"Nginx Ingress",permalink:"/notes/devops/kubernetes/network/nginx-ingress"},next:{title:"Traefik Ingress",permalink:"/notes/devops/kubernetes/network/traefik-ingress"}},p=[{value:"\u6cdb\u57df\u540d Host \u8def\u7531",id:"\u6cdb\u57df\u540d-host-\u8def\u7531",children:[]},{value:"\u6b63\u5219\u8def\u5f84\u5339\u914d",id:"\u6b63\u5219\u8def\u5f84\u5339\u914d",children:[]},{value:"SSL Passthrough",id:"ssl-passthrough",children:[]},{value:"HTTPS SNI \u8def\u7531",id:"https-sni-\u8def\u7531",children:[]}],c={toc:p};function g(e){var n=e.components,t=(0,s.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u6cdb\u57df\u540d-host-\u8def\u7531"},"\u6cdb\u57df\u540d Host \u8def\u7531"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"annotations:\n  # \u53ea\u652f\u6301\u4e00\u6761 rule - \u53ef\u8003\u8651\u62c6\u5206 ingress\n  nginx.ingress.kubernetes.io/server-alias: '*.my-company.com'\n  #ingress.kubernetes.io/server-alias: '*.my-company.com'\n")),(0,a.kt)("h2",{id:"\u6b63\u5219\u8def\u5f84\u5339\u914d"},"\u6b63\u5219\u8def\u5f84\u5339\u914d"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1beta1\nkind: Ingress\nmetadata:\n  name: test-ingress\n  annotations:\n    nginx.ingress.kubernetes.io/use-regex: 'true'\nspec:\n  rules:\n    - host: test.com\n      http:\n        paths:\n          - path: /foo/.*\n            backend:\n              serviceName: test\n              servicePort: 80\n")),(0,a.kt)("h2",{id:"ssl-passthrough"},"SSL Passthrough"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u5173\u95ed - ",(0,a.kt)("inlineCode",{parentName:"li"},"--enable-ssl-passthrough")),(0,a.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u62e6\u622a 443 \u7aef\u53e3\u5230\u672c\u5730 TCP \u4ee3\u7406, bypass NGINX, \u6027\u80fd\u5f71\u54cd\u5f88\u5927",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u672c\u5730\u4ee3\u7406\u7aef\u53e3 442"),(0,a.kt)("li",{parentName:"ul"},"\u5982\u679c hostname \u672a\u88ab\u5904\u7406\u5219\u53c8\u4ea4\u7531 NGINX \u5904\u7406"))),(0,a.kt)("li",{parentName:"ul"},"\u900f\u4f20\u662f\u53d1\u9001\u5230 service \u800c\u4e0d\u662f\u72ec\u7acb\u7684 endpoint"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/ingress-nginx/issues/5686"},"#5686")," - \u53ef\u80fd\u5f00\u542f\u4e86\u4e5f\u4e0d\u751f\u6548")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# HELM values\ncontroller:\n  extraArgs:\n    enable-ssl-passthrough: true\n")),(0,a.kt)("h2",{id:"https-sni-\u8def\u7531"},"HTTPS SNI \u8def\u7531"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"# \u76f8\u5173\u914d\u7f6e\n# https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#backend-certificate-authentication\nannotations:\n  # \u4fee\u6539 SNI\n  nginx.ingress.kubernetes.io/proxy-ssl-name: wener.me\n  nginx.ingress.kubernetes.io/proxy-ssl-protocols: HTTPS\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/kubernetes/kubernetes/issues/19333"},"kubernetes/kubernetes#19333")," - HTTPS Ingress controller for SNI based routing"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/#ssl-passthrough"},"ssl-passthrough"))))))}g.isMDXComponent=!0}}]);