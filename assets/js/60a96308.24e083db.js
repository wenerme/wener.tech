"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[68691],{49613:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),i=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=i(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(r),g=a,m=d["".concat(p,".").concat(g)]||d[g]||c[g]||o;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,l[1]=s;for(var i=2;i<o;i++)l[i]=r[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},98868:function(e,t,r){r.r(t),r.d(t,{assets:function(){return f},contentTitle:function(){return g},default:function(){return v},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return b}});var n=r(49613),a=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&u(e,r,t[r]);if(s)for(var r of s(t))i.call(t,r)&&u(e,r,t[r]);return e};const d={title:"PostgreSQL Upgrade"},g="PostgreSQL Upgrade",m={unversionedId:"db/relational/postgresql/postgresql-upgrade",id:"db/relational/postgresql/postgresql-upgrade",title:"PostgreSQL Upgrade",description:"- pg_upgrade",source:"@site/../notes/db/relational/postgresql/postgresql-upgrade.md",sourceDirName:"db/relational/postgresql",slug:"/db/relational/postgresql/upgrade",permalink:"/notes/db/relational/postgresql/upgrade",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/db/relational/postgresql/postgresql-upgrade.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1652772118,formattedLastUpdatedAt:"May 17, 2022",frontMatter:{title:"PostgreSQL Upgrade"},sidebar:"docs",previous:{title:"PostgreSQL Tenant",permalink:"/notes/db/relational/postgresql/tenant"},next:{title:"\u7248\u672c\u5386\u53f2",permalink:"/notes/db/relational/postgresql/version"}},f={},b=[{value:"over docker",id:"over-docker",level:2},{value:"There seems to be a postmaster servicing the old cluster.",id:"there-seems-to-be-a-postmaster-servicing-the-old-cluster",level:2}],k={toc:b};function v(e){var t,r=e,{components:a}=r,u=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&s)for(var n of s(e))t.indexOf(n)<0&&i.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=c(c({},k),u),o(t,l({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",c({},{id:"postgresql-upgrade"}),"PostgreSQL Upgrade"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://www.postgresql.org/docs/current/pgupgrade.html"}),"pg_upgrade"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"-c,--check - \u53ea\u68c0\u6d4b"),(0,n.kt)("li",{parentName:"ul"},"-k,--link - hard link, \u907f\u514d\u590d\u5236"),(0,n.kt)("li",{parentName:"ul"},"--clone - \u4f7f\u7528 reflinks - macOS APFS, Linux 4.5+ Btrfs XFS",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"zfs support --reflink ",(0,n.kt)("a",c({parentName:"li"},{href:"https://github.com/openzfs/zfs/issues/405"}),"#405"))))))),(0,n.kt)("admonition",c({},{type:"tip"}),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"\u5347\u7ea7\u540e\u6ce8\u610f\u540c\u6b65 pg_hba.conf \u548c postgres.conf"))),(0,n.kt)("h2",c({},{id:"over-docker"}),"over docker"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",c({parentName:"li"},{href:"https://github.com/tianon/docker-postgres-upgrade"}),"tianon/docker-postgres-upgrade")),(0,n.kt)("li",{parentName:"ul"},"/var/lib/postgresql",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"OLD/data"),(0,n.kt)("li",{parentName:"ul"},"NEW/data")))),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"docker run --rm \\\n    -v DIR:/var/lib/postgresql \\\n    tianon/postgres-upgrade:OLD-to-NEW \\\n    --link\n\ndocker run --rm \\\n    -v PGDATAOLD:/var/lib/postgresql/OLD/data \\\n    -v PGDATANEW:/var/lib/postgresql/NEW/data \\\n    tianon/postgres-upgrade:OLD-to-NEW\n")),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),"Optimizer statistics are not transferred by pg_upgrade so,\nonce you start the new server, consider running:\n    ./analyze_new_cluster.sh\n\nRunning this script will delete the old cluster's data files:\n    ./delete_old_cluster.sh\n")),(0,n.kt)("h1",c({},{id:"faq"}),"FAQ"),(0,n.kt)("h2",c({},{id:"there-seems-to-be-a-postmaster-servicing-the-old-cluster"}),"There seems to be a postmaster servicing the old cluster."),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),"There seems to be a postmaster servicing the old cluster.\nPlease shutdown that postmaster and try again.\nFailure, exiting\n")),(0,n.kt)("p",null,"\u65e7 server \u5f3a\u5236\u5173\u95ed\u5bfc\u81f4\u7684\u5f02\u5e38\u3002\n\u91cd\u542f\u670d\u52a1\uff0c\u7136\u540e ",(0,n.kt)("inlineCode",{parentName:"p"},"pg_ctl stop")),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"docker exec -it -u postgres postgres pg_ctl stop\n")))}v.isMDXComponent=!0}}]);