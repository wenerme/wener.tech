"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[23303],{49613:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(59496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),u=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(i.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return t?r.createElement(f,s(s({ref:n},l),{},{components:t})):r.createElement(f,s({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},355:function(e,n,t){t.r(n),t.d(n,{assets:function(){return v},contentTitle:function(){return m},default:function(){return y},frontMatter:function(){return d},metadata:function(){return f},toc:function(){return b}});var r=t(49613),a=Object.defineProperty,o=Object.defineProperties,s=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,l=(e,n,t)=>n in e?a(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,p=(e,n)=>{for(var t in n||(n={}))i.call(n,t)&&l(e,t,n[t]);if(c)for(var t of c(n))u.call(n,t)&&l(e,t,n[t]);return e};const d={title:"nats-server"},m="nats-server",f={unversionedId:"queue/nats/nats-server",id:"queue/nats/nats-server",title:"nats-server",description:"- /etc/nats/nats-server.conf",source:"@site/../notes/queue/nats/nats-server.md",sourceDirName:"queue/nats",slug:"/queue/nats/server",permalink:"/notes/queue/nats/server",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/queue/nats/nats-server.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1675953425,formattedLastUpdatedAt:"Feb 9, 2023",frontMatter:{title:"nats-server"},sidebar:"docs",previous:{title:"Nats on K8S",permalink:"/notes/queue/nats/k8s"},next:{title:"Nats Version",permalink:"/notes/queue/nats/version"}},v={},b=[{value:"jwt seutp",id:"jwt-seutp",level:2},{value:"Account fetch failed: fetching jwt timed out",id:"account-fetch-failed-fetching-jwt-timed-out",level:2},{value:"system_account in config and operator JWT must be identical",id:"system_account-in-config-and-operator-jwt-must-be-identical",level:2},{value:"no nkey seed found",id:"no-nkey-seed-found",level:2},{value:"using nats based account resolver - the system account needs to be specified in configuration or the operator jwt",id:"using-nats-based-account-resolver---the-system-account-needs-to-be-specified-in-configuration-or-the-operator-jwt",level:2},{value:"JetStream not enabled for account (10039)",id:"jetstream-not-enabled-for-account-10039",level:2}],g={toc:b};function y(e){var n,t=e,{components:a}=t,l=((e,n)=>{var t={};for(var r in e)i.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&c)for(var r of c(e))n.indexOf(r)<0&&u.call(e,r)&&(t[r]=e[r]);return t})(t,["components"]);return(0,r.kt)("wrapper",(n=p(p({},g),l),o(n,s({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",p({},{id:"nats-server"}),"nats-server"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"brew install nats-server\n\n# http://127.0.0.1:8222/\nnats-server -js -sd $PWD/jetstream-store -m 8222\n\nnats-server --signal reload\n")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),"port: 4222\nmonitor_port: 8222\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"/etc/nats/nats-server.conf"),(0,r.kt)("li",{parentName:"ul"},"$var",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u5728\u914d\u7f6e\u91cc\u5b9a\u4e49"),(0,r.kt)("li",{parentName:"ul"},"\u53ef\u4f7f\u7528 \u73af\u5883\u53d8\u91cf")))),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-hcl"}),'# \u8fde\u63a5\u914d\u7f6e\nhost: 0.0.0.0\nport: 4222\nlisten: "$host:$port"\n# client_advertise: "$host:$port"\n\n# HTTP monitoring port\nmonitor_port: 8222\n\ntls: {}\ngateway: {}\nleafnode: {}\nmqtt: {}\nwebsocket: {}\n\n# \u8d85\u65f6\u914d\u7f6e\nping_interval: "2m"\nping_max: 2\nwrite_deadline: "10s"\n\n# \u9650\u5236\nmax_connections: 64K\nmax_control_line: 4KB\nmax_payload: 1MB\nmax_pending: 64MB\nmax_subscriptions: 0\n\n# JetStream\njetstream: {\n  store_dir: "/tmp/nats/jetstream"\n  # \u5185\u5b58\u7684 75%\n  # max_memory_store:\n  max_file_store: 1TB\n  # chachapoly, aes\n  # cipher:\n  # 32+\n  # key:\n  max_outstanding_catchup: 32MB\n}\n\nauthorization {\n  # timeout: 3\n\n  # \u540c --auth\n  # nats sub -s nats://s3cr3t@localhost:4222 ">"\n  # \u652f\u6301 bcrypt: nats server passwd\n  token: "s3cr3t"\n\n  # \u5bc6\u7801\u652f\u6301 Bcrypted\n  user: ""\n  password: ""\n  users: [\n        {user: "", password: ""b""}\n  ]\n}\n\naccounts {\n\n}\nno_auth_user:\n\n# \u96c6\u7fa4\u914d\u7f6e\ncluster {\n  # It is recommended to set a cluster name\n  name: "my_cluster"\n\n  # Route connections to be received on any interface on port 6222\n  port: 6222\n\n  # Routes are protected, so need to use them with --routes flag\n  # e.g. --routes=nats-route://ruser:T0pS3cr3t@otherdockerhost:6222\n  authorization {\n    user: ruser\n    password: T0pS3cr3t\n    timeout: 2\n  }\n\n  # Routes are actively solicited and connected to from this server.\n  # This Docker image has none by default, but you can pass a\n  # flag to the nats-server docker image to create one to an existing server.\n  routes = []\n}\n')),(0,r.kt)("h2",p({},{id:"jwt-seutp"}),"jwt seutp"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"alg ed25519-nkey")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"docker run -w /nsc --rm -it -v $PWD/nsc:/nsc natsio/nats-box:latest\n\n# -n operator \u540d\u5b57\n# /nsc/nats/nsc/stores\nnsc init -n nats\n\nnsc generate config --nats-resolver > jwt.conf\n")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{}),'host: 0.0.0.0\nport: 4222\nmonitor_port: 8222\n\njetstream: {\n  store_dir: "./jetstream-store"\n}\n\nwebsocket {\n  port: 9222\n  no_tls: true\n}\n\ninclude ./nsc/jwt.conf\n')),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"# \u6dfb\u52a0\u5b9e\u9645\u4f7f\u7528\u7684 account \u548c user\nnsc add account wener --js-disk-storage 1g\nnsc add user apis\n\n# \u68c0\u67e5\u4fe1\u606f\nnsc list keys\nnsc describe operator\n# nsc edit operator --service-url nats://127.0.0.1:4222\n\n# \u63a8\u9001\u5230 nats\nnsc push -a incs -u nats://127.0.0.1\n\n# \u5ba2\u6237\u7aef\u8fde\u63a5\nnats context add nats --server 127.0.0.1:4222 --select --creds ./nkeys/creds/nats/wener/apis.creds\nnats account info\n")),(0,r.kt)("h1",p({},{id:"faq"}),"FAQ"),(0,r.kt)("h2",p({},{id:"account-fetch-failed-fetching-jwt-timed-out"}),"Account fetch failed: fetching jwt timed out"),(0,r.kt)("p",null,"\u914d\u7f6e resolver.timeout"),(0,r.kt)("h2",p({},{id:"system_account-in-config-and-operator-jwt-must-be-identical"}),"system_account in config and operator JWT must be identical"),(0,r.kt)("p",null,"\u751f\u6210\u914d\u7f6e\u4e0d\u8981\u6307\u5b9a --sys-account,\u9ed8\u8ba4\u4e3a SYS"),(0,r.kt)("h2",p({},{id:"no-nkey-seed-found"}),"no nkey seed found"),(0,r.kt)("h2",p({},{id:"using-nats-based-account-resolver---the-system-account-needs-to-be-specified-in-configuration-or-the-operator-jwt"}),"using nats based account resolver - the system account needs to be specified in configuration or the operator jwt"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"nsc add account -n SYS\nnsc edit operator --system-account SYS\n")),(0,r.kt)("h2",p({},{id:"jetstream-not-enabled-for-account-10039"}),"JetStream not enabled for account (10039)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5fc5\u987b\u8981\u914d\u7f6e js-disk-storage")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"nsc edit account server --js-disk-storage 1g\nnsc describe account server\n")))}y.isMDXComponent=!0}}]);