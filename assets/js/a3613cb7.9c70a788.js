/*! For license information please see a3613cb7.9c70a788.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[55848],{68892:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>_,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var t=s(2488),i=s(62780);const a={title:"PostgreSQL Cookbook",tags:["Cookbook"]},l="PostgreSQL Cookbook",r={id:"db/relational/postgresql/postgresql-cookbook",title:"PostgreSQL Cookbook",description:"- String Functions and Operators",source:"@site/../notes/db/relational/postgresql/postgresql-cookbook.md",sourceDirName:"db/relational/postgresql",slug:"/db/relational/postgresql/cookbook",permalink:"/notes/db/relational/postgresql/cookbook",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/db/relational/postgresql/postgresql-cookbook.md",tags:[{label:"Cookbook",permalink:"/notes/tags/cookbook"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1685296509,formattedLastUpdatedAt:"May 28, 2023",frontMatter:{title:"PostgreSQL Cookbook",tags:["Cookbook"]},sidebar:"docs",previous:{title:"PostgreSQL \u914d\u7f6e",permalink:"/notes/db/relational/postgresql/conf"},next:{title:"\u6570\u636e\u7c7b\u578b",permalink:"/notes/db/relational/postgresql/datatype"}},o={},d=[{value:"json \u6570\u7ec4\u53bb\u91cd",id:"json-\u6570\u7ec4\u53bb\u91cd",level:2},{value:"\u6570\u636e\u8f6c\u6362",id:"\u6570\u636e\u8f6c\u6362",level:2},{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",level:2},{value:"\u7edf\u8ba1",id:"\u7edf\u8ba1",level:2},{value:"\u673a\u5668\u5b66\u4e60",id:"\u673a\u5668\u5b66\u4e60",level:2},{value:"UUID",id:"uuid",level:2},{value:"\u5546\u4e1a",id:"\u5546\u4e1a",level:2},{value:"\u6570\u636e\u8fc1\u79fb",id:"\u6570\u636e\u8fc1\u79fb",level:2},{value:"\u56fe\u64cd\u4f5c",id:"\u56fe\u64cd\u4f5c",level:2},{value:"\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57",id:"\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57",level:3},{value:"null \u5b89\u5168\u7684 json \u63d0\u53d6",id:"null-\u5b89\u5168\u7684-json-\u63d0\u53d6",level:2},{value:"Functions",id:"functions",level:2},{value:"table_size",id:"table_size",level:3},{value:"try_date",id:"try_date",level:3},{value:"tab_sync_id_seq",id:"tab_sync_id_seq",level:3},{value:"\u67e5\u8be2\u5916\u952e\u548c\u7d22\u5f15",id:"\u67e5\u8be2\u5916\u952e\u548c\u7d22\u5f15",level:2},{value:"\u7d22\u5f15\u4f7f\u7528\u60c5\u51b5",id:"\u7d22\u5f15\u4f7f\u7528\u60c5\u51b5",level:2},{value:"Missing FK Index",id:"missing-fk-index",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.M)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"postgresql-cookbook",children:"PostgreSQL Cookbook"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.postgresql.org/docs/current/static/functions-string.html",children:"String Functions and Operators"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://hakibenita.com/postgresql-unknown-features",children:"Lesser Known PostgreSQL Features"})}),"\n",(0,t.jsxs)(e.li,{children:["\u5e38\u7528\u51fd\u6570\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"quote_literal"})," - \u907f\u514d\u6ce8\u5165"]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:'format(formatstr text [, formatarg "any" [, ...] ])'}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"%[position][flags][width]type"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsxs)(e.li,{children:["type\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"s \u7b80\u5355\u5b57\u7b26\u4e32, null \u8f93\u51fa\u7a7a\u5b57\u7b26\u4e32"}),"\n",(0,t.jsxs)(e.li,{children:["I \u4f5c\u4e3a SQL \u7684\u6807\u8bc6\u7b26\u53ef\u80fd\u4f1a\u52a0\u53cc\u5f15\u53f7, \u4e0d\u5141\u8bb8 null, \u7b49\u540c\u4e8e ",(0,t.jsx)(e.code,{children:"quote_ident"})]}),"\n",(0,t.jsxs)(e.li,{children:["L \u4f5c\u4e3a SQL \u4e2d\u7684\u6587\u672c\u5bf9\u5f85\u8fdb\u884c\u52a0\u5f15\u53f7, null \u8f93\u51fa NULL, \u7b49\u540c\u4e8e ",(0,t.jsx)(e.code,{children:"quote_nullable"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.li,{children:"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32"}),"\n",(0,t.jsx)(e.li,{children:"\u6784\u5efa SQL"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \u5305\u542b\u5176\u4ed6\u8868\u7684\u5b9a\u4e49\nCREATE TABLE test_new (LIKE test_old INCLUDING ALL);\n"})}),"\n",(0,t.jsx)(e.h2,{id:"json-\u6570\u7ec4\u53bb\u91cd",children:"json \u6570\u7ec4\u53bb\u91cd"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:'select distinct jsonb_array_elements(v)#>>\'{}\'\nfrom (select \'[\n  "1",\n  "2"\n]\'::jsonb union select \'[\n  "1",\n  "4"\n]\'::jsonb) t(v);\n'})}),"\n",(0,t.jsx)(e.h2,{id:"\u6570\u636e\u8f6c\u6362",children:"\u6570\u636e\u8f6c\u6362"}),"\n",(0,t.jsx)(e.p,{children:"array to rows unset"}),"\n",(0,t.jsx)(e.h2,{id:"\u5b57\u7b26\u4e32",children:"\u5b57\u7b26\u4e32"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"select substring('abcdefgh' from n for 2) from generate_series(1, length( 'abcdefgh' ), 2) n;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u7edf\u8ba1",children:"\u7edf\u8ba1"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://github.com/postgres-plr/plr",children:"https://github.com/postgres-plr/plr"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:"https://www.joeconway.com/presentations/oscon-pres-2003-1.pdf",children:"https://www.joeconway.com/presentations/oscon-pres-2003-1.pdf"}),"\nPostgreSQL-embedded Statistical\nAnalysis with PL/R\nPL/R User\u2019s Guide - R Procedural\nLanguage\n",(0,t.jsx)(e.a,{href:"http://www.joeconway.com/plr/doc/plr-US.pdf",children:"http://www.joeconway.com/plr/doc/plr-US.pdf"})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"http://www.joeconway.com/plr/",children:"http://www.joeconway.com/plr/"})}),"\n",(0,t.jsx)(e.h2,{id:"\u673a\u5668\u5b66\u4e60",children:"\u673a\u5668\u5b66\u4e60"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:"http://madlib.apache.org/",children:"http://madlib.apache.org/"}),"\n",(0,t.jsx)(e.a,{href:"https://wiki.postgresql.org/wiki/Ecosystem:Machine_learning",children:"https://wiki.postgresql.org/wiki/Ecosystem:Machine_learning"})]}),"\n",(0,t.jsx)(e.p,{children:"/usr/local/madlib/bin/madpack -s madlib -p postgres -c [user[/password]@][host][:port][/database] install"}),"\n",(0,t.jsx)(e.p,{children:"MADlib works with Python 2.6 and 2.7. Currently, Python 3.x is not supported."}),"\n",(0,t.jsx)(e.h2,{id:"uuid",children:"UUID"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"CREATE EXTENSION IF NOT EXISTS pgcrypto;\nSELECT gen_random_uuid();\n\nCREATE EXTENSION IF NOT EXISTS uuid-ossp;\nSELECT uuid_generate_v4();\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u5546\u4e1a",children:"\u5546\u4e1a"}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://www.cybertec-postgresql.com/",children:"https://www.cybertec-postgresql.com/"})}),"\n",(0,t.jsx)(e.h2,{id:"\u6570\u636e\u8fc1\u79fb",children:"\u6570\u636e\u8fc1\u79fb"}),"\n",(0,t.jsx)(e.p,{children:"psql source_database -c 'COPY table TO stdout' | psql target_database -c 'COPY table FROM stdin'"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"CREATE DATABASE new_database TEMPLATE original_database;\n\nINSERT INTO t(a, b, c)\nSELECT a, b, c FROM dblink('host=xxx user=xxx password=xxx dbname=xxx', 'SELECT a, b, c FROM t') AS x(a integer, b integer, c integer)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u56fe\u64cd\u4f5c",children:"\u56fe\u64cd\u4f5c"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \u9012\u5f52\u67e5\u627e\u81ea\u5df1\u548c\u6240\u6709\u5b50\u7ea7\nWITH RECURSIVE children(id) AS (\n  SELECT *\n  FROM items\n  WHERE id = 470569\n  UNION ALL\n  SELECT t.*\n  FROM children s, items t\n  WHERE t.parent = s.id\n) SELECT *\n  FROM children;\n\n-- \u9012\u5f52\u67e5\u627e\u81ea\u5df1\u548c\u6240\u6709\u5b50\u7ea7\u5e76\u4f53\u73b0\u5c42\u7ea7\u5173\u7cfb\nWITH RECURSIVE children(id) AS (\n  SELECT\n    *,\n    id || '' AS path\n  FROM items\n  WHERE id = 470569\n  UNION ALL\n  SELECT\n    t.*,\n    s.path || '/' || t.id\n  FROM children s, items t\n  WHERE t.parent = s.id\n) SELECT *\n  FROM children;\n\n-- \u67e5\u627e\u6240\u6709\u7236\u7ea7\n-- \u6620\u5c04 p \u662f\u5fc5\u8981\u7684, \u5426\u5219\u4f1a\u6709\u6b67\u4e49\nWITH RECURSIVE parents(p) AS (\n  SELECT parent as p,*\n  FROM items\n  WHERE id = 471118\n  UNION ALL\n  SELECT t.parent as p,t.*\n  FROM parents s, items t\n  WHERE t.id = s.p\n) SELECT *\n  FROM parents;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57",children:"\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- find missing number\n-- mytab(id,cid) --  find missing cid\nSELECT num AS missing\nFROM generate_series(1, (SELECT max(cid) FROM mytab)) t(num)\n  LEFT JOIN mytab tab ON (t.num = tab.cid)\nWHERE tab.cid IS NULL;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"null-\u5b89\u5168\u7684-json-\u63d0\u53d6",children:"null \u5b89\u5168\u7684 json \u63d0\u53d6"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"CREATE OR REPLACE FUNCTION json_fetch(object json, variadic nodes text[])\nRETURNS json AS $$\nDECLARE\n  result json := object;\n  k text;\nBEGIN\n  foreach k in array nodes loop\n    if (result ->> k) is null then\n      result := null;\n      exit;\n    end if;\n\n    result := result -> k;\n  end loop;\n\n  return result;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT id,\n  coalesce(\n    json_fetch(author, 'address', 'street_name')::text, 'No address'\n  ) AS street_name\nFROM books;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(e.h3,{id:"table_size",children:"table_size"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \u67e5\u770b\u8868\u7a7a\u95f4\u5927\u5c0f\u4fe1\u606f\n-- table_size show statistic table size\nCREATE VIEW table_size AS\n  SELECT\n    *,\n    pg_size_pretty(total_bytes) AS total,\n    pg_size_pretty(index_bytes) AS INDEX,\n    pg_size_pretty(toast_bytes) AS toast,\n    pg_size_pretty(table_bytes) AS TABLE\n  FROM (\n         SELECT\n           *,\n           total_bytes - index_bytes - COALESCE(toast_bytes, 0) AS table_bytes\n         FROM (\n                SELECT\n                  c.oid,\n                  nspname                               AS table_schema,\n                  relname                               AS TABLE_NAME,\n                  c.reltuples                           AS row_estimate,\n                  pg_total_relation_size(c.oid)         AS total_bytes,\n                  pg_indexes_size(c.oid)                AS index_bytes,\n                  pg_total_relation_size(reltoastrelid) AS toast_bytes\n                FROM pg_class c\n                  LEFT JOIN pg_namespace n ON n.oid = c.relnamespace\n                WHERE relkind = 'r'\n              ) a\n       ) a;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"try_date",children:"try_date"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \u5c06\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u65e5\u671f, \u5982\u679c\u5931\u8d25\u8fd4\u56de null\n-- try to convert a text to date, return null if date invalid\nCREATE OR REPLACE FUNCTION try_date(s TEXT)\n  RETURNS DATE\nAS $$\nBEGIN\n  RETURN s :: DATE;\n  EXCEPTION WHEN OTHERS\n  THEN\n    RETURN NULL;\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,t.jsx)(e.h3,{id:"tab_sync_id_seq",children:"tab_sync_id_seq"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- \u540c\u6b65\u7ed9\u5b9a\u8868\u7684 id \u5e8f\u5217\u503c\nCREATE OR REPLACE FUNCTION tab_sync_id_seq(tab TEXT)\n  RETURNS BIGINT\nLANGUAGE plpgsql\nAS $$\nDECLARE\n  seq TEXT;\nBEGIN\n  seq = tab || '_id_seq';\n  --   EXECUTE 'LOCK TABLE ' || tab || ' IN EXCLUSIVE MODE';\n  EXECUTE 'SELECT setval('' ' || seq || ' '', COALESCE((SELECT MAX(id)\n                                            FROM ' || tab || '), 1), FALSE)';\n  RETURN nextval(seq);\nEND;\n$$;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u67e5\u8be2\u5916\u952e\u548c\u7d22\u5f15",children:"\u67e5\u8be2\u5916\u952e\u548c\u7d22\u5f15"}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"\u4e00\u5b9a\u8981\u7d22\u5f15\u5916\u952e"}),"\n",(0,t.jsxs)(e.li,{children:["\u53c2\u8003\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.a,{href:"https://www.cybertec-postgresql.com/en/index-your-foreign-key/",children:"ARE YOUR FOREIGN KEYS INDEXED?"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT c.conrelid::regclass                    AS \"table\",\n    /* list of key column names in order */\n       string_agg(a.attname, ',' ORDER BY x.n) AS columns,\n       pg_catalog.pg_size_pretty(\n               pg_catalog.pg_relation_size(c.conrelid)\n           )                                   AS size,\n       c.conname                               AS constraint,\n       c.confrelid::regclass                   AS referenced_table\nFROM pg_catalog.pg_constraint c\n         /* enumerated key column numbers per foreign key */\n         CROSS JOIN LATERAL\n    unnest(c.conkey) WITH ORDINALITY AS x(attnum, n)\n    /* name for each key column */\n         JOIN pg_catalog.pg_attribute a\n              ON a.attnum = x.attnum\n                  AND a.attrelid = c.conrelid\nWHERE NOT EXISTS\n    /* is there a matching index for the constraint? */\n    (SELECT 1\n     FROM pg_catalog.pg_index i\n     WHERE i.indrelid = c.conrelid\n         /* the first index columns must be the same as the\n            key columns, but order doesn't matter */\n       AND (i.indkey::smallint[])[0:cardinality(c.conkey) - 1]\n         OPERATOR (pg_catalog.@>) c.conkey)\n  AND c.contype = 'f'\nGROUP BY c.conrelid, c.conname, c.confrelid\nORDER BY pg_catalog.pg_relation_size(c.conrelid) DESC;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u7d22\u5f15\u4f7f\u7528\u60c5\u51b5",children:"\u7d22\u5f15\u4f7f\u7528\u60c5\u51b5"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"SELECT nspname,\n       relname,\n       round(100 * pg_relation_size(indexrelid) /\n             pg_relation_size(indrelid)) / 100      AS index_ratio,\n       pg_size_pretty(pg_relation_size(indexrelid)) AS index_size,\n       pg_size_pretty(pg_relation_size(indrelid))   AS table_size\nFROM pg_index I\n       LEFT JOIN pg_class C ON (C.oid = I.indexrelid)\n       LEFT JOIN pg_namespace N ON (N.oid = C.relnamespace)\nWHERE nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast')\n  AND C.relkind = 'i'\n  AND pg_relation_size(indrelid) > 0;\n"})}),"\n",(0,t.jsx)(e.h2,{id:"missing-fk-index",children:"Missing FK Index"}),"\n",(0,t.jsx)(e.p,{children:"\u67e5\u627e\u7f3a\u5c11\u7684\u5916\u952e\u7d22\u5f15\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- check for FKs where there is no matching index\n-- on the referencing side\n-- or a bad index\n\nWITH fk_actions ( code, action ) AS (\n    VALUES ( 'a', 'error' ),\n        ( 'r', 'restrict' ),\n        ( 'c', 'cascade' ),\n        ( 'n', 'set null' ),\n        ( 'd', 'set default' )\n),\nfk_list AS (\n    SELECT pg_constraint.oid as fkoid, conrelid, confrelid as parentid,\n        conname, relname, nspname,\n        fk_actions_update.action as update_action,\n        fk_actions_delete.action as delete_action,\n        conkey as key_cols\n    FROM pg_constraint\n        JOIN pg_class ON conrelid = pg_class.oid\n        JOIN pg_namespace ON pg_class.relnamespace = pg_namespace.oid\n        JOIN fk_actions AS fk_actions_update ON confupdtype = fk_actions_update.code\n        JOIN fk_actions AS fk_actions_delete ON confdeltype = fk_actions_delete.code\n    WHERE contype = 'f'\n),\nfk_attributes AS (\n    SELECT fkoid, conrelid, attname, attnum\n    FROM fk_list\n        JOIN pg_attribute\n            ON conrelid = attrelid\n            AND attnum = ANY( key_cols )\n    ORDER BY fkoid, attnum\n),\nfk_cols_list AS (\n    SELECT fkoid, array_agg(attname) as cols_list\n    FROM fk_attributes\n    GROUP BY fkoid\n),\nindex_list AS (\n    SELECT indexrelid as indexid,\n        pg_class.relname as indexname,\n        indrelid,\n        indkey,\n        indpred is not null as has_predicate,\n        pg_get_indexdef(indexrelid) as indexdef\n    FROM pg_index\n        JOIN pg_class ON indexrelid = pg_class.oid\n    WHERE indisvalid\n),\nfk_index_match AS (\n    SELECT fk_list.*,\n        indexid,\n        indexname,\n        indkey::int[] as indexatts,\n        has_predicate,\n        indexdef,\n        array_length(key_cols, 1) as fk_colcount,\n        array_length(indkey,1) as index_colcount,\n        round(pg_relation_size(conrelid)/(1024^2)::numeric) as table_mb,\n        cols_list\n    FROM fk_list\n        JOIN fk_cols_list USING (fkoid)\n        LEFT OUTER JOIN index_list\n            ON conrelid = indrelid\n            AND (indkey::int2[])[0:(array_length(key_cols,1) -1)] @> key_cols\n\n),\nfk_perfect_match AS (\n    SELECT fkoid\n    FROM fk_index_match\n    WHERE (index_colcount - 1) <= fk_colcount\n        AND NOT has_predicate\n        AND indexdef LIKE '%USING btree%'\n),\nfk_index_check AS (\n    SELECT 'no index' as issue, *, 1 as issue_sort\n    FROM fk_index_match\n    WHERE indexid IS NULL\n    UNION ALL\n    SELECT 'questionable index' as issue, *, 2\n    FROM fk_index_match\n    WHERE indexid IS NOT NULL\n        AND fkoid NOT IN (\n            SELECT fkoid\n            FROM fk_perfect_match)\n),\nparent_table_stats AS (\n    SELECT fkoid, tabstats.relname as parent_name,\n        (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as parent_writes,\n        round(pg_relation_size(parentid)/(1024^2)::numeric) as parent_mb\n    FROM pg_stat_user_tables AS tabstats\n        JOIN fk_list\n            ON relid = parentid\n),\nfk_table_stats AS (\n    SELECT fkoid,\n        (n_tup_ins + n_tup_upd + n_tup_del + n_tup_hot_upd) as writes,\n        seq_scan as table_scans\n    FROM pg_stat_user_tables AS tabstats\n        JOIN fk_list\n            ON relid = conrelid\n)\nSELECT nspname as schema_name,\n    relname as table_name,\n    conname as fk_name,\n    issue,\n    table_mb,\n    writes,\n    table_scans,\n    parent_name,\n    parent_mb,\n    parent_writes,\n    cols_list,\n    indexdef\nFROM fk_index_check\n    JOIN parent_table_stats USING (fkoid)\n    JOIN fk_table_stats USING (fkoid)\nWHERE table_mb > 9\n    AND ( writes > 1000\n        OR parent_writes > 1000\n        OR parent_mb > 10 )\nORDER BY issue_sort, table_mb DESC, table_name, fk_name;\n"})})]})}function _(n={}){const{wrapper:e}={...(0,i.M)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},38088:(n,e,s)=>{var t=s(96651),i=Symbol.for("react.element"),a=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,r=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function d(n,e,s){var t,a={},d=null,c=null;for(t in void 0!==s&&(d=""+s),void 0!==e.key&&(d=""+e.key),void 0!==e.ref&&(c=e.ref),e)l.call(e,t)&&!o.hasOwnProperty(t)&&(a[t]=e[t]);if(n&&n.defaultProps)for(t in e=n.defaultProps)void 0===a[t]&&(a[t]=e[t]);return{$$typeof:i,type:n,key:d,ref:c,props:a,_owner:r.current}}e.Fragment=a,e.jsx=d,e.jsxs=d},2488:(n,e,s)=>{n.exports=s(38088)},62780:(n,e,s)=>{s.d(e,{I:()=>r,M:()=>l});var t=s(96651);const i={},a=t.createContext(i);function l(n){const e=t.useContext(a);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),t.createElement(a.Provider,{value:e},n.children)}}}]);