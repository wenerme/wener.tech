"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[18262],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=m(n),c=r,h=u["".concat(o,".").concat(c)]||u[c]||d[c]||l;return n?a.createElement(h,i(i({ref:t},s),{},{components:n})):a.createElement(h,i({ref:t},s))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=u;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},66923:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return s},default:function(){return u}});var a=n(22122),r=n(19756),l=(n(67294),n(3905)),i=["components"],p={title:"Java with GraphQL",slug:"jraphql",date:new Date("2018-05-21T00:00:00.000Z"),tags:["\u9879\u76ee","Java","GraphQL"],baseUrl:"https://github.com/wenerme/jraphql/tree/master/"},o="JraphQL",m={permalink:"/story/jraphql",editUrl:"https://github.com/wenerme/wener/edit/master/story/project/jraphql.md",source:"@site/story/project/jraphql.md",title:"Java with GraphQL",description:"Java with GraphQL",date:"2018-05-21T00:00:00.000Z",formattedDate:"May 21, 2018",tags:[{label:"\u9879\u76ee",permalink:"/story/tags/\u9879\u76ee"},{label:"Java",permalink:"/story/tags/java"},{label:"GraphQL",permalink:"/story/tags/graph-ql"}],readingTime:2.45,truncated:!1,prevItem:{title:"Redis \u6d41\u7b80\u4ecb",permalink:"/story/redis-stream-intro"},nextItem:{title:"Google API Design Guide",permalink:"/story/google-api-design-guide"}},s=[{value:"Get Started",id:"get-started",children:[]},{value:"Features",id:"features",children:[{value:"Language representation",id:"language-representation",children:[]},{value:"Syntax Extension",id:"syntax-extension",children:[]},{value:"Runtime Extension",id:"runtime-extension",children:[]},{value:"Embeddable Schema",id:"embeddable-schema",children:[]}]},{value:"Example",id:"example",children:[{value:"StarWar",id:"starwar",children:[]}]},{value:"Work with GoaphQL",id:"work-with-goaphql",children:[]}],d={toc:s};function u(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Java with GraphQL"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Module"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"jraphql-lang"),(0,l.kt)("td",{parentName:"tr",align:null},"GraphQL language representation")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"jraphql-runtime"),(0,l.kt)("td",{parentName:"tr",align:null},"GraphQL execution engine")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"jraphql-parser-antlr"),(0,l.kt)("td",{parentName:"tr",align:null},"Parser written in Antlr4 parse to jraphql-lang")))),(0,l.kt)("h2",{id:"get-started"},"Get Started"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Maven ",(0,l.kt)("a",{parentName:"li",href:"https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22me.wener.jraphql%22"},"me.wener.jraphql"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"<dependency>\n  <groupId>me.wener.jraphql</groupId>\n  <artifactId>jraphql-runtimer</artifactId>\n  <version>0.0.6</version>\n</dependency>\n<dependency>\n  <groupId>me.wener.jraphql</groupId>\n  <artifactId>jraphql-parser-antlr</artifactId>\n  <version>0.0.6</version>\n</dependency>\n")),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("h3",{id:"language-representation"},"Language representation"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Feature"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Serializable")),(0,l.kt)("td",{parentName:"tr",align:null},"can parse or stringify to or from JSON")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Immutable")),(0,l.kt)("td",{parentName:"tr",align:null},"friendly to cache or precompile")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Buildable")),(0,l.kt)("td",{parentName:"tr",align:null},"every type has a builder for it generated by lombok.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"Pluggable")),(0,l.kt)("td",{parentName:"tr",align:null},"language representation is not related to parser impl")))),(0,l.kt)("h3",{id:"syntax-extension"},"Syntax Extension"),(0,l.kt)("h4",{id:"add-extend-by-name-syntax-for-object-and-interface"},"Add ",(0,l.kt)("inlineCode",{parentName:"h4"},"extend by name")," syntax for object and interface"),(0,l.kt)("h4",{id:"weave-multi-schemas"},"Weave multi schemas"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"# common.graphqls\nscalar Version\n\n# crm.graphqls\ntype CrmQuery {\n  customer(id:ID!):Customer\n  crmVersion: Version!\n}\ntype CrmUser {\n  customers: [Customer]\n}\nextend type Query by CrmQuery\nextend type User by CrmUser\n\n# erp.graphqls\ntype ErpQuery {\n  product(id:ID!):Product\n}\nextend type Query by ErpQuery\n")),(0,l.kt)("h4",{id:"conditional-schema"},"Conditional schema"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'# Only admin can see and use these methods\ntype AdminMutation {\n  changePassword(id:ID,password:String): ChangePasswordPayload\n}\nextend type Mutation by AdminMutation @Role(role:"admin")\n')),(0,l.kt)("h4",{id:"allowed-directives-on-directive-definition-add-directive-location"},"Allowed directives on directive definition, add DIRECTIVE location"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'directive @JavaType(type:String) on DIRECTIVE\ndirective @Auth(value:String) @JavaType(type:"Auth") on FIELD_DEFINITION;\n')),(0,l.kt)("h4",{id:"allowed-schema-has-optional-name"},"Allowed schema has optional name"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"schema Test {\n  query: MyQuery\n}\n")),(0,l.kt)("h3",{id:"runtime-extension"},"Runtime Extension"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Type implements interface don't need to write the fields again.")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"interface Node {\n    id: ID!\n}\n\ntype User implements Node {\n    # id: ID! # This is optional\n}\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Can disable introspection",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"new MetaResolver().setDisableIntrospection(true)"))))),(0,l.kt)("h3",{id:"embeddable-schema"},"Embeddable Schema"),(0,l.kt)("p",null,"JraphQL Runtime contain a embedded schema ",(0,l.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/wenerme/jraphql/master/jraphql-runtime/src/main/java/me/wener/jraphql/schema/MetaSchema.java"},"MetaSchema"),", generated by ",(0,l.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/wenerme/jraphql/master/jraphql-runtime/src/test/java/me/wener/jraphql/example/EmbededSchema.java"},"EmbededSchema"),".   "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Parse Schema"),(0,l.kt)("li",{parentName:"ul"},"Serialize to JSON"),(0,l.kt)("li",{parentName:"ul"},"Best compress GZip"),(0,l.kt)("li",{parentName:"ul"},"Encode use mime base64"),(0,l.kt)("li",{parentName:"ul"},"Original JSON 32631 byte -> Encoded Base64 5352 byte")),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("h3",{id:"starwar"},"StarWar"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/wenerme/jraphql/master/jraphql-runtime/src/test/java/me/wener/jraphql/example/StarWarApplication.java"},"StarWarApplication"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"SpringBoot WebFlux based"),(0,l.kt)("li",{parentName:"ul"},"start and visite http://localhost:8080"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/wenerme/jraphql/master/jraphql-runtime/src/test/java/me/wener/jraphql/example/StarWarResolverV1.java"},"StarWarResolver"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"resolve the StarWar schema. ")))),(0,l.kt)("p",null,"Queries you can try"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},'mutation addRev {\n  createReview(episode: EMPIRE, review: {stars: 4, commentary: "Ok Good"}) {\n    stars\n    commentary\n  }\n}\n\nquery rev($e:Episode = EMPIRE) {\n  hero(episode: $e) {\n    id\n    name\n    appearsIn\n  }\n  reviews(episode: $e) {\n    stars\n    commentary\n  }\n}\n\nquery search {\n  search(text: "o") {\n    __typename\n    ... on Human {\n      id\n      name\n    }\n    ... on Droid {\n      primaryFunction\n    }\n    ... on Starship {\n      length\n    }\n  }\n}\n\nquery baseQuery {\n  starship(id: "3000") {\n    id\n    name\n    length(unit: FOOT)\n  }\n  character(id: "2000") {\n    id\n    ... on Human {\n      mass\n      starships {\n        name\n      }\n    }\n    ... on Droid {\n      name\n      appearsIn\n    }\n  }\n  human(id: "1003") {\n    friendsConnection(after: "1002") {\n      friends {\n        name\n      }\n      pageInfo {\n        hasNextPage\n        startCursor\n        endCursor\n      }\n    }\n    friends {\n      name\n    }\n  }\n}\n')),(0,l.kt)("h2",{id:"work-with-goaphql"},"Work with GoaphQL"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/wenerme/goaphql"},"GoaphQL")," can generate code from schema that depends on jrapgql-api, can directly run on jraphql-graphql-java-adapter.  "),(0,l.kt)("p",null,"The generated code is static type and full featured, everything is an interface."))}u.isMDXComponent=!0}}]);