/*! For license information please see 7e025612.29422a9b.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[94736],{82144:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var s=r(2488),a=r(62780);const t={id:"cert-manager",title:"Cert Manager"},c="cert-manager",i={id:"devops/kubernetes/app/cert-manager",title:"Cert Manager",description:"- jetstack/cert-manager \u662f\u4ec0\u4e48\uff1f",source:"@site/../notes/devops/kubernetes/app/cert-manager.md",sourceDirName:"devops/kubernetes/app",slug:"/devops/kubernetes/app/cert-manager",permalink:"/notes/devops/kubernetes/app/cert-manager",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/kubernetes/app/cert-manager.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1702882608,formattedLastUpdatedAt:"Dec 18, 2023",frontMatter:{id:"cert-manager",title:"Cert Manager"},sidebar:"docs",previous:{title:"cert-manager version",permalink:"/notes/devops/kubernetes/app/cert-manager-version"},next:{title:"pgo",permalink:"/notes/devops/kubernetes/app/crunchy-postgres-operator"}},l={},o=[{value:"Ingress",id:"ingress",level:2},{value:"Certificate",id:"certificate",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"ACME",id:"acme",level:2},{value:"cmctl",id:"cmctl",level:2},{value:"account credentials not found for domain",id:"account-credentials-not-found-for-domain",level:2},{value:"Error creating new order :: Domain name &quot;sub.domain.tld&quot; is redundant with a wildcard domain in the same request",id:"error-creating-new-order--domain-name-subdomaintld-is-redundant-with-a-wildcard-domain-in-the-same-request",level:2},{value:"\u8bc1\u4e66\u8de8\u7a7a\u95f4",id:"\u8bc1\u4e66\u8de8\u7a7a\u95f4",level:2},{value:"The request must include a value for the &quot;externalAccountBinding&quot; field",id:"the-request-must-include-a-value-for-the-externalaccountbinding-field",level:2},{value:"Failed to retrieve Order resource: 404 urn:ietf:params:acme:error",id:"failed-to-retrieve-order-resource-404-urnietfparamsacmeerror",level:2},{value:"Certificate will be issued with an empty Issuer DN, which contravenes RFC 5280 and could break some strict clients",id:"certificate-will-be-issued-with-an-empty-issuer-dn-which-contravenes-rfc-5280-and-could-break-some-strict-clients",level:2},{value:"Could not determine authoritative nameservers for",id:"could-not-determine-authoritative-nameservers-for",level:2},{value:"DNS record for &quot;dev.wener.me&quot; not yet propagated",id:"dns-record-for-devwenerme-not-yet-propagated",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",del:"del",h1:"h1",h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"cert-manager",children:"cert-manager"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/jetstack/cert-manager",children:"jetstack/cert-manager"})," \u662f\u4ec0\u4e48\uff1f\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u81ea\u9881\u53d1 CA \u8bc1\u4e66\u7ba1\u7406"}),"\n",(0,s.jsx)(n.li,{children:"ACME \u81ea\u52a8\u8bc1\u4e66\u7533\u8bf7"}),"\n",(0,s.jsx)(n.li,{children:"\u5916\u90e8\u8bc1\u4e66\u7ba1\u7406\u96c6\u6210"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["crds - \u81ea\u5b9a\u4e49\u8d44\u6e90\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"issuers.cert-manager.io"}),"\n",(0,s.jsx)(n.li,{children:"orders.acme.cert-manager.io"}),"\n",(0,s.jsx)(n.li,{children:"certificaterequests.cert-manager.io"}),"\n",(0,s.jsx)(n.li,{children:"certificates.cert-manager.io"}),"\n",(0,s.jsx)(n.li,{children:"challenges.acme.cert-manager.io"}),"\n",(0,s.jsx)(n.li,{children:"clusterissuers.cert-manager.io"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cert-manager.io/docs/configuration/",children:"\u914d\u7f6e"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cert-manager.io/docs/usage/ingress/",children:"Ingress"})}),"\n",(0,s.jsxs)(n.li,{children:["\u6ce8\u610f\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["DNS01 \u652f\u6301\u7684 Provider \u975e\u5e38\u5c11 - \u548c LEGO \u76f8\u6bd4\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"ACMEDNS"}),"\n",(0,s.jsx)(n.li,{children:"Akamai"}),"\n",(0,s.jsx)(n.li,{children:"AzureDNS"}),"\n",(0,s.jsx)(n.li,{children:"CloudFlare"}),"\n",(0,s.jsx)(n.li,{children:"DigitalOcean"}),"\n",(0,s.jsx)(n.li,{children:"Google CloudDNS"}),"\n",(0,s.jsx)(n.li,{children:"RFC-2136"}),"\n",(0,s.jsx)(n.li,{children:"Route53"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://cert-manager.io/docs/configuration/acme/dns01/webhook/",children:"Webhook"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/pragkent/alidns-webhook",children:"pragkent/alidns-webhook"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5c3d\u91cf\u4e0d\u8981\u521b\u5efa\u76f8\u540c\u8bc1\u4e66 - \u5982\u679c\u9700\u8981\u53ef\u8003\u8651\u540c\u6b65"}),"\n",(0,s.jsx)(n.li,{children:"DNS01 \u624d\u652f\u6301\u6cdb\u57df\u540d\u8bc1\u4e66 - \u6700\u7b80\u5355\u662f\u4f7f\u7528 ACMEDNS"}),"\n"]})}),"\n",(0,s.jsx)(n.h2,{id:"ingress",children:"Ingress"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cert-manager.io/docs/usage/ingress/#supported-annotations",children:"Supported Annotations"})}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"annotation"}),(0,s.jsx)(n.th,{children:"desc"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cert-manager.io/issuer"}),(0,s.jsx)(n.td,{children:"Issuser"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cert-manager.io/cluster-issuer"}),(0,s.jsx)(n.td,{children:"ClusterIssuer"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cert-manager.io/issuer-kind"}),(0,s.jsx)(n.td,{children:"\u5916\u90e8 Issuers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"cert-manager.io/issuer-group"}),(0,s.jsx)(n.td,{children:"\u5916\u90e8 Issuers"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:'kubernetes.io/tls-acme: "true"'}),(0,s.jsxs)(n.td,{children:["\u5982\u679c\u5b89\u88c5\u65f6\u8bbe\u7f6e\u4e86 ",(0,s.jsx)(n.code,{children:"ingressShim.defaultIssuer"})," \u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4 Issuser"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"acme.cert-manager.io/http01-ingress-class"}),(0,s.jsx)(n.td,{children:"\u7528\u4e8e resolve \u7684 Ingress"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"acme.cert-manager.io/http01-edit-in-place:"}),(0,s.jsxs)(n.td,{children:["\u521b\u5efa\u65b0\u7684 Ingress \u914d\u7f6e\u8fd8\u662f\u4fee\u6539\u73b0\u6709\u7684 Ingress\uff0c\u4f1a\u8bbe\u7f6e ",(0,s.jsx)(n.code,{children:'"cert-manager.io/issue-temporary-certificate": "true"'})," \u7528\u4e8e\u533a\u5206"]})]})]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: kuard\n  annotations:\n    kubernetes.io/ingress.class: 'nginx'\n    # \u53ef\u76f4\u63a5\u4f7f\u7528\u6307\u5b9a\u7684 issuser\n    cert-manager.io/issuer: 'letsencrypt-staging'\n\nspec:\n  tls:\n    - hosts:\n        - example.example.com\n      secretName: quickstart-example-tls\n  rules:\n    - host: example.example.com\n      http:\n        paths:\n          - path: /\n            backend:\n              serviceName: kuard\n              servicePort: 80\n"})}),"\n",(0,s.jsx)(n.h2,{id:"certificate",children:"Certificate"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: example-com\n  namespace: sandbox\nspec:\n  # Secret names are always required.\n  secretName: example-com-tls\n  duration: 2160h # 90d\n  renewBefore: 360h # 15d\n  subject:\n    organizations:\n      - jetstack\n  # The use of the common name field has been deprecated since 2000 and is\n  # discouraged from being used.\n  commonName: example.com\n  isCA: false\n  privateKey:\n    algorithm: RSA\n    encoding: PKCS1\n    size: 2048\n  usages:\n    - server auth\n    - client auth\n  # At least one of a DNS Name, URI, or IP address is required.\n  dnsNames:\n    - example.com\n    - www.example.com\n  uris:\n    - spiffe://cluster.local/ns/sandbox/sa/example\n  ipAddresses:\n    - 192.168.0.5\n  # Issuer references are always required.\n  issuerRef:\n    name: ca-issuer\n    # We can reference ClusterIssuers by changing the kind here.\n    # The default value is Issuer (i.e. a locally namespaced Issuer)\n    kind: Issuer\n    # This is optional since cert-manager will default to this value however\n    # if you are using an external issuer, change this to that issuer group.\n    group: cert-manager.io\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# ingress \u751f\u6210\u7684 certificate\nspec:\n  dnsNames:\n    - web.example.com\n  issuerRef:\n    group: cert-manager.io\n    kind: ClusterIssuer\n    name: letsencrypt\n  secretName: web-cert\n  usages:\n    - digital signature\n    - key encipherment\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u5b89\u88c5",children:"\u5b89\u88c5"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ver=$(curl -Ls https://api.github.com/repos/jetstack/cert-manager/releases/latest | jq -r .tag_name)\n# \u5b89\u88c5\u81ea\u5b9a\u4e49\u8d44\u6e90\ncurl -sfLO https://github.com/jetstack/cert-manager/releases/download/$ver/cert-manager.crds.yaml\nkubectl apply -f cert-manager.crds.yaml\n\n# \u521b\u5efa NS\nkubectl create namespace cert-manager\n\n# Helm \u5b89\u88c5\nhelm repo add jetstack https://charts.jetstack.io\nhelm repo update\n\nhelm install \\\n  cert-manager jetstack/cert-manager \\\n  --namespace cert-manager \\\n  --version $ver\n\n# Helm \u5b89\u88c5 - \u901a\u8fc7\u955c\u50cf\nhelm repo add wener https://charts.wener.tech\nhelm repo update\n\ncat << YAML > cert-manager.values.yaml\nimage:\n  repository: registry.cn-hongkong.aliyuncs.com/cmi/jetstack_cert-manager-controller\nwebhook:\n  image:\n    repository: registry.cn-hongkong.aliyuncs.com/cmi/jetstack_cert-manager-webhook\ncainjector:\n  image:\n    repository: registry.cn-hongkong.aliyuncs.com/cmi/jetstack_cert-manager-cainjector\ninstallCRDs: true\n# \u7248\u672c\u76f8\u5173\nextraArgs:\n  - --acme-http01-solver-image=registry.cn-hongkong.aliyuncs.com/cmi/jetstack_cert-manager-acmesolver:$ver\nYAML\n\nhelm install \\\n  cert-manager wener/cert-manager \\\n  --namespace cert-manager --create-namespace \\\n  --version $ver -f cert-manager.values.yaml\n\n# \u67e5\u770b\u5b89\u88c5\u72b6\u6001\nkubectl -n cert-manager rollout status deploy/cert-manager\n# \u9a8c\u8bc1\u5b89\u88c5\nkubectl -n cert-manager get deploy\n"})}),"\n",(0,s.jsx)(n.h2,{id:"acme",children:"ACME"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"# Cloudflare \u63a5\u53e3 Token \u7684 Secret\napiVersion: v1\nkind: Secret\nmetadata:\n  name: cloudflare-api-token-secret\ntype: Opaque\nstringData:\n  api-token: <API Token>\n\n---\n# Cloudflare \u63a5\u53e3 Key \u7684 Secret\napiVersion: v1\nkind: Secret\nmetadata:\n  name: cloudflare-api-key-secret\ntype: Opaque\nstringData:\n  api-key: <API Key>\n\n---\n# letsencrypt staging \u73af\u5883\napiVersion: cert-manager.io/v1alpha2\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-staging\n  namespace: default\nspec:\n  acme:\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    # \u751f\u4ea7\u5730\u5740\n    # server: https://acme-v02.api.letsencrypt.org/directory\n    # \u8d26\u53f7\n    email: user@example.com\n    # \u5b58\u50a8 ACME \u8d26\u53f7\u79c1\u94a5\u7684 secret \u540d\u5b57\n    privateKeySecretRef:\n      name: letsencrypt-staging\n\n    # DNS-01\n    solvers:\n      # selector \u4e3a\u7a7a\u5339\u914d\u6240\u6709\u57df\u540d\n      - selector: {}\n        dns01:\n          clouddns:\n            # The ID of the GCP project\n            # reference: https://docs.cert-manager.io/en/latest/tasks/issuers/setup-acme/dns01/google.html\n            project: $PROJECT_ID\n            # This is the secret used to access the service account\n            serviceAccountSecretRef:\n              name: clouddns-dns01-solver-svc-acct\n              key: key.json\n\n      # \u4e3a foo.com \u4f7f\u7528\u8be5 provider\n      # \u8fd8\u53ef\u4ee5\u4f7f\u7528 matchLabels \u548c dnsZones\n      - selector:\n          dnsNames:\n            - foo.com\n        dns01:\n          cloudflare:\n            email: my-cloudflare-acc@example.com\n            # \u9700\u8981\u5148\u521b\u5efa secret\n            # kubectl create secret generic cloudflare-api-key-secret\n            # CF \u652f\u6301 API Token \u548c API Key\n            apiKeySecretRef:\n              name: cloudflare-api-key-secret\n              key: api-key\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cmctl",children:"cmctl"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"cmctl = kubectl cert-manager"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"brew install cmctl\n\nkubectl get certificate -A\nkubectl get certificaterequest -A\n\n# \u89e6\u53d1 renew\ncmctl renew --namespace=app --all\n# \u8bc1\u4e66\u72b6\u6001\ncmctl status certificate my-certificate -n my-namespace\n"})}),"\n",(0,s.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(n.h2,{id:"account-credentials-not-found-for-domain",children:"account credentials not found for domain"}),"\n",(0,s.jsx)(n.p,{children:"\u5982\u679c\u662f dns, \u53ef\u80fd\u662f\u57df\u540d\u4e0d\u5339\u914d."}),"\n",(0,s.jsxs)(n.p,{children:["\u4f8b\u5982 \u7533\u8bf7 sub.domain.tld. \u9700\u8981\u914d\u7f6e\u7684\u662f\u5b50\u57df\u540d, \u4e0d\u4f1a\u81ea\u52a8\u5339\u914d\u6cdb\u57df\u540d, \u4f8b\u5982\u914d\u7f6e\u8fc7 ",(0,s.jsx)(n.code,{children:"_acme_changlle.domain.tld"})," \u4e5f\u4e0d\u4f1a\u751f\u6548"]}),"\n",(0,s.jsx)(n.h2,{id:"error-creating-new-order--domain-name-subdomaintld-is-redundant-with-a-wildcard-domain-in-the-same-request",children:'Error creating new order :: Domain name "sub.domain.tld" is redundant with a wildcard domain in the same request'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"dnsNames:\n  - domain.tld\n  - '*.domain.tld'\n  # \u4e0d\u80fd\u6dfb\u52a0\u8fd9\u4e2a\u57df\u540d - \u5df2\u7ecf\u88ab\u4e0a\u9762\u8986\u76d6\n  # - sub.domain.tld\n  - '*.sub.domain.tld'\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u8bc1\u4e66\u8de8\u7a7a\u95f4",children:"\u8bc1\u4e66\u8de8\u7a7a\u95f4"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"\u914d\u7f6e ingress \u8bbe\u7f6e\u9ed8\u8ba4 tls secret, \u7136\u540e\u4e4b\u540e\u7684 ingress \u4e0d\u914d\u7f6e secret"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4fee\u6539\u8f83\u5927\uff0c\u4e0d\u5efa\u8bae"}),"\n"]}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"\u540c\u6b65"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsxs)(n.del,{children:["\u76ee\u524d\u65e0\u6cd5\u4fee\u6539 secret annotations - ",(0,s.jsx)(n.a,{href:"https://github.com/jetstack/cert-manager/issues/977",children:"#977"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u53ef\u4ee5\u4f7f\u7528\u9884\u5148\u5b58\u5728\u7684 secret - \u7136\u540e\u914d\u5408 kubed \u4f7f\u7528\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5728\u6765\u6e90\u4e0a\u5b9a\u4e49\uff0c\u540c\u6b65\u5230\u76ee\u6807"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/emberstack/kubernetes-reflector",children:"emberstack/kubernetes-reflector"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u53ef\u66ff\u4ee3 kubed - \u652f\u6301\u8bc1\u4e66 secret \u540c\u6b65"}),"\n",(0,s.jsx)(n.li,{children:"\u5148\u5b9a\u4e49\u76ee\u6807\u518d\u5b9a\u4e49\u6765\u6e90"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"kubed"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: sandbox\n  namespace: cert-manager\nspec:\n  secretName: sandbox-tls\n  commonName: sandbox\n  issuerRef:\n    name: sandbox-ca\n    kind: Issuer\n    group: cert-manager.io\n  secretTemplate:\n    annotations:\n      kubed.appscode.com/sync: 'cert-manager-tls=sandbox' # Sync certificate to matching namespaces\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"reflector"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: source\n  namespace: cert-manager\nspec:\n  secretName: source-tls\n  commonName: source\n  issuerRef:\n    name: source-ca\n    kind: Issuer\n    group: cert-manager.io\n  secretTemplate:\n    annotations:\n      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"\n      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "dev,staging,prod"  # Control destination namespaces\n      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true" # Auto create reflection for matching namespaces\n      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: "dev,staging,prod" # Control auto-reflection namespaces\n'})}),"\n",(0,s.jsx)(n.p,{children:"\u76f4\u63a5\u652f\u6301\u8bc1\u4e66"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1alpha1\nkind: Certificate\nmetadata:\n  name: default-cert\n  annotations:\n    reflector.v1.k8s.emberstack.com/secret-reflection-allowed: 'true'\n    reflector.v1.k8s.emberstack.com/secret-reflection-allowed-namespaces: 'namespace-1,namespace-2,namespace-[0-9]*'\nspec:\n  secretName: certificate-secret\n"})}),"\n",(0,s.jsx)(n.h2,{id:"the-request-must-include-a-value-for-the-externalaccountbinding-field",children:'The request must include a value for the "externalAccountBinding" field'}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"zarossl \u9700\u8981 EAB \u5916\u90e8\u8d26\u53f7\u7ed1\u5b9a"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: zerossl-prod\nspec:\n  acme:\n    externalAccountBinding:\n      keyAlgorithm: HS256\n      keyID: XXX\n      keySecretRef:\n        key: secret\n        name: zerossl-eabsecret\n    preferredChain: ''\n    privateKeySecretRef:\n      name: zerossl-prod\n    server: https://acme.zerossl.com/v2/DV90\n    solvers:\n      - http01:\n          ingress:\n            class: traefik\n---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: zerossl-eabsecret\n  # \u6ce8\u610f ns\n  namespace: cert-manager\ntype: Opaque\n# stringData:\n#   secret: XXX\ndata:\n  secret: XXX\n"})}),"\n",(0,s.jsx)(n.h2,{id:"failed-to-retrieve-order-resource-404-urnietfparamsacmeerror",children:"Failed to retrieve Order resource: 404 urn:ietf:params:acme:error:malformed"}),"\n",(0,s.jsx)(n.h2,{id:"certificate-will-be-issued-with-an-empty-issuer-dn-which-contravenes-rfc-5280-and-could-break-some-strict-clients",children:"Certificate will be issued with an empty Issuer DN, which contravenes RFC 5280 and could break some strict clients"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: citus-cert\nspec:\n  # \u6dfb\u52a0\u8fd9\u4e2a\n  commonName: what.ever\n"})}),"\n",(0,s.jsx)(n.h2,{id:"could-not-determine-authoritative-nameservers-for",children:"Could not determine authoritative nameservers for"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"extraArgs:\n  - --dns01-recursive-nameservers-only\n  #- --dns01-recursive-nameservers=8.8.8.8:53,1.1.1.1:53\n  - --dns01-recursive-nameservers=114.114.114.114:53,223.5.5.5:53\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://cert-manager.io/docs/cli/controller/",children:"https://cert-manager.io/docs/cli/controller/"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"dns-record-for-devwenerme-not-yet-propagated",children:'DNS record for "dev.wener.me" not yet propagated'}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dig TXT _acme-challenge.dev.wener.me\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"apiVersion: acme.cert-manager.io/v1\nkind: Challenge\nmetadata:\nspec:\n  dnsName: dev.zhang66.cn\n  issuerRef:\n    group: cert-manager.io\n    kind: Issuer\n    name: letsencrypt\n  # TXT \u503c\n  key: KEY\n"})})]})}function m(e={}){const{wrapper:n}={...(0,a.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},38088:(e,n,r)=>{var s=r(96651),a=Symbol.for("react.element"),t=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function o(e,n,r){var s,t={},o=null,d=null;for(s in void 0!==r&&(o=""+r),void 0!==n.key&&(o=""+n.key),void 0!==n.ref&&(d=n.ref),n)c.call(n,s)&&!l.hasOwnProperty(s)&&(t[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===t[s]&&(t[s]=n[s]);return{$$typeof:a,type:e,key:o,ref:d,props:t,_owner:i.current}}n.Fragment=t,n.jsx=o,n.jsxs=o},2488:(e,n,r)=>{e.exports=r(38088)},62780:(e,n,r)=>{r.d(n,{I:()=>i,M:()=>c});var s=r(96651);const a={},t=s.createContext(a);function c(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);