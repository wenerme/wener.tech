"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[81861],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),g=s(n),d=a,m=g["".concat(u,".").concat(d)]||g[d]||p[d]||i;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},55149:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),l=["components"],o={title:"Zig"},u=void 0,s={unversionedId:"languages/zig/README",id:"languages/zig/README",title:"Zig",description:"- ziglang",source:"@site/notes/languages/zig/README.md",sourceDirName:"languages/zig",slug:"/languages/zig/",permalink:"/notes/languages/zig/",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/languages/zig/README.md",tags:[],version:"current",frontMatter:{title:"Zig"}},c={},p=[{value:"warning: lld uses blx instruction, no object with architecture supporting feature detected",id:"warning-lld-uses-blx-instruction-no-object-with-architecture-supporting-feature-detected",level:2},{value:"undefined symbol: __sync_fetch_and_add_1",id:"undefined-symbol-__sync_fetch_and_add_1",level:2},{value:"warning: cannot find entry symbol _start; not setting start address",id:"warning-cannot-find-entry-symbol-_start-not-setting-start-address",level:2}],g={toc:p};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"http://ziglang.org/"},"ziglang")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/zig-lang/zig"},"zig-lang/zig")),(0,i.kt)("li",{parentName:"ul"},"Why",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u4e0e C \u4ea4\u4e92\u975e\u5e38\u597d, \u53ef\u76f4\u63a5\u5bfc\u5165 C \u5934\u6587\u4ef6\u4f7f\u7528"),(0,i.kt)("li",{parentName:"ul"},"\u53ef\u4e0e C \u7684\u7f16\u8bd1\u540e\u5bf9\u63a5\u8fdb\u884c\u6df7\u5408\u7f16\u8bd1"),(0,i.kt)("li",{parentName:"ul"},"stdlib \u8bbe\u8ba1\u4e0a\u4e0d\u4f9d\u8d56 libc - wasm \u66f4\u5c0f"),(0,i.kt)("li",{parentName:"ul"},"\u5185\u7f6e libc - \u4ea4\u53c9\u7f16\u8bd1"),(0,i.kt)("li",{parentName:"ul"},"\u5185\u7f6e clang - zig cc"),(0,i.kt)("li",{parentName:"ul"},"\u52a8\u6001\u7f16\u8bd1\u8def\u5f84"))),(0,i.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://andrewkelley.me/"},"https://andrewkelley.me/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://scattered-thoughts.net/writing/assorted-thoughts-on-zig-and-rust/"},"Assorted thoughts on zig")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://ziglang.org/learn/why_zig_rust_d_cpp/"},"Why Zig When There is Already C++, D, and Rust?"))))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -it -v $PWD:/host -w /host wener/zig\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zig",metastring:'title="hello.zig"',title:'"hello.zig"'},'const std = @import("std");\n\npub fn main() !void {\n    const stdout = std.io.getStdOut().writer();\n    try stdout.print("Hello, {s}!\\n", .{"world"});\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-zig",metastring:'title="hello.zig"',title:'"hello.zig"'},'const print = @import("std").debug.print;\n\npub fn main() void {\n    print("Hello, world!\\n", .{});\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"zig build-exe hello.zig\n# \u4ea4\u53c9\u7f16\u8bd1\nzig targets # \u6240\u6709 targets\nzig build-exe -target arm-linux hello.zig\n\nzig build-exe -target arm-linux-musleabi -mcpu arm1176jzf_s hello.zig\nzig build-exe -target arm-linux-gnueabi -mcpu arm1176jzf_s hello.zig\n\n# hello \u7ea6 4.4k\nzig build-exe --strip -O ReleaseSmall hello.zig\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"flags",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"-fsingle-threaded"),(0,i.kt)("li",{parentName:"ul"},"-mcpu=arm926ej_s+soft_float"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-l[lib], --library [lib]")," - \u5728\u9700\u8981\u65f6 link \u7cfb\u7edf\u5e93"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"-L[d], --library-directory [d]")," - \u6dfb\u52a0 \u5e93 \u76ee\u5f55")))),(0,i.kt)("h1",{id:"faq"},"FAQ"),(0,i.kt)("h2",{id:"warning-lld-uses-blx-instruction-no-object-with-architecture-supporting-feature-detected"},"warning: lld uses blx instruction, no object with architecture supporting feature detected"),(0,i.kt)("h2",{id:"undefined-symbol-__sync_fetch_and_add_1"},"undefined symbol: ","_","_","sync_fetch_and_add_1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"atomic operations and ","_","_","eabi_read_tp for ARM older than v7",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/ziglang/zig/pull/10756"},"#10756"))))),(0,i.kt)("h2",{id:"warning-cannot-find-entry-symbol-_start-not-setting-start-address"},"warning: cannot find entry symbol ","_","start; not setting start address"))}d.isMDXComponent=!0}}]);