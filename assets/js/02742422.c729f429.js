"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[29432],{49613:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(59496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),m=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=m(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=m(r),d=o,f=c["".concat(l,".").concat(d)]||c[d]||u[d]||i;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var m=2;m<i;m++)a[m]=r[m];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},76708:function(e,t,r){r.r(t),r.d(t,{assets:function(){return y},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return c},metadata:function(){return f},toc:function(){return k}});var n=r(49613),o=Object.defineProperty,i=Object.defineProperties,a=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,l=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))l.call(t,r)&&p(e,r,t[r]);if(s)for(var r of s(t))m.call(t,r)&&p(e,r,t[r]);return e};const c={title:"mikro-orm"},d="mikro-orm",f={unversionedId:"web/nodejs/mikro-orm",id:"web/nodejs/mikro-orm",title:"mikro-orm",description:"- mikro-orm/mikro-orm",source:"@site/../notes/web/nodejs/mikro-orm.md",sourceDirName:"web/nodejs",slug:"/web/nodejs/mikro-orm",permalink:"/notes/web/nodejs/mikro-orm",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/web/nodejs/mikro-orm.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1678453938,formattedLastUpdatedAt:"Mar 10, 2023",frontMatter:{title:"mikro-orm"},sidebar:"docs",previous:{title:"ffi-napi",permalink:"/notes/web/nodejs/ffi-napi"},next:{title:"Nodejs Awesome",permalink:"/notes/web/nodejs/awesome"}},y={},k=[],b={toc:k};function g(e){var t,r=e,{components:o}=r,p=((e,t)=>{var r={};for(var n in e)l.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&s)for(var n of s(e))t.indexOf(n)<0&&m.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=u(u({},b),p),i(t,a({components:o,mdxType:"MDXLayout"}))),(0,n.kt)("h1",u({},{id:"mikro-orm"}),"mikro-orm"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/mikro-orm/mikro-orm"}),"mikro-orm/mikro-orm"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"MIT, Typescript"),(0,n.kt)("li",{parentName:"ul"},"ORM"),(0,n.kt)("li",{parentName:"ul"},"\u652f\u6301 Data Mapper, Unit of Work, Identity Map"),(0,n.kt)("li",{parentName:"ul"},"\u652f\u6301 MongoDB, MySQL, MariaDB, PostgreSQL, SQLite"))),(0,n.kt)("li",{parentName:"ul"},"@mikro-orm/knex",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Builder")))),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# mongodb, mysql, mariadb, sqlite\nnpm add @mikro-orm/core @mikro-orm/postgresql\n")),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'}),'{\n  "experimentalDecorators": true,\n  "emitDecoratorMetadata": true,\n  "esModuleInterop": true\n}\n')),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"import type { PostgreSqlDriver } from '@mikro-orm/postgresql'; // or any other driver package\nimport { EntityManager } from '@mikro-orm/postgresql';\n\nconst orm = await MikroORM.init<PostgreSqlDriver>({\n  // \u81ea\u52a8\u53d1\u73b0\n  entities: ['./dist/entities'], // path to our JS entities (dist), relative to `baseDir`\n  entitiesTs: ['./src/entities'], // path to our TS entities (src), relative to `baseDir`\n  // entities: ['./dist/app/**/entities'],\n  // entitiesTs: ['./src/app/**/entities'],\n  // entities: ['./dist/app/**/entities/*.entity.js'],\n  // entitiesTs: ['./src/app/**/entities/*.entity.ts'],\n\n  // \u624b\u52a8\u914d\u7f6e\n  entities: [Author, Book, BookTag, Publisher, Test],\n  discovery: { disableDynamicFileAccess: true },\n\n  dbName: 'my-db-name',\n  type: 'postgresql',\n});\nconst em = orm.em as EntityManager;\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://mikro-orm.io/docs/configuration#using-environment-variables"}),"https://mikro-orm.io/docs/configuration#using-environment-variables"))),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npm add -D @mikro-orm/cli\n# mikro-orm.config.js\nnpx mikro-orm\n\nmikro-orm generate-entities\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"mikro-orm.config.ts",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u4f9d\u8d56 ts-node")))),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"@Entity({ abstract: true })\nexport abstract class MinimalBaseEntity<Entity extends MinimalBaseEntity<any>> extends BaseEntity<Entity, 'id'> {\n  @PrimaryKey({ type: 'text', defaultRaw: 'public.gen_ulid()' })\n  id!: string;\n\n  //@PrimaryKey({ type: 'uuid', defaultRaw: 'uuid_generate_v4()' })\n  @PrimaryKey({ type: 'uuid', defaultRaw: 'gen_random_uuid()' })\n  uid!: string;\n\n  @Property()\n  createdAt: Date = new Date();\n\n  @Property({ type: 'timestamptz', defaultRaw: 'current_timestamp' })\n  createdAt!: Date;\n\n  @Property({ onUpdate: () => new Date() })\n  updatedAt: Date = new Date();\n}\n")))}g.isMDXComponent=!0}}]);