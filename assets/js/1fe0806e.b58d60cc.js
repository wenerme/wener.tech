/*! For license information please see 1fe0806e.b58d60cc.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[92692],{80132:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>o,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var s=t(2488),r=t(62780);const a={title:"glauth"},l="glauth",i={id:"service/auth/ldap/glauth",title:"glauth",description:"- glauth/glauth",source:"@site/../notes/service/auth/ldap/glauth.md",sourceDirName:"service/auth/ldap",slug:"/service/auth/ldap/glauth",permalink:"/notes/service/auth/ldap/glauth",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/auth/ldap/glauth.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1681281594,formattedLastUpdatedAt:"Apr 12, 2023",frontMatter:{title:"glauth"},sidebar:"docs",previous:{title:"Apache Directory",permalink:"/notes/service/auth/ldap/apacheds"},next:{title:"LDAP Awesome",permalink:"/notes/service/auth/ldap/awesome"}},c={},u=[{value:"SQLite",id:"sqlite",level:2},{value:"PostgreSQL",id:"postgresql",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"glauth",children:"glauth"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/glauth/glauth",children:"glauth/glauth"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"MIT, Go"}),"\n",(0,s.jsx)(n.li,{children:"LDAP server for development, home use, or CI"}),"\n",(0,s.jsx)(n.li,{children:"\u53ea\u7528\u4e8e Auth \u573a\u666f - \u53ea\u6709 user \u548c group"}),"\n",(0,s.jsx)(n.li,{children:"\u652f\u6301\u81ea\u5b9a\u4e49\u5c5e\u6027\uff0c\u4f46\u4e0d\u53ef\u4ee5\u7528\u4e8e\u641c\u7d22"}),"\n",(0,s.jsx)(n.li,{children:"\u9ed8\u8ba4 cn, ou -> user, group"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u53c2\u8003\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/glauth/glauth-postgres",children:"glauth/glauth-postgres"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/glauth/glauth-sqlite",children:"glauth/glauth-sqlite"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/sonicnkt/glauth-ui",children:"sonicnkt/glauth-ui"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'cat << CONF > config.cfg\n[backend]\n  datastore = "plugin"\n  plugin = "sqlite.so"\n  pluginhandler = "NewSQLiteHandler"\n  database = "/data/glauth.db"\n  baseDN = "dc=wener,dc=me"\n\n[ldap]\n  enabled = true\n  listen = "0.0.0.0:3893"\n[ldaps]\n  enabled = false\n[api]\n  enabled = true\n  internals = true\n  listen = "0.0.0.0:5555"\nCONF\n\ndocker run --rm -it \\\n  -v $PWD:/app/config/ \\\n  -v $PWD/data:/data \\\n  -p 3893:3893 -p 5555:5555 \\\n  --name glauth glauth/glauth-plugins\n\nsqlite3 data/glauth.db .schema\nsqlite3 data/glauth.db \'INSERT INTO groups(name, gidnumber) VALUES(\'users\', 5501);\'\nsqlite3 data/glauth.db \'INSERT INTO users(name,uidnumber,primarygroup,passsha256) VALUES("wener",1000,5501,"652c7dc687d98c9889304ed2e408c74b611e86a40caa51c4b43f1dd5913c5cd0")\'\nsqlite3 data/glauth.db \'INSERT INTO capabilities(userid, action, object) VALUES(5001, "search", "ou=users,dc=wener,dc=me");\'\n\n\n\nldapsearch -LLL -H ldap://localhost:3893 \\\n   -D cn=wener,ou=users,dc=wener,dc=me -w mysecret \\\n   -x -bdc=wener,dc=me cn=wener\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"hardcode"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u4e0d\u9700\u8981\u6570\u636e\u5e93"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:'[backend]\n  datastore = "config"\n  baseDN = "dc=glauth,dc=com"\n[[users]]\n  name = "hackers"\n  uidnumber = 5001\n  primarygroup = 5501\n  passsha256 = "6478579e37aff45f013e14eeb30b3cc56c72ccdc310123bcdf53e0333e3f416a"   # dogood\n  sshkeys = [ "ssh-dss AAAAB3..." ]\n[[users]]\n  name = "uberhackers"\n  uidnumber = 5006\n  primarygroup = 5501\n  passbcrypt = "243261243130244B62463462656F7265504F762E794F324957746D656541326B4B46596275674A79336A476845764B616D65446169784E41384F4432"   # dogood\n[[groups]]\n  name = "superheros"\n  gidnumber = 5501\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/glauth/glauth/blob/master/v2/sample-simple.cfg",children:"https://github.com/glauth/glauth/blob/master/v2/sample-simple.cfg"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ini",children:'debug = true\n# syslog = true\n# structuredlog = true\n# \u914d\u7f6e\u70ed\u52a0\u8f7d - \u4e0d\u652f\u6301 [ldap], [ldaps], [backend], [api]\n# watchconfig = true\n# yubikeyclientid = "yubi-api-clientid"\n# yubikeysecret = "yubi-api-secret"\n\n[ldap]\n  enabled = true\n  listen = "0.0.0.0:3893"\n[ldaps]\n# to enable ldaps genrerate a certificate, eg. with:\n# openssl req -x509 -newkey rsa:4096 -keyout glauth.key -out glauth.crt -days 365 -nodes -subj \'/CN=`hostname`\'\n  enabled = false\n  listen = "0.0.0.0:3894"\n  cert = "glauth.crt"\n  key = "glauth.key"\n\n[backend]\n  datastore = "config"\n  baseDN = "dc=glauth,dc=com"\n  nameformat = "cn"\n  groupformat = "ou"\n\n# REST API\n[api]\n  enabled = true\n  internals = true # debug application performance\n  tls = false # enable TLS for production!!\n  listen = "0.0.0.0:5555"\n  cert = "cert.pem"\n  key = "key.pem"\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["datastore\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"config"}),"\n",(0,s.jsx)(n.li,{children:"ldap - \u6307\u5411\u5df2\u6709\u7684 LDAP"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sqlite",children:"SQLite"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE users (\n\tid INTEGER PRIMARY KEY,\n\tname TEXT NOT NULL,\n\tuidnumber INTEGER NOT NULL,\n\tprimarygroup INTEGER NOT NULL,\n\tothergroups TEXT DEFAULT '',\n\tgivenname TEXT DEFAULT '',\n\tsn TEXT DEFAULT '',\n\tmail TEXT DEFAULT '',\n\tloginshell TYEXT DEFAULT '',\n\thomedirectory TEXT DEFAULT '',\n\tdisabled SMALLINT  DEFAULT 0,\n\tpasssha256 TEXT DEFAULT '',\n\tpassbcrypt TEXT DEFAULT '',\n\totpsecret TEXT DEFAULT '',\n\tyubikey TEXT DEFAULT '',\n\tsshkeys TEXT DEFAULT '',\n\tcustattr TEXT DEFAULT '{}');\nCREATE UNIQUE INDEX idx_user_name on users(name);\nCREATE TABLE groups (id INTEGER PRIMARY KEY, name TEXT NOT NULL, gidnumber INTEGER NOT NULL);\nCREATE UNIQUE INDEX idx_group_name on groups(name);\nCREATE TABLE includegroups (id INTEGER PRIMARY KEY, parentgroupid INTEGER NOT NULL, includegroupid INTEGER NOT NULL);\nCREATE TABLE capabilities (id INTEGER PRIMARY KEY, userid INTEGER NOT NULL, action TEXT NOT NULL, object TEXT NOT NULL);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"postgresql",children:"PostgreSQL"})]})}function o(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},38088:(e,n,t)=>{var s=t(96651),r=Symbol.for("react.element"),a=Symbol.for("react.fragment"),l=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function u(e,n,t){var s,a={},u=null,d=null;for(s in void 0!==t&&(u=""+t),void 0!==n.key&&(u=""+n.key),void 0!==n.ref&&(d=n.ref),n)l.call(n,s)&&!c.hasOwnProperty(s)&&(a[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===a[s]&&(a[s]=n[s]);return{$$typeof:r,type:e,key:u,ref:d,props:a,_owner:i.current}}n.Fragment=a,n.jsx=u,n.jsxs=u},2488:(e,n,t)=>{e.exports=t(38088)},62780:(e,n,t)=>{t.d(n,{I:()=>i,M:()=>l});var s=t(96651);const r={},a=s.createContext(r);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);