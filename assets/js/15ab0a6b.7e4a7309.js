"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[3433],{49613:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(59496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),c=p(n),f=i,k=c["".concat(u,".").concat(f)]||c[f]||m[f]||a;return n?r.createElement(k,l(l({ref:t},s),{},{components:n})):r.createElement(k,l({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=c;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},75342:function(e,t,n){n.r(t),n.d(t,{assets:function(){return _},contentTitle:function(){return f},default:function(){return N},frontMatter:function(){return c},metadata:function(){return k},toc:function(){return g}});var r=n(49613),i=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,s=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,m=(e,t)=>{for(var n in t||(t={}))u.call(t,n)&&s(e,n,t[n]);if(o)for(var n of o(t))p.call(t,n)&&s(e,n,t[n]);return e};const c={title:"io_uring"},f="io_uring",k={unversionedId:"os/linux/network/io_uring",id:"os/linux/network/io_uring",title:"io_uring",description:"Zero Copy, ring bazed communication channel.",source:"@site/../notes/os/linux/network/io_uring.md",sourceDirName:"os/linux/network",slug:"/os/linux/network/io_uring",permalink:"/notes/os/linux/network/io_uring",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/network/io_uring.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1667302770,formattedLastUpdatedAt:"Nov 1, 2022",frontMatter:{title:"io_uring"},sidebar:"docs",previous:{title:"interfaces",permalink:"/notes/os/linux/network/interfaces"},next:{title:"IPRoute2",permalink:"/notes/os/linux/network/iproute2"}},_={},g=[],d={toc:g};function N(e){var t,n=e,{components:i}=n,s=((e,t)=>{var n={};for(var r in e)u.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=m(m({},d),s),a(t,l({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("h1",m({},{id:"io_uring"}),"io_uring"),(0,r.kt)("p",null,"Zero Copy, ring bazed communication channel."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Linux v5.1 - 2019-03-03"),(0,r.kt)("li",{parentName:"ul"},"\u573a\u666f",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"userspace <-> kernel \u6570\u636e\u4ea4\u4e92"),(0,r.kt)("li",{parentName:"ul"},"async io"))),(0,r.kt)("li",{parentName:"ul"},"SQ - Submission Queue - ",(0,r.kt)("inlineCode",{parentName:"li"},"struct io_uring_sqe"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5e94\u7528"),(0,r.kt)("li",{parentName:"ul"},"\u7ef4\u62a4 tail, kernel \u6d88\u8d39 head"))),(0,r.kt)("li",{parentName:"ul"},"CQ - Completion Queue - ",(0,r.kt)("inlineCode",{parentName:"li"},"struct io_uring_cqe"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Kernel"),(0,r.kt)("li",{parentName:"ul"},"\u7ef4\u62a4 tail, \u5e94\u7528 \u6d88\u8d39 head")))),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-c"}),"int io_uring_setup(u32 nentries, struct io_uring_params *p);\nint io_uring_enter(int ring_fd, u32 to_submit, u32 min_complete, u32 flags, sigset_t *sigset);\n\nstruct io_uring_params {\n  __u32 sq_entries;\n  __u32 cq_entries;\n  __u32 flags;\n  __u32 sq_thread_cpu;\n  __u32 sq_thread_idle;\n  __u32 features;\n  __u32 resv[4];\n  struct io_sqring_offsets sq_off;\n  struct io_cqring_offsets cq_off;\n};\n\nstruct io_sqring_offsets {\n  __u32 head;\n  __u32 tail;\n  __u32 ring_mask;\n  __u32 ring_entries;\n  __u32 flags;\n  __u32 dropped;\n  __u32 array;\n  __u32 resv1;\n  __u64 resv2;\n};\n\n#define IORING_OFF_SQ_RING 0ULL\n#define IORING_OFF_CQ_RING 0x8000000ULL\n#define IORING_OFF_SQES 0x10000000ULL\n\n// \u901a\u8fc7 mmap \u5efa\u7acb\u901a\u9053\nsq->ring_ptr = mmap(\n  0,sq->ring_sz,\n  PROT_READ|PROT_WRITE|MAP_SHARED|MAP_POPULATE,\n  ring_fd,\n  IORING_OFF_SQ_RING\n  );\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"opcode",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"nop"),(0,r.kt)("li",{parentName:"ul"},"readv, writev, fsync, read_fixed, write_fixed"),(0,r.kt)("li",{parentName:"ul"},"poll_add, poll_remove, sync_file_range, sendmsg, recvmsg, timeout"))),(0,r.kt)("li",{parentName:"ul"},"liburing - \u7b80\u5316\u64cd\u4f5c"),(0,r.kt)("li",{parentName:"ul"},"Golang",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/golang/go/issues/31908"}),"go#31908"),"\ninternal/poll: transparently support new linux io_uring interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/dshulyak/uring"}),"dshulyak/uring")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/godzie44/go-uring"}),"godzie44/go-uring")))),(0,r.kt)("li",{parentName:"ul"},"used by",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"[btrfs]"," Linux 6.1 \u652f\u6301 io_uring",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6027\u80fd\u63d0\u5347\u660e\u663e"))),(0,r.kt)("li",{parentName:"ul"},"zfs \u652f\u6301 io_uring \u63a5\u53e3"),(0,r.kt)("li",{parentName:"ul"},"Rust, C++ IO executors"),(0,r.kt)("li",{parentName:"ul"},"Ceph blustore"),(0,r.kt)("li",{parentName:"ul"},"libuv"),(0,r.kt)("li",{parentName:"ul"},"Postgres",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://github.com/anarazel/postgres/tree/aio"}),"https://github.com/anarazel/postgres/tree/aio")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://anarazel.de/talks/2020-01-31-fosdem-aio/aio.pdf"}),"https://anarazel.de/talks/2020-01-31-fosdem-aio/aio.pdf")))),(0,r.kt)("li",{parentName:"ul"},"RocksDB, MyRocks"),(0,r.kt)("li",{parentName:"ul"},"TyrDB, DragonflyDB"))),(0,r.kt)("li",{parentName:"ul"},"aio 500K iops/core"),(0,r.kt)("li",{parentName:"ul"},"io_uring 1-2M iops/core - 2-4x"),(0,r.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://git.kernel.dk/fio"}),"https://git.kernel.dk/fio")),(0,r.kt)("li",{parentName:"ul"},"2019 ",(0,r.kt)("a",m({parentName:"li"},{href:"https://kernel.dk/io_uring.pdf"}),"https://kernel.dk/io_uring.pdf")),(0,r.kt)("li",{parentName:"ul"},"2022 ",(0,r.kt)("a",m({parentName:"li"},{href:"https://kernel.dk/io_uring-whatsnew.pdf"}),"https://kernel.dk/io_uring-whatsnew.pdf")),(0,r.kt)("li",{parentName:"ul"},"January 15, 2019 ",(0,r.kt)("a",m({parentName:"li"},{href:"https://lwn.net/Articles/776703/"}),"https://lwn.net/Articles/776703/"),"\nRinging in a new asynchronous I/O API"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://lwn.net/Articles/779472/"}),"https://lwn.net/Articles/779472/")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://man.archlinux.org/man/io_uring.7.en"}),"https://man.archlinux.org/man/io_uring.7.en")),(0,r.kt)("li",{parentName:"ul"},"Kernel Recipes 2019 - Faster IO through io_uring ",(0,r.kt)("a",m({parentName:"li"},{href:"https://youtu.be/-5T4Cjw46ys"}),"https://youtu.be/-5T4Cjw46ys")),(0,r.kt)("li",{parentName:"ul"},"Windows 11 ioring",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",m({parentName:"li"},{href:"https://windows-internals.com/ioring-vs-io_uring-a-comparison-of-windows-and-linux-implementations/"}),"IoRing vs. io_uring: a comparison of Windows and Linux implementations"))))))))}N.isMDXComponent=!0}}]);