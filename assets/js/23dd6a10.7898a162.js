"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[18072],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function u(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):u(u({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),b=c(r),f=o,m=b["".concat(p,".").concat(f)]||b[f]||s[f]||i;return r?n.createElement(m,u(u({ref:t},l),{},{components:r})):n.createElement(m,u({ref:t},l))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,u=new Array(i);u[0]=b;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:o,u[1]=a;for(var c=2;c<i;c++)u[c]=r[c];return n.createElement.apply(null,u)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},16200:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return l},default:function(){return b}});var n=r(22122),o=r(19756),i=(r(67294),r(3905)),u=["components"],a={title:"KubeVirt"},p=void 0,c={unversionedId:"devops/kubernetes/app/kubevirt",id:"devops/kubernetes/app/kubevirt",isDocsHomePage:!1,title:"KubeVirt",description:"- kubevirt/kubevirt",source:"@site/notes/devops/kubernetes/app/kubevirt.md",sourceDirName:"devops/kubernetes/app",slug:"/devops/kubernetes/app/kubevirt",permalink:"/notes/devops/kubernetes/app/kubevirt",editUrl:"https://github.com/wenerme/wener/edit/master/notes/devops/kubernetes/app/kubevirt.md",version:"current",frontMatter:{title:"KubeVirt"},sidebar:"docs",previous:{title:"kubed",permalink:"/notes/devops/kubernetes/app/kubed"},next:{title:"Lens",permalink:"/notes/devops/kubernetes/app/lens"}},l=[],s={toc:l};function b(e){var t=e.components,r=(0,o.Z)(e,u);return(0,i.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/kubevirt/kubevirt"},"kubevirt/kubevirt"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301 QEMU"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u5bb9\u5668\u8fd0\u884c\u65f6 docker, crio/runv"))),(0,i.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://kubevirt.io/2020/Multiple-Network-Attachments-with-bridge-CNI.html"},"Multiple Network Attachments with bridge CNI"))))))}b.isMDXComponent=!0}}]);