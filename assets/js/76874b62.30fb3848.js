"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[48011],{49613:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return s}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=m(n),s=a,k=d["".concat(p,".").concat(s)]||d[s]||u[s]||l;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23252:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return d},metadata:function(){return k},toc:function(){return N}});var r=n(49613),a=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,c=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))p.call(t,n)&&c(e,n,t[n]);if(o)for(var n of o(t))m.call(t,n)&&c(e,n,t[n]);return e};const d={title:"semver"},s="semver",k={unversionedId:"dev/practice/semver",id:"dev/practice/semver",title:"semver",description:"- semver.org",source:"@site/../notes/dev/practice/semver.md",sourceDirName:"dev/practice",slug:"/dev/practice/semver",permalink:"/notes/dev/practice/semver",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/dev/practice/semver.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1675953425,formattedLastUpdatedAt:"Feb 9, 2023",frontMatter:{title:"semver"},sidebar:"docs",previous:{title:"OpenSource Awesome",permalink:"/notes/dev/opensource"},next:{title:"HTTP 2",permalink:"/notes/dev/protocol/http2"}},f={},N=[{value:"Conventional Commits",id:"conventional-commits",level:2}],v={toc:N};function g(e){var t,n=e,{components:a}=n,c=((e,t)=>{var n={};for(var r in e)p.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&o)for(var r of o(e))t.indexOf(r)<0&&m.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=u(u({},v),c),l(t,i({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",u({},{id:"semver"}),"semver"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://semver.org/"}),"semver.org")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/semver/semver"}),"semver/semver"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://raw.githubusercontent.com/semver/semver/master/semver.svg"}),"semver.svg")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://0ver.org/"}),"0ver")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/changesets/changesets"}),"changesets/changesets")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://calver.org/"}),"https://calver.org/")," Calendar Versioning")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{}),"([1-9]\\d*|0).([1-9]\\d*|0).([1-9]\\d*|0)\nmajor        minor        patch\n\npre-release:\n-\n0|[1-9]\\d*|\\d*[a-zA-Z-][a-zA-Z0-9-]*\n.\n0|[1-9]\\d*|\\d*[a-zA-Z-][a-zA-Z0-9-]*\n\nbuild:\n+\n[a-zA-Z0-9-]*\n.\n[a-zA-Z0-9-]*\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",u({parentName:"tr"},{align:null}),"range"),(0,r.kt)("th",u({parentName:"tr"},{align:null}),"type"),(0,r.kt)("th",u({parentName:"tr"},{align:null}),"cond"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"*")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"X-Range"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=0.0.0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"1.2.3 - 2.3.4")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Hyphen Range"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=1.2.3 <=2.3.4"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"1.2.3 - 2")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Hyphen Range"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=1.2.3 <3.0.0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"1.*")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"X-Range"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=1.0.0 <2.0.0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"1.2.*")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"X-Ranges"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=1.2.0 <1.3.0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"~1.2.3")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Tilde Ranges"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=1.2.3 <1.3.0"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},"^1.2.3")),(0,r.kt)("td",u({parentName:"tr"},{align:null}),"Caret Ranges"),(0,r.kt)("td",u({parentName:"tr"},{align:null}),(0,r.kt)("inlineCode",{parentName:"td"},">=1.2.3 <2.0.0"))))),(0,r.kt)("h2",u({},{id:"conventional-commits"}),"Conventional Commits"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{}),"<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"type",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"fix, feat"),(0,r.kt)("li",{parentName:"ul"},"build, chore, ci, docs, style, refactor, perf, test"),(0,r.kt)("li",{parentName:"ul"},"revert + Refs commit-id"))),(0,r.kt)("li",{parentName:"ul"},"BREAKING CHANGE footer \u63cf\u8ff0\u53d8\u5316 \u6216 ",(0,r.kt)("inlineCode",{parentName:"li"},"<type>[scope]!"))),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{}),"fix: abc\n\nzyx\n\nReviewed-by: Z\nRefs: #123\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://conventionalcommits.org/"}),"conventionalcommits"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/conventional-changelog/standard-version"}),"conventional-changelog/standard-version"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u751f\u6210 CHANGELOG")))))))}g.isMDXComponent=!0}}]);