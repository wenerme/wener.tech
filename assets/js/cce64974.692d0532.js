"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[25900],{49613:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return m}});var r=t(59496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),c=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(d.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(t),f=o,m=u["".concat(d,".").concat(f)]||u[f]||p[f]||a;return t?r.createElement(m,i(i({ref:n},l),{},{components:t})):r.createElement(m,i({ref:n},l))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var d in n)hasOwnProperty.call(n,d)&&(s[d]=n[d]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},77233:function(e,n,t){t.r(n),t.d(n,{assets:function(){return h},contentTitle:function(){return v},default:function(){return _},frontMatter:function(){return m},metadata:function(){return b},toc:function(){return y}});var r=t(49613),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,d=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,l=(e,n,t)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))d.call(n,t)&&l(e,t,n[t]);if(s)for(var t of s(n))c.call(n,t)&&l(e,t,n[t]);return e},p=(e,n)=>a(e,i(n)),f=(e,n)=>{var t={};for(var r in e)d.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&s)for(var r of s(e))n.indexOf(r)<0&&c.call(e,r)&&(t[r]=e[r]);return t};const m={title:"ERC721"},v="ERC-721",b={unversionedId:"blockchain/eth/eip-721",id:"blockchain/eth/eip-721",title:"ERC721",description:"- NFT \u6807\u51c6",source:"@site/../notes/blockchain/eth/eip-721.md",sourceDirName:"blockchain/eth",slug:"/blockchain/eth/eip-721",permalink:"/notes/blockchain/eth/eip-721",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/blockchain/eth/eip-721.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1659031280,formattedLastUpdatedAt:"Jul 28, 2022",frontMatter:{title:"ERC721"},sidebar:"docs",previous:{title:"ERC-20",permalink:"/notes/blockchain/eth/eip-20"},next:{title:"EIP-777",permalink:"/notes/blockchain/eth/eip-777"}},h={},y=[{value:"\u83b7\u53d6\u6240\u6709 Token",id:"\u83b7\u53d6\u6240\u6709-token",level:2}],w={toc:y},k="wrapper";function _(e){var n=e,{components:t}=n,o=f(n,["components"]);return(0,r.kt)(k,p(u(u({},w),o),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",u({},{id:"erc-721"}),"ERC-721"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NFT \u6807\u51c6"),(0,r.kt)("li",{parentName:"ul"},"\u76f8\u5173 EIP",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"[EIP-2981]",": NFT Royalty Standard"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://erc721.org/"}),"https://erc721.org/"))),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-solidity"}),'/// ERC-165 0x80ac58cd.\ninterface ERC721 /* is ERC165 */ {\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /// owner \u6709\u591a\u5c11\u4e2a NFT\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /// NTF \u7684 owner\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /// \u8f6c\u8ba9 NTF \u6240\u6709\u6743\n    /// \u4f1a\u786e\u8ba4 _to \u5b9e\u73b0 IERC721Receiver - onERC721Received(address,address,uint256,bytes)\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;\n\n    /// \u540c\u5e26 data \u7684 safeTransferFrom - data \u9ed8\u8ba4\u4e3a \u7a7a\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /// \u8f6c\u8ba9 NTF \u6240\u6709\u6743\n    /// msg.sender \u4e3a owner \u6216 \u6279\u51c6\u5730\u5740\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /// \u6279\u51c6 _approved \u8fdb\u884c\u64cd\u4f5c\n    /// \u4e8b\u4ef6: Approval\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /// \u6279\u51c6 _operator \u64cd\u4f5c\u6240\u6709 NTF\n    /// \u4e8b\u4ef6: ApprovalForAll\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function getApproved(uint256 _tokenId) external view returns (address);\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n\n/// ERC-165 0x150b7a02.\ninterface ERC721TokenReceiver {\n    /// transfer \u5230\u5408\u7ea6\u7684\u56de\u8c03\n    function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) external returns(bytes4);\n}\n\n/// \u53ef\u9009\u5143\u6570\u636e\u6269\u5c55\u63a5\u53e3\n/// ERC-165 0x5b5e139f\ninterface ERC721Metadata /* is ERC721 */ {\n    /// @notice A descriptive name for a collection of NFTs in this contract\n    function name() external view returns (string _name);\n\n    /// @notice An abbreviated name for NFTs in this contract\n    function symbol() external view returns (string _symbol);\n\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n    /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n    ///  3986. The URI may point to a JSON file that conforms to the "ERC721\n    ///  Metadata JSON Schema".\n    function tokenURI(uint256 _tokenId) external view returns (string);\n}\n\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\ninterface ERC721Enumerable /* is ERC721 */ {\n    /// @notice Count NFTs tracked by this contract\n    /// @return A count of valid NFTs tracked by this contract, where each one of\n    ///  them has an assigned and queryable owner not equal to the zero address\n    function totalSupply() external view returns (uint256);\n\n    /// @notice Enumerate valid NFTs\n    /// @dev Throws if `_index` >= `totalSupply()`.\n    /// @param _index A counter less than `totalSupply()`\n    /// @return The token identifier for the `_index`th NFT,\n    ///  (sort order not specified)\n    function tokenByIndex(uint256 _index) external view returns (uint256);\n\n    /// @notice Enumerate NFTs assigned to an owner\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\n    ///  `_owner` is the zero address, representing invalid NFTs.\n    /// @param _owner An address where we are interested in NFTs owned by them\n    /// @param _index A counter less than `balanceOf(_owner)`\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\n    ///   (sort order not specified)\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\n}\n')),(0,r.kt)("h1",u({},{id:"faq"}),"FAQ"),(0,r.kt)("h2",u({},{id:"\u83b7\u53d6\u6240\u6709-token"}),"\u83b7\u53d6\u6240\u6709 Token"),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-js"}),"const myContract = new web3.eth.Contract(abiJson, contractAddress);\nmyContract\n  .getPastEvents('Transfer', {\n    filter: {\n      _from: '0x0000000000000000000000000000000000000000',\n    },\n    fromBlock: 0,\n  })\n  .then((events) => {\n    for (let event of events) {\n      console.log(event.returnValues._tokenId);\n    }\n  });\n")))}_.isMDXComponent=!0}}]);