"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[10036],{49613:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return k}});var r=n(59496);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),u=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return r.createElement(c.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,c=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),m=u(n),k=a,f=m["".concat(c,".").concat(k)]||m[k]||s[k]||l;return n?r.createElement(f,o(o({ref:e},p),{},{components:n})):r.createElement(f,o({ref:e},p))}));function k(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},63587:function(t,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return k},default:function(){return g},frontMatter:function(){return m},metadata:function(){return f},toc:function(){return b}});var r=n(49613),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,p=(t,e,n)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,s=(t,e)=>{for(var n in e||(e={}))c.call(e,n)&&p(t,n,e[n]);if(i)for(var n of i(e))u.call(e,n)&&p(t,n,e[n]);return t};const m={title:"act"},k="act",f={unversionedId:"service/forge/act",id:"service/forge/act",title:"act",description:"- nektos/act",source:"@site/../notes/service/forge/act.md",sourceDirName:"service/forge",slug:"/service/forge/act",permalink:"/notes/service/forge/act",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/act.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1684666307,formattedLastUpdatedAt:"May 21, 2023",frontMatter:{title:"act"},sidebar:"docs",previous:{title:"Forge",permalink:"/notes/service/forge/"},next:{title:"athens",permalink:"/notes/service/forge/athens"}},d={},b=[],N={toc:b};function g(t){var e,n=t,{components:a}=n,p=((t,e)=>{var n={};for(var r in t)c.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&i)for(var r of i(t))e.indexOf(r)<0&&u.call(t,r)&&(n[r]=t[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(e=s(s({},N),p),l(e,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",s({},{id:"act"}),"act"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",s({parentName:"li"},{href:"https://github.com/nektos/act"}),"nektos/act"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"MIT, Golang"),(0,r.kt)("li",{parentName:"ul"},"\u672c\u5730\u8fd0\u884c Github Action")))),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"brew install act\n\nact -l                   # list jobs & events\nact workflow_dispatch -l # list jobs for event\nact -j test -l           # list events for job\n\nact                                         # \u8fd0\u884c push \u4e8b\u4ef6\u5173\u8054 job\nact pull_request                            # \u8fd0\u884c pull_request \u4e8b\u4ef6\u5173\u8054 job\nact -j lint -W .github/workflows/checks.yml # \u9650\u5b9a\u8fd0\u884c\u7684 job\nact -n                                      # dry run\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$PWD/.actrc"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"~/.actrc"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6bcf\u884c\u4e00\u4e2a flag"))),(0,r.kt)("li",{parentName:"ul"},"--artifact-server-path /tmp/artifacts"),(0,r.kt)("li",{parentName:"ul"},"-s GITHUB_TOKEN="),(0,r.kt)("li",{parentName:"ul"},"~/.cache/actcache"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"-P ubuntu-latest=-self-hosted")," - \u672c\u5730\u8fd0\u884c",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"windows-latest"),(0,r.kt)("li",{parentName:"ul"},"macos-latest=-self-hosted"))),(0,r.kt)("li",{parentName:"ul"},"GITHUB_WORKSPACE=",(0,r.kt)("inlineCode",{parentName:"li"},"$HOME/.cache/act/$ID/hostexecutor"))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",s({parentName:"tr"},{align:null}),"flag"),(0,r.kt)("th",s({parentName:"tr"},{align:null}),"for"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"--env-file ENVFILE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"-s KEY=VALUE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"secret")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"--secret-file ENVFILE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"--input KEY=VALUE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"--input-file ENVFILE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"-C,--directory ."),(0,r.kt)("td",s({parentName:"tr"},{align:null}),"\u5de5\u4f5c\u76ee\u5f55")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"-P,--platform IMAGE"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"-a,--actor nektos/act"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",s({parentName:"tr"},{align:null}),"--container-daemon-socket unix:///var/run/docker.sock"),(0,r.kt)("td",s({parentName:"tr"},{align:null}))))),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-yaml"}),"# act \u5ffd\u7565\u67d0\u4e2a step\n- name: Some step\n  if: ${{ !env.ACT }}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{}),"# \u6620\u5c04 image\n-P ubuntu-18.04=nektos/act-environments-ubuntu:18.04 -P ubuntu-latest=ubuntu:latest -P ubuntu-16.04=node:16-buster-slim\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"macOS orbstack ",(0,r.kt)("inlineCode",{parentName:"li"},"unix:///Users/$USER/.orbstack/run/docker.sock")),(0,r.kt)("li",{parentName:"ul"},"\u4f1a mount \u7684\u5185\u5bb9"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"$DOCKER_SOCK:/var/run/docker.sock"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Gitea")),(0,r.kt)("pre",null,(0,r.kt)("code",s({parentName:"pre"},{className:"language-txt",metastring:'title=".actrc"',title:'".actrc"'}),"-W .gitea/workflows/\n-P host=-self-hosted\n-P alpine=quay.io/wener/base:latest\n")))}g.isMDXComponent=!0}}]);