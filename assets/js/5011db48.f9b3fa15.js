"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[6794],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return v}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},m=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),u=l(r),v=o,f=u["".concat(s,".").concat(v)]||u[v]||p[v]||i;return r?n.createElement(f,c(c({ref:t},m),{},{components:r})):n.createElement(f,c({ref:t},m))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,c=new Array(i);c[0]=u;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var l=2;l<i;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},41771:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return m},default:function(){return u}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),c=["components"],a={title:"MicroVM"},s=void 0,l={unversionedId:"os/virt/microvm",id:"os/virt/microvm",isDocsHomePage:!1,title:"MicroVM",description:"* \u662f\u4ec0\u4e48\uff1f",source:"@site/notes/os/virt/microvm.md",sourceDirName:"os/virt",slug:"/os/virt/microvm",permalink:"/notes/os/virt/microvm",editUrl:"https://github.com/wenerme/wener/edit/master/notes/os/virt/microvm.md",tags:[],version:"current",frontMatter:{title:"MicroVM"},sidebar:"docs",previous:{title:"Libvirt Daemon",permalink:"/notes/os/virt/libvirtd"},next:{title:"QEMU",permalink:"/notes/os/virt/qemu"}},m=[],p={toc:m};function u(e){var t=e.components,r=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"\u662f\u4ec0\u4e48\uff1f",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"QEMU \u53d7 Firecracker \u542f\u53d1\u5f00\u53d1\u7684\u4e00\u79cd\u673a\u5668\u7c7b\u578b"),(0,i.kt)("li",{parentName:"ul"},"\u6700\u5c0f\u5316 - \u4e0d\u652f\u6301 PCI \u548c ACPI"),(0,i.kt)("li",{parentName:"ul"},"\u9002\u7528\u4e8e\u77ed\u671f\u8fd0\u884c Guest"))),(0,i.kt)("li",{parentName:"ul"},"QEMU ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/qemu/qemu/blob/master/docs/system/i386/microvm.rst"},"microvm"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# with Legacy\nqemu-system-x86_64 -M microvm \\\n   -enable-kvm -cpu host -m 512m -smp 2 \\\n   -kernel vmlinux -append "earlyprintk=ttyS0 console=ttyS0 root=/dev/vda" \\\n   -nodefaults -no-user-config -nographic \\\n   -serial stdio \\\n   -drive id=test,file=test.img,format=raw,if=none \\\n   -device virtio-blk-device,drive=test \\\n   -netdev tap,id=tap0,script=no,downscript=no \\\n   -device virtio-net-device,netdev=tap0\n\n# no Legacy\nqemu-system-x86_64 \\\n   -M microvm,x-option-roms=off,pit=off,pic=off,isa-serial=off,rtc=off \\\n   -enable-kvm -cpu host -m 512m -smp 2 \\\n   -kernel vmlinux -append "console=hvc0 root=/dev/vda" \\\n   -nodefaults -no-user-config -nographic \\\n   -chardev stdio,id=virtiocon0 \\\n   -device virtio-serial-device \\\n   -device virtconsole,chardev=virtiocon0 \\\n   -drive id=test,file=test.img,format=raw,if=none \\\n   -device virtio-blk-device,drive=test \\\n   -netdev tap,id=tap0,script=no,downscript=no \\\n   -device virtio-net-device,netdev=tap0\n')))}u.isMDXComponent=!0}}]);