"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[33085],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,g=m["".concat(s,".").concat(d)]||m[d]||c[d]||l;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},91479:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return m}});var r=n(22122),a=n(19756),l=(n(67294),n(3905)),o=["components"],i={title:"Pg SQL \u5e38\u89c1\u95ee\u9898"},s="PostgreSQL SQL \u95ee\u9898",u={unversionedId:"db/relational/postgresql/postgresql-sql-faq",id:"db/relational/postgresql/postgresql-sql-faq",isDocsHomePage:!1,title:"Pg SQL \u5e38\u89c1\u95ee\u9898",description:"- JSON Functions and Operators",source:"@site/notes/db/relational/postgresql/postgresql-sql-faq.md",sourceDirName:"db/relational/postgresql",slug:"/db/relational/postgresql/postgresql-sql-faq",permalink:"/notes/db/relational/postgresql/postgresql-sql-faq",editUrl:"https://github.com/wenerme/wener/edit/master/notes/db/relational/postgresql/postgresql-sql-faq.md",version:"current",frontMatter:{title:"Pg SQL \u5e38\u89c1\u95ee\u9898"},sidebar:"docs",previous:{title:"Postgresql Scale",permalink:"/notes/db/relational/postgresql/postgresql-scale"},next:{title:"\u53ef\u66f4\u65b0\u89c6\u56fe",permalink:"/notes/db/relational/postgresql/postgresql-view"}},p=[{value:"JSON \u6570\u7ec4\u8f6c\u884c",id:"json-\u6570\u7ec4\u8f6c\u884c",children:[]},{value:"JSON \u5bf9\u8c61\u904d\u5386",id:"json-\u5bf9\u8c61\u904d\u5386",children:[]},{value:"\u9759\u6001\u6570\u636e\u884c",id:"\u9759\u6001\u6570\u636e\u884c",children:[]},{value:"\u5206\u7ec4\u805a\u5408",id:"\u5206\u7ec4\u805a\u5408",children:[]},{value:"function vs procedure",id:"function-vs-procedure",children:[]},{value:"\u51fd\u6570\u8fd4\u56de\u5f71\u54cd\u884c",id:"\u51fd\u6570\u8fd4\u56de\u5f71\u54cd\u884c",children:[]},{value:"\u65f6\u95f4\u65e5\u671f\u5904\u7406",id:"\u65f6\u95f4\u65e5\u671f\u5904\u7406",children:[]},{value:"\u6b63\u5219",id:"\u6b63\u5219",children:[]},{value:"\u751f\u6210\u5e26\u524d\u7f00\u7684 UUID \u4e3b\u952e",id:"\u751f\u6210\u5e26\u524d\u7f00\u7684-uuid-\u4e3b\u952e",children:[]},{value:"\u63a8\u8350\u4e3b\u952e\u521b\u5efa\u65b9\u5f0f",id:"\u63a8\u8350\u4e3b\u952e\u521b\u5efa\u65b9\u5f0f",children:[]},{value:"Operator",id:"operator",children:[]}],c={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"postgresql-sql-\u95ee\u9898"},"PostgreSQL SQL \u95ee\u9898"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/functions-json.html"},"JSON Functions and Operators")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PRIMARY KEY")," ~= ",(0,l.kt)("inlineCode",{parentName:"li"},"UNIQUE")," + ",(0,l.kt)("inlineCode",{parentName:"li"},"NOT NULL"))),(0,l.kt)("h2",{id:"json-\u6570\u7ec4\u8f6c\u884c"},"JSON \u6570\u7ec4\u8f6c\u884c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'-- \u8f6c\u6362\u4e3a\u5355\u884c JSON \u5bf9\u8c61\nselect * from json_array_elements(\'[{"a":1},{"a":2}]\');\n\n-- \u540c\u65f6\u63d0\u53d6\u5217\nselect * from json_to_recordset(\'[{"a":1,"b":"first"},{"a":2,"b":"second"}]\') as (a int, b text);\n')),(0,l.kt)("h2",{id:"json-\u5bf9\u8c61\u904d\u5386"},"JSON \u5bf9\u8c61\u904d\u5386"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'-- (key,value)\nselect * from json_each_text(\'{"a":1,"b":2}\') as d;\n')),(0,l.kt)("h2",{id:"\u9759\u6001\u6570\u636e\u884c"},"\u9759\u6001\u6570\u636e\u884c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT *\nFROM (VALUES (1, 'one'), (2, 'two'), (3, 'three')) AS t (num, letter);\n")),(0,l.kt)("h2",{id:"\u5206\u7ec4\u805a\u5408"},"\u5206\u7ec4\u805a\u5408"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/cube.html"},"cube")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/devel/queries-table-expressions.html#QUERIES-GROUPING-SETS"},"GROUPING SETS, CUBE, ROLLUP")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"rollup(a,b,c)")," => ",(0,l.kt)("inlineCode",{parentName:"li"},"grouping sets((a,b,c),(a,b),(a),())")),(0,l.kt)("li",{parentName:"ul"},"cube((a),(b),(c)) grouping sets((a,b,c),(a,b),(a,c),(a),(b,c),(b),(c),())")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"GROUP BY a, b, c\n-- \u5bf9\u7b49\n\n\nROLLUP ( a, b , c)\n-- \u5bf9\u7b49\nGROUPING SETS (\n    ( a, b, c ),\n    ( a, b    ),\n    ( a       ),\n    (         )\n)\n\nCUBE ( a, b, c )\n-- \u5bf9\u7b49\nGROUPING SETS (\n    ( a, b, c ),\n    ( a, b    ),\n    ( a,    c ),\n    ( a       ),\n    (    b, c ),\n    (    b    ),\n    (       c ),\n    (         )\n)\n\nCUBE ( (a, b), (c, d) )\n-- \u5bf9\u7b49\nGROUPING SETS (\n    ( a, b, c, d ),\n    ( a, b       ),\n    (       c, d ),\n    (            )\n)\n")),(0,l.kt)("h2",{id:"function-vs-procedure"},"function vs procedure"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"function",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u4ee5\u64cd\u4f5c\u4e8b\u7269"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 SELECT \u8c03\u7528"))),(0,l.kt)("li",{parentName:"ul"},"procedure",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6ca1\u6709\u8fd4\u56de\u503c"),(0,l.kt)("li",{parentName:"ul"},"\u6709 INOUT \u53c2\u6570"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5 commit \u548c rollback"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528 CALL \u8c03\u7528"),(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u53ef\u4ee5\u5d4c\u5957\u5230\u5176\u4ed6 DDL - SELECT,INSERT,UPDATE,DELETE")))),(0,l.kt)("h2",{id:"\u51fd\u6570\u8fd4\u56de\u5f71\u54cd\u884c"},"\u51fd\u6570\u8fd4\u56de\u5f71\u54cd\u884c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"get diagnostics cnt = row_count;\nreturn cnt;\n")),(0,l.kt)("h2",{id:"\u65f6\u95f4\u65e5\u671f\u5904\u7406"},"\u65f6\u95f4\u65e5\u671f\u5904\u7406"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"to_timestamp \u8f6c timestamptz"),(0,l.kt)("li",{parentName:"ul"},"to_date \u8f6c date"),(0,l.kt)("li",{parentName:"ul"},"to_char \u8f6c text"),(0,l.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.postgresql.org/docs/current/functions-formatting.html"},"Data Type Formatting Functions"))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT TO_DATE('20170103','YYYYMMDD');\nSELECT TO_DATE('2020\u5e747\u670828\u65e5','YYYY\u5e74MM\u6708DD\u65e5');\nSELECT TO_CHAR(TO_DATE('2020\u5e747\u670828\u65e5','YYYY\u5e74MM\u6708DD\u65e5'),'YYYY-MM-DD');\n")),(0,l.kt)("h2",{id:"\u6b63\u5219"},"\u6b63\u5219"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"regexp_match(string, pattern [, flags ]) returns text[]\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"flags",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"g - global")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT (regexp_match('200\u4e07\u4eba\u6c11\u5e01', '[\\d.]+'))[1];\nSELECT (regexp_match('200\u4e07\u4eba\u6c11\u5e01', '\\D+$'))[1];\n")),(0,l.kt)("h2",{id:"\u751f\u6210\u5e26\u524d\u7f00\u7684-uuid-\u4e3b\u952e"},"\u751f\u6210\u5e26\u524d\u7f00\u7684 UUID \u4e3b\u952e"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f8b\u5982\u7528\u4e8e GraphQL \u901a\u8fc7 ID \u5224\u65ad\u7c7b\u578b")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"create table test\n(\n    id    text default 'test-' || public.gen_random_uuid() primary key,\n    value text\n);\n\ninsert into test(value)\nvalues ('test');\n\nselect *\nfrom test;\n")),(0,l.kt)("h2",{id:"\u63a8\u8350\u4e3b\u952e\u521b\u5efa\u65b9\u5f0f"},"\u63a8\u8350\u4e3b\u952e\u521b\u5efa\u65b9\u5f0f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u6bd4 serial",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6709\u5f52\u5c5e\u5173\u7cfb"),(0,l.kt)("li",{parentName:"ul"},"\u66f4\u52a0\u89c4\u8303")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE TABLE users (\n   id bigint GENERATED ALWAYS AS IDENTITY PRIMARY KEY\n);\n-- \u4e5f\u53ef\u4ee5\u9488\u5bf9\u751f\u6210\u8bbe\u7f6e\u66f4\u591a\u53c2\u6570\nCREATE TABLE users (\n   id bigint GENERATED ALWAYS AS IDENTITY\n             (MINVALUE 0 START WITH 0 CACHE 20)\n             PRIMARY KEY,\n);\n")),(0,l.kt)("h2",{id:"operator"},"Operator"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"-- \u64cd\u4f5c\u7b26\u4e5f\u662f\u51fd\u6570\nSELECT 3 OPERATOR(pg_catalog.+) 4;\n")))}m.isMDXComponent=!0}}]);