"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[65],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var i=r.createContext({}),p=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),h=p(t),m=a,d=h["".concat(i,".").concat(m)]||h[m]||u[m]||s;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,o=new Array(s);o[0]=h;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<s;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},69730:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var r=t(87462),a=t(63366),s=(t(67294),t(3905)),o=["components"],l={title:"clash"},i=void 0,p={unversionedId:"service/network/clash",id:"service/network/clash",title:"clash",description:"- Dreamacro/clash",source:"@site/notes/service/network/clash.md",sourceDirName:"service/network",slug:"/service/network/clash",permalink:"/notes/service/network/clash",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/network/clash.md",tags:[],version:"current",frontMatter:{title:"clash"},sidebar:"docs",previous:{title:"Avahi",permalink:"/notes/service/network/avahi"},next:{title:"coturn",permalink:"/notes/service/network/coturn"}},c={},u=[{value:"conf",id:"conf",level:2}],h={toc:u};function m(e){var n=e.components,t=(0,a.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash"},"Dreamacro/clash"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"GPLv3, Golang"),(0,s.kt)("li",{parentName:"ul"},"rule-based tunnel"))),(0,s.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/juewuy/ShellClash"},"juewuy/ShellClash")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://clash.gitbook.io/doc/"},"https://clash.gitbook.io/doc/")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/vernesong/OpenClash"},"vernesong/OpenClash")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash/releases/tag/premium"},"premium"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"tun,\u811a\u672c,rule-providers,tracing")))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"# golang\ngo install github.com/Dreamacro/clash@latest\n\n# Docker\n# https://hub.docker.com/r/dreamacro/clash\n# https://github.com/Dreamacro/clash/blob/master/Dockerfile\ndocker run --rm -it \\\n  --name clash dreamacro/clash\n")),(0,s.kt)("h2",{id:"conf"},"conf"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"mode",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"rule - \u57fa\u4e8e\u89c4\u5219\u8def\u7531"),(0,s.kt)("li",{parentName:"ul"},"global - \u5168\u5c40\u8def\u7531\u5230\u5355\u4e2a\u51fa\u53e3"),(0,s.kt)("li",{parentName:"ul"},"direct - \u4e0d\u8def\u7531\u76f4\u63a5\u8bbf\u95ee"))),(0,s.kt)("li",{parentName:"ul"},"proxies",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"type",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"ss"),(0,s.kt)("li",{parentName:"ul"},"ssr"),(0,s.kt)("li",{parentName:"ul"},"vmess"),(0,s.kt)("li",{parentName:"ul"},"socks5"),(0,s.kt)("li",{parentName:"ul"},"http"),(0,s.kt)("li",{parentName:"ul"},"snell"),(0,s.kt)("li",{parentName:"ul"},"trojan")))))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},'# Port of HTTP(S) proxy server on the local end\nport: 7890\n\n# Port of SOCKS5 proxy server on the local end\nsocks-port: 7891\n\n# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)\n# redir-port: 7892\n\n# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)\n# tproxy-port: 7893\n\n# HTTP(S) and SOCKS4(A)/SOCKS5 server on the same port\n# mixed-port: 7890\n\n# authentication of local SOCKS5/HTTP(S) server\n# authentication:\n#  - "user1:pass1"\n#  - "user2:pass2"\n\n# Set to true to allow connections to the local-end server from\n# other LAN IP addresses\nallow-lan: false\n\n# This is only applicable when `allow-lan` is `true`\n# \'*\': bind all IP addresses\n# 192.168.122.11: bind a single IPv4 address\n# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address\nbind-address: \'*\'\n\n# Clash router working mode\n# rule: rule-based packet routing\n# global: all packets will be forwarded to a single endpoint\n# direct: directly forward the packets to the Internet\nmode: rule\n\n# Clash by default prints logs to STDOUT\n# info / warning / error / debug / silent\nlog-level: info\n\n# When set to false, resolver won\'t translate hostnames to IPv6 addresses\nipv6: false\n\n# RESTful web API listening address\nexternal-controller: 127.0.0.1:9090\n\n# A relative path to the configuration directory or an absolute path to a\n# directory in which you put some static web resource. Clash core will then\n# serve it at `http://{{external-controller}}/ui`.\nexternal-ui: folder\n\n# Secret for the RESTful API (optional)\n# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`\n# ALWAYS set a secret if RESTful API is listening on 0.0.0.0\n# secret: ""\n\n# Outbound interface name\ninterface-name: en0\n\n# fwmark on Linux only\nrouting-mark: 6666\n\n# Static hosts for DNS server and connection establishment (like /etc/hosts)\n#\n# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)\n# Non-wildcard domain names have a higher priority than wildcard domain names\n# e.g. foo.example.com > *.example.com > .example.com\n# P.S. +.foo.com equals to .foo.com and foo.com\nhosts:\n  # \'*.clash.dev\': 127.0.0.1\n  # \'.dev\': 127.0.0.1\n  # \'alpha.clash.dev\': \'::1\'\n\nprofile:\n  # Store the `select` results in $HOME/.config/clash/.cache\n  # set false If you don\'t want this behavior\n  # when two different configurations have groups with the same name, the selected values are shared\n  store-selected: false\n\n  # persistence fakeip\n  store-fake-ip: true\n\n# DNS server settings\n# This section is optional. When not present, the DNS server will be disabled.\ndns:\n  enable: false\n  listen: 0.0.0.0:53\n  # ipv6: false # when the false, response to AAAA questions will be empty\n\n  # These nameservers are used to resolve the DNS nameserver hostnames below.\n  # Specify IP addresses only\n  default-nameserver:\n    - 114.114.114.114\n    - 8.8.8.8\n  enhanced-mode: redir-host # or fake-ip\n  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR\n  # use-hosts: true # lookup hosts and return IP record\n\n  # Hostnames in this list will not be resolved with fake IPs\n  # i.e. questions to these domain names will always be answered with their\n  # real IP addresses\n  # fake-ip-filter:\n  #   - \'*.lan\'\n  #   - localhost.ptlogin2.qq.com\n\n  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.\n  # All DNS questions are sent directly to the nameserver, without proxies\n  # involved. Clash answers the DNS question with the first result gathered.\n  nameserver:\n    - 114.114.114.114 # default value\n    - 8.8.8.8 # default value\n    - tls://dns.rubyfish.cn:853 # DNS over TLS\n    - https://1.1.1.1/dns-query # DNS over HTTPS\n    - dhcp://en0 # dns from dhcp\n\n  # When `fallback` is present, the DNS server will send concurrent requests\n  # to the servers in this section along with servers in `nameservers`.\n  # The answers from fallback servers are used when the GEOIP country\n  # is not `CN`.\n  # fallback:\n  #   - tcp://1.1.1.1\n\n  # If IP addresses resolved with servers in `nameservers` are in the specified\n  # subnets below, they are considered invalid and results from `fallback`\n  # servers are used instead.\n  #\n  # IP address resolved with servers in `nameserver` is used when\n  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.\n  #\n  # If `fallback-filter.geoip` is false, results from `nameserver` nameservers\n  # are always used if not match `fallback-filter.ipcidr`.\n  #\n  # This is a countermeasure against DNS pollution attacks.\n  # fallback-filter:\n  #   geoip: true\n  #   geoip-code: CN\n  #   ipcidr:\n  #     - 240.0.0.0/4\n  #   domain:\n  #     - \'+.google.com\'\n  #     - \'+.facebook.com\'\n  #     - \'+.youtube.com\'\n\n  # Lookup domains via specific nameservers\n  # nameserver-policy:\n  #   \'www.baidu.com\': \'114.114.114.114\'\n  #   \'+.internal.crop.com\': \'10.0.0.1\'\n\nproxies:\n  # Shadowsocks\n  # The supported ciphers (encryption methods):\n  #   aes-128-gcm aes-192-gcm aes-256-gcm\n  #   aes-128-cfb aes-192-cfb aes-256-cfb\n  #   aes-128-ctr aes-192-ctr aes-256-ctr\n  #   rc4-md5 chacha20-ietf xchacha20\n  #   chacha20-ietf-poly1305 xchacha20-ietf-poly1305\n  - name: "ss1"\n    type: ss\n    server: server\n    port: 443\n    cipher: chacha20-ietf-poly1305\n    password: "password"\n    # udp: true\n\n  - name: "ss2"\n    type: ss\n    server: server\n    port: 443\n    cipher: chacha20-ietf-poly1305\n    password: "password"\n    plugin: obfs\n    plugin-opts:\n      mode: tls # or http\n      # host: bing.com\n\n  - name: "ss3"\n    type: ss\n    server: server\n    port: 443\n    cipher: chacha20-ietf-poly1305\n    password: "password"\n    plugin: v2ray-plugin\n    plugin-opts:\n      mode: websocket # no QUIC now\n      # tls: true # wss\n      # skip-cert-verify: true\n      # host: bing.com\n      # path: "/"\n      # mux: true\n      # headers:\n      #   custom: value\n\n  # vmess\n  # cipher support auto/aes-128-gcm/chacha20-poly1305/none\n  - name: "vmess"\n    type: vmess\n    server: server\n    port: 443\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    # udp: true\n    # tls: true\n    # skip-cert-verify: true\n    # servername: example.com # priority over wss host\n    # network: ws\n    # ws-opts:\n    #   path: /path\n    #   headers:\n    #     Host: v2ray.com\n    #   max-early-data: 2048\n    #   early-data-header-name: Sec-WebSocket-Protocol\n\n  - name: "vmess-h2"\n    type: vmess\n    server: server\n    port: 443\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    network: h2\n    tls: true\n    h2-opts:\n      host:\n        - http.example.com\n        - http-alt.example.com\n      path: /\n\n  - name: "vmess-http"\n    type: vmess\n    server: server\n    port: 443\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    # udp: true\n    # network: http\n    # http-opts:\n    #   # method: "GET"\n    #   # path:\n    #   #   - \'/\'\n    #   #   - \'/video\'\n    #   # headers:\n    #   #   Connection:\n    #   #     - keep-alive\n\n  - name: vmess-grpc\n    server: server\n    port: 443\n    type: vmess\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    network: grpc\n    tls: true\n    servername: example.com\n    # skip-cert-verify: true\n    grpc-opts:\n      grpc-service-name: "example"\n\n  # socks5\n  - name: "socks"\n    type: socks5\n    server: server\n    port: 443\n    # username: username\n    # password: password\n    # tls: true\n    # skip-cert-verify: true\n    # udp: true\n\n  # http\n  - name: "http"\n    type: http\n    server: server\n    port: 443\n    # username: username\n    # password: password\n    # tls: true # https\n    # skip-cert-verify: true\n    # sni: custom.com\n\n  # Snell\n  # Beware that there\'s currently no UDP support yet\n  - name: "snell"\n    type: snell\n    server: server\n    port: 44046\n    psk: yourpsk\n    # version: 2\n    # obfs-opts:\n      # mode: http # or tls\n      # host: bing.com\n\n  # Trojan\n  - name: "trojan"\n    type: trojan\n    server: server\n    port: 443\n    password: yourpsk\n    # udp: true\n    # sni: example.com # aka server name\n    # alpn:\n    #   - h2\n    #   - http/1.1\n    # skip-cert-verify: true\n\n  - name: trojan-grpc\n    server: server\n    port: 443\n    type: trojan\n    password: "example"\n    network: grpc\n    sni: example.com\n    # skip-cert-verify: true\n    udp: true\n    grpc-opts:\n      grpc-service-name: "example"\n\n  - name: trojan-ws\n    server: server\n    port: 443\n    type: trojan\n    password: "example"\n    network: ws\n    sni: example.com\n    # skip-cert-verify: true\n    udp: true\n    # ws-opts:\n      # path: /path\n      # headers:\n      #   Host: example.com\n\n  # ShadowsocksR\n  # The supported ciphers (encryption methods): all stream ciphers in ss\n  # The supported obfses:\n  #   plain http_simple http_post\n  #   random_head tls1.2_ticket_auth tls1.2_ticket_fastauth\n  # The supported supported protocols:\n  #   origin auth_sha1_v4 auth_aes128_md5\n  #   auth_aes128_sha1 auth_chain_a auth_chain_b\n  - name: "ssr"\n    type: ssr\n    server: server\n    port: 443\n    cipher: chacha20-ietf\n    password: "password"\n    obfs: tls1.2_ticket_auth\n    protocol: auth_sha1_v4\n    # obfs-param: domain.tld\n    # protocol-param: "#"\n    # udp: true\n\nproxy-groups:\n  # relay chains the proxies. proxies shall not contain a relay. No UDP support.\n  # Traffic: clash <-> http <-> vmess <-> ss1 <-> ss2 <-> Internet\n  - name: "relay"\n    type: relay\n    proxies:\n      - http\n      - vmess\n      - ss1\n      - ss2\n\n  # url-test select which proxy will be used by benchmarking speed to a URL.\n  - name: "auto"\n    type: url-test\n    proxies:\n      - ss1\n      - ss2\n      - vmess1\n    # tolerance: 150\n    # lazy: true\n    url: \'http://www.gstatic.com/generate_204\'\n    interval: 300\n\n  # fallback selects an available policy by priority. The availability is tested by accessing an URL, just like an auto url-test group.\n  - name: "fallback-auto"\n    type: fallback\n    proxies:\n      - ss1\n      - ss2\n      - vmess1\n    url: \'http://www.gstatic.com/generate_204\'\n    interval: 300\n\n  # load-balance: The request of the same eTLD+1 will be dial to the same proxy.\n  - name: "load-balance"\n    type: load-balance\n    proxies:\n      - ss1\n      - ss2\n      - vmess1\n    url: \'http://www.gstatic.com/generate_204\'\n    interval: 300\n    # strategy: consistent-hashing # or round-robin\n\n  # select is used for selecting proxy or proxy group\n  # you can use RESTful API to switch proxy is recommended for use in GUI.\n  - name: Proxy\n    type: select\n    # disable-udp: true\n    proxies:\n      - ss1\n      - ss2\n      - vmess1\n      - auto\n\n  # direct to another infacename or fwmark, also supported on proxy\n  - name: en1\n    type: select\n    interface-name: en1\n    routing-mark: 6667\n    proxies:\n      - DIRECT\n\n  - name: UseProvider\n    type: select\n    use:\n      - provider1\n    proxies:\n      - Proxy\n      - DIRECT\n\nproxy-providers:\n  provider1:\n    type: http\n    url: "url"\n    interval: 3600\n    path: ./provider1.yaml\n    health-check:\n      enable: true\n      interval: 600\n      # lazy: true\n      url: http://www.gstatic.com/generate_204\n  test:\n    type: file\n    path: /test.yaml\n    health-check:\n      enable: true\n      interval: 36000\n      url: http://www.gstatic.com/generate_204\n\nrules:\n  - DOMAIN-SUFFIX,google.com,auto\n  - DOMAIN-KEYWORD,google,auto\n  - DOMAIN,google.com,auto\n  - DOMAIN-SUFFIX,ad.com,REJECT\n  - SRC-IP-CIDR,192.168.1.201/32,DIRECT\n  # optional param "no-resolve" for IP rules (GEOIP, IP-CIDR, IP-CIDR6)\n  - IP-CIDR,127.0.0.0/8,DIRECT\n  - GEOIP,CN,DIRECT\n  - DST-PORT,80,DIRECT\n  - SRC-PORT,7777,DIRECT\n  - RULE-SET,apple,REJECT # Premium only\n  - MATCH,auto\n')))}m.isMDXComponent=!0}}]);