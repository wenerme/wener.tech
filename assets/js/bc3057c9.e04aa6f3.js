"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[50404],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return s}});var r=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),d=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},u=function(t){var e=d(t.components);return r.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,u=i(t,["components","mdxType","originalType","parentName"]),c=d(n),s=a,k=c["".concat(p,".").concat(s)]||c[s]||m[s]||l;return n?r.createElement(k,o(o({ref:e},u),{},{components:n})):r.createElement(k,o({ref:e},u))}));function s(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var d=2;d<l;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},76587:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return u},default:function(){return c}});var r=n(87462),a=n(63366),l=(n(67294),n(3905)),o=["components"],i={title:"deno"},p=void 0,d={unversionedId:"web/deno/README",id:"web/deno/README",title:"deno",description:"- denoland/deno",source:"@site/notes/web/deno/README.md",sourceDirName:"web/deno",slug:"/web/deno/",permalink:"/notes/web/deno/",editUrl:"https://github.com/wenerme/wener/edit/master/notes/web/deno/README.md",tags:[],version:"current",frontMatter:{title:"deno"},sidebar:"docs",previous:{title:"CORS",permalink:"/notes/web/cors"},next:{title:"Design Aewsome",permalink:"/notes/web/design/design-awesome"}},u=[{value:"Node vs Deno",id:"node-vs-deno",children:[],level:2}],m={toc:u};function c(t){var e=t.components,n=(0,a.Z)(t,o);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/denoland/deno"},"denoland/deno"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MIT, Rust"),(0,l.kt)("li",{parentName:"ul"},"\u57fa\u4e8e V8"),(0,l.kt)("li",{parentName:"ul"},"\u5185\u7f6e \u5305\u7ba1\u7406\u3001tsc\u3001fmt\u3001test\u3001bundle\u3001lint\u3001lsp \u7b49\u529f\u80fd"),(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7 url \u5f15\u7528\u5916\u90e8\u6a21\u5757 - \u8fd0\u884c\u65f6\u4e0b\u8f7d"),(0,l.kt)("li",{parentName:"ul"},"\u4e25\u683c\u7684\u6743\u9650\u7ba1\u7406 - \u6c99\u76d2\u529f\u80fd\u5f3a"),(0,l.kt)("li",{parentName:"ul"},"\u529f\u80fd\u7406\u5ff5\u7c7b\u4f3c\u4e8e golang",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"stdlib \u53c2\u7167 go \u5b9e\u73b0"))))),(0,l.kt)("li",{parentName:"ul"},"Deno \u5168\u5c40\u547d\u540d\u7a7a\u95f4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// HTTP \u670d\u52a1\u5668\nconst listener = Deno.listen({ port: 8000 });\nconsole.log('http://localhost:8000/');\n\nfor await (const conn of listener) {\n  serve(conn);\n}\n\nasync function serve(conn: Deno.Conn) {\n  for await (const { respondWith } of Deno.serveHttp(conn)) {\n    respondWith(new Response('Hello world'));\n  }\n}\n")),(0,l.kt)("h2",{id:"node-vs-deno"},"Node vs Deno"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Node"),(0,l.kt)("th",{parentName:"tr",align:null},"Deno"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"npm i -g"),(0,l.kt)("td",{parentName:"tr",align:null},"deno install")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"npm i"),(0,l.kt)("td",{parentName:"tr",align:null},"not needed")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"node"),(0,l.kt)("td",{parentName:"tr",align:null},"deno run")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"eslint"),(0,l.kt)("td",{parentName:"tr",align:null},"deno lint")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"prettier"),(0,l.kt)("td",{parentName:"tr",align:null},"deno fmt")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rollup/webpack/..."),(0,l.kt)("td",{parentName:"tr",align:null},"deno bundle")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"package.json"),(0,l.kt)("td",{parentName:"tr",align:null},"Deno.json, import_map.json")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tsc"),(0,l.kt)("td",{parentName:"tr",align:null},"not needed - built-in")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"documentation"),(0,l.kt)("td",{parentName:"tr",align:null},"deno doc")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"jest/ava/tap/..."),(0,l.kt)("td",{parentName:"tr",align:null},"deno test")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"benchmarks"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://deno.land/std/testing/bench.ts"},"https://deno.land/std/testing/bench.ts"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nodemon"),(0,l.kt)("td",{parentName:"tr",align:null},"deno run/lint/test --watch")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nexe/pkg"),(0,l.kt)("td",{parentName:"tr",align:null},"deno compile")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"npm explain"),(0,l.kt)("td",{parentName:"tr",align:null},"deno info")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"nvm"),(0,l.kt)("td",{parentName:"tr",align:null},"deno upgrade")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tsserver"),(0,l.kt)("td",{parentName:"tr",align:null},"deno lsp")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"c8/istanbul"),(0,l.kt)("td",{parentName:"tr",align:null},"deno coverage")))))}c.isMDXComponent=!0}}]);