"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[29432],{49613:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(59496);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(n),d=i,k=c["".concat(s,".").concat(d)]||c[d]||u[d]||o;return n?r.createElement(k,a(a({ref:t},p),{},{components:n})):r.createElement(k,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var m=2;m<o;m++)a[m]=n[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},76708:function(e,t,n){n.r(t),n.d(t,{assets:function(){return y},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return c},metadata:function(){return k},toc:function(){return f}});var r=n(49613),i=Object.defineProperty,o=Object.defineProperties,a=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,p=(e,t,n)=>t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,u=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&p(e,n,t[n]);if(l)for(var n of l(t))m.call(t,n)&&p(e,n,t[n]);return e};const c={title:"mikro-orm"},d="mikro-orm",k={unversionedId:"web/nodejs/mikro-orm",id:"web/nodejs/mikro-orm",title:"mikro-orm",description:"- mikro-orm/mikro-orm",source:"@site/../notes/web/nodejs/mikro-orm.md",sourceDirName:"web/nodejs",slug:"/web/nodejs/mikro-orm",permalink:"/notes/web/nodejs/mikro-orm",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/web/nodejs/mikro-orm.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1693122196,formattedLastUpdatedAt:"Aug 27, 2023",frontMatter:{title:"mikro-orm"},sidebar:"docs",previous:{title:"ffi-napi",permalink:"/notes/web/nodejs/ffi-napi"},next:{title:"Nodejs Awesome",permalink:"/notes/web/nodejs/awesome"}},y={},f=[{value:"RequestContext",id:"requestcontext",level:2},{value:"Transaction query already complete",id:"transaction-query-already-complete",level:2}],b={toc:f};function g(e){var t,n=e,{components:i}=n,p=((e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&l)for(var r of l(e))t.indexOf(r)<0&&m.call(e,r)&&(n[r]=e[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(t=u(u({},b),p),o(t,a({components:i,mdxType:"MDXLayout"}))),(0,r.kt)("h1",u({},{id:"mikro-orm"}),"mikro-orm"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/mikro-orm/mikro-orm"}),"mikro-orm/mikro-orm"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"MIT, Typescript"),(0,r.kt)("li",{parentName:"ul"},"ORM"),(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301 Data Mapper, Unit of Work, Identity Map"),(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301 MongoDB, MySQL, MariaDB, PostgreSQL, SQLite"))),(0,r.kt)("li",{parentName:"ul"},"@mikro-orm/knex",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Builder")))),(0,r.kt)("admonition",u({},{type:"tip"}),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"mikroorm \u4f7f\u7528 knex\uff0c knex pool \u9ed8\u8ba4 ",(0,r.kt)("inlineCode",{parentName:"li"},"min:2, max:10")))),(0,r.kt)("admonition",u({},{type:"note"}),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"\u4e0d\u652f\u6301\u591a\u6001 ",(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/mikro-orm/mikro-orm/issues/706"}),"#706")))),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# mongodb, mysql, mariadb, sqlite\nnpm add @mikro-orm/core @mikro-orm/postgresql\n")),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-json",metastring:'title="tsconfig.json"',title:'"tsconfig.json"'}),'{\n  "experimentalDecorators": true,\n  "emitDecoratorMetadata": true,\n  "esModuleInterop": true\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"import type { PostgreSqlDriver } from '@mikro-orm/postgresql'; // or any other driver package\nimport { EntityManager } from '@mikro-orm/postgresql';\n\nconst orm = await MikroORM.init<PostgreSqlDriver>({\n  // \u81ea\u52a8\u53d1\u73b0\n  entities: ['./dist/entities'], // path to our JS entities (dist), relative to `baseDir`\n  entitiesTs: ['./src/entities'], // path to our TS entities (src), relative to `baseDir`\n  // entities: ['./dist/app/**/entities'],\n  // entitiesTs: ['./src/app/**/entities'],\n  // entities: ['./dist/app/**/entities/*.entity.js'],\n  // entitiesTs: ['./src/app/**/entities/*.entity.ts'],\n\n  // \u624b\u52a8\u914d\u7f6e\n  entities: [Author, Book, BookTag, Publisher, Test],\n  discovery: { disableDynamicFileAccess: true },\n\n  dbName: 'my-db-name',\n  type: 'postgresql',\n});\nconst em = orm.em as EntityManager;\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://mikro-orm.io/docs/configuration#using-environment-variables"}),"https://mikro-orm.io/docs/configuration#using-environment-variables"))),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"npm add -D @mikro-orm/cli\n# mikro-orm.config.js\nnpx mikro-orm\n\nmikro-orm generate-entities\n\n# by dlx\npnpm --package=@mikro-orm/cli dlx mikro-orm\n\nNODE_OPTIONS='--loader tsx' pnpm mikro-orm generate-entities --schema public -p ./src/server/db/entities/ -d\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"mikro-orm.config.ts",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4f9d\u8d56 ts-node")))),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"export type MinimalOptionalEntityFields =\n  | 'id'\n  | 'uid'\n  | 'createdAt'\n  | 'updatedAt'\n  | 'sid'\n  | 'tid'\n  | 'attributes'\n  | 'properties'\n  | 'extensions';\n\n@Entity({ abstract: true })\nexport abstract class MinimalBaseEntity<Entity extends MinimalBaseEntity<any>> extends BaseEntity<Entity, 'id'> {\n  // \u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49 - Base \u91cc\u7684\u5b9a\u4e49\u65e0\u6cd5\u8986\u76d6\n  [OptionalProps]?: MinimalOptionalEntityFields;\n\n  @PrimaryKey({ type: 'text', defaultRaw: 'public.gen_ulid()' })\n  id!: string;\n\n  //@PrimaryKey({ type: 'uuid', defaultRaw: 'uuid_generate_v4()' })\n  @PrimaryKey({ type: 'uuid', defaultRaw: 'gen_random_uuid()' })\n  uid!: string;\n\n  @Property()\n  createdAt: Date = new Date();\n\n  @Property({ type: 'timestamptz', defaultRaw: 'current_timestamp' })\n  createdAt!: Date;\n\n  @Property({ onUpdate: () => new Date() })\n  updatedAt: Date = new Date();\n}\n")),(0,r.kt)("h2",u({},{id:"requestcontext"}),"RequestContext"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Middleware ",(0,r.kt)("inlineCode",{parentName:"li"},"RequestContext.create(orm.em, next)"))),(0,r.kt)("h1",u({},{id:"faq"}),"FAQ"),(0,r.kt)("h2",u({},{id:"transaction-query-already-complete"}),"Transaction query already complete"))}g.isMDXComponent=!0}}]);