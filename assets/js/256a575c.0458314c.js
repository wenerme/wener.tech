/*! For license information please see 256a575c.0458314c.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[17677],{16581:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var i=t(11527),s=t(47214);const r={title:"chan_pjsip"},o="chan_pjsip",a={id:"voip/asterisk/chan_pjsip",title:"chan_pjsip",description:"- \u57fa\u4e8e pjproject \u5b9e\u73b0\u7684 sip \u901a\u9053",source:"@site/../notes/voip/asterisk/chan_pjsip.md",sourceDirName:"voip/asterisk",slug:"/voip/asterisk/chan_pjsip",permalink:"/notes/voip/asterisk/chan_pjsip",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/voip/asterisk/chan_pjsip.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1625926581,formattedLastUpdatedAt:"Jul 10, 2021",frontMatter:{title:"chan_pjsip"},sidebar:"docs",previous:{title:"chan_iax",permalink:"/notes/voip/asterisk/chan_iax"},next:{title:"chan_sip",permalink:"/notes/voip/asterisk/chan_sip"}},d={},l=[{value:"pjsip_wizard.conf",id:"pjsip_wizardconf",level:2},{value:"pjsip.conf",id:"pjsipconf",level:2},{value:"global",id:"global",level:3},{value:"system",id:"system",level:3},{value:"acl",id:"acl",level:3},{value:"transport",id:"transport",level:3},{value:"auth",id:"auth",level:3},{value:"phoneprovr",id:"phoneprovr",level:3},{value:"endpoint",id:"endpoint",level:3},{value:"registration",id:"registration",level:3},{value:"res_pjsip_outbound_registration.c:1061 handle_registration_response: Fatal response &#39;401&#39; received from &#39;sip:192.168.1.2&#39; on registration attempt to &#39;sip:6001@192.168.2.2&#39;, stopping outbound registration",id:"res_pjsip_outbound_registrationc1061-handle_registration_response-fatal-response-401-received-from-sip19216812-on-registration-attempt-to-sip600119216822-stopping-outbound-registration",level:2},{value:"pjproject: .Error sending STUN request: Network is unreachable",id:"pjproject-error-sending-stun-request-network-is-unreachable",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"chan_pjsip",children:"chan_pjsip"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u57fa\u4e8e pjproject \u5b9e\u73b0\u7684 sip \u901a\u9053"}),"\n",(0,i.jsx)(n.li,{children:"pjsip \u529f\u80fd\u5f88\u591a\uff0c\u56e0\u6b64\u6709\u5f88\u591a\u7684 res_pjsip\uff0c\u4e5f\u6709\u5f88\u591a\u914d\u7f6e\u9879"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# \u6240\u6709 pjproject \u76f8\u5173\u6a21\u5757\nls /usr/lib/asterisk/modules | grep pj | sort\n"})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"type"}),(0,i.jsx)(n.th,{children:"meaning"}),(0,i.jsx)(n.th,{children:"desc"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"acl"}),(0,i.jsx)(n.td,{children:"Access Control List"}),(0,i.jsx)(n.td,{children:"res_pjsip_acl, acl.conf \u5f15\u7528"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"aor"}),(0,i.jsx)(n.td,{children:"Address of Record"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"auth"}),(0,i.jsx)(n.td,{children:"Authentication"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"contact"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"domain_alias"}),(0,i.jsx)(n.td,{children:"Domain Alias"}),(0,i.jsx)(n.td,{children:"\u57df\u540d\u522b\u540d"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"endpoint"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"identify"}),(0,i.jsx)(n.td,{children:"Endpoint Identification"}),(0,i.jsx)(n.td,{children:"host to endpoint"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"phoneprov"}),(0,i.jsx)(n.td,{children:"Phone Provisioning"}),(0,i.jsx)(n.td,{children:"res_pjsip_phoneprov_provider,res_phoneprov"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"registration"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"outbound SIP"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"resource_list"}),(0,i.jsx)(n.td,{children:"Resource lists"}),(0,i.jsx)(n.td,{})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"transport"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"udp,tcp,tls,ws,wss,flow"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"wizard"}),(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"\u805a\u5408\u914d\u7f6e,res_pjsip_config_wizard"})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5339\u914d\u89c4\u5219\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"From in inbound SIP -> endpoint"}),"\n",(0,i.jsx)(n.li,{children:"To in inbound SIP REGISTER -> aor"}),"\n",(0,i.jsx)(n.li,{children:"IP \u5730\u5740\u5339\u914d"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["endpoint\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"-0..1-> auth"}),"\n",(0,i.jsx)(n.li,{children:"-1..N-> transport"}),"\n",(0,i.jsxs)(n.li,{children:["-N-> aor\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5b9e\u9645\u5730\u5740\u4fe1\u606f"}),"\n",(0,i.jsx)(n.li,{children:"\u5173\u8054 MWI"}),"\n",(0,i.jsx)(n.li,{children:"-N-> contact"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["registration\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u6ce8\u518c\u5230\u5916\u90e8\u670d\u52a1 - \u76f8\u5f53\u4e8e Trunk"}),"\n",(0,i.jsx)(n.li,{children:"-0..1-> auth"}),"\n",(0,i.jsx)(n.li,{children:"-1..N-> transport"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"auth - \u7531 endpoint \u548c registration \u4f7f\u7528"}),"\n",(0,i.jsxs)(n.li,{children:["identify\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"-0..1-> endpoint"}),"\n",(0,i.jsx)(n.li,{children:"match"}),"\n",(0,i.jsx)(n.li,{children:"res_pjsip_endpoint_identifier_ip"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"acl"}),"\n",(0,i.jsx)(n.li,{children:"domain_alias"}),"\n",(0,i.jsxs)(n.li,{children:["resource_list - \u8d44\u6e90\u5217\u8868\u8ba2\u9605 - SIP \u8bbe\u5907\u8ba2\u9605 SIP \u670d\u52a1\u7aef\u63d0\u4f9b\u7684\u8d44\u6e90\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Asterisk 13+"}),"\n",(0,i.jsx)(n.li,{children:"RFC 4662"}),"\n",(0,i.jsxs)(n.li,{children:["\u4e0d\u4f7f\u7528 resource_list \u5219\u662f\u6bcf\u4e2a\u7aef\u76f4\u63a5\u8ba2\u9605\u72b6\u6001 - ",(0,i.jsx)(n.code,{children:"N*(N-1)"})," - \u670d\u52a1\u7aef\u538b\u529b\u975e\u5e38\u5927"]}),"\n",(0,i.jsx)(n.li,{children:"resource_list \u5c06\u591a\u4e2a \u5ba2\u6237\u7aef\u6216 resouece_list \u72b6\u6001\u805a\u5408\u4e3a\u4e00\u7ec4"}),"\n",(0,i.jsx)(n.li,{children:"\u4f8b\u5982 \u9500\u552e\u7ec4\u4e00\u4e2a\u8ba2\u9605\u3001\u670d\u52a1\u7ec4\u4e00\u4e2a\u8ba2\u9605"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pjsip_wizardconf",children:"pjsip_wizard.conf"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"res_pjsip_config_wizard"}),"\n",(0,i.jsx)(n.li,{children:"\u805a\u5408\u914d\u7f6e endpoint, aor, auth, identify, registration, phoneprov"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4e0d\u652f\u6301 reload"}),"\n"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[user](!)\ntype = wizard\naccepts_registrations = yes\naccepts_auth = yes\nendpoint/context = default\nendpoint/allow = !all,ulaw,gsm,g722\naor/max_contacts=5\n\n[6001](user)\ninbound_auth/username = 6001\ninbound_auth/password = 6001\n\n[trunk](!)\ntype = wizard\nsends_registrations = yes\nsends_auth = yes\nremote_hosts=192.168.1.1\nendpoint/context = default\nendpoint/allow = !all,ulaw,gsm,g722\naor/max_contacts=5\n\n[trunk-6003](trunk)\noutbound_auth/username = 6003\noutbound_auth/password = 6003\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:'[wizard]\n; outbound auth\nsends_auth=no\noutbound_auth/username=\noutbound_auth/password=\n\n; inbound auth\naccepts_auth=no\ninbound_auth/username=\ninbound_auth/password=\n\n; outbound registration\nsends_registrations=no\nsends_line_with_registrations=no\n\n; inbound registration\naccepts_registrations=no\n; accepts_registrations=yes - aor \u9759\u6001 contact\n; accepts_registrations=no - match/identify\n; remote_hosts=<ipaddress | hostname>[:port] [,<ipaddress | hostname>[:port] ]\n\noutbound_proxy=\n; endpoint/outbound_proxy\n; aor/outbound_proxy\n; registration/outbound_proxy\n\ntransport=\n\n; registrations\nserver_uri_pattern=sip:${REMOTE_HOST}\nclient_uri_pattern=sip:${USERNAME}@${REMOTE_HOST}\ncontact_pattern=sip:${REMOTE_HOST}\n\n; phoneprov\nhas_phoneprov=no\nphoneprov/MAC=\n\n; hint exten\nhas_hint=no\nhint_context=endpoint/context\n; PJSIP/<wizard_id>\nhint_exten=none\n; \u4f8b\u5982 Gosub(stdexten,${EXTEN},1(${HINT}))"\nhint_application=Dial(${HINT})\n\n; \u5b50\u5bf9\u8c61\n;endpoint/<param>\n;aor/<param>\n;inbound_auth/<param>\n;outbound_auth/<param>\n;identify/<param>\n;registration/<param>\n;phoneprov/<param>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"pjsipconf",children:"pjsip.conf"}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"pjsip.conf.sample \u4e2d\u5e76\u4e0d\u5305\u542b\u5b8c\u6574\u914d\u7f6e"}),"\n"]})}),"\n",(0,i.jsx)(n.h3,{id:"global",children:"global"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:'[global]\ntype=global\n; SIP Max Forwards header\nmax_forwards=70\n; \u9ed8\u8ba4 Asterisk PBX + \u7248\u672c\n;user_agent=Asterisk PBX\n; \u9ed8\u8ba4 \u51fa\u5c40 \u7ec8\u7aef - \u672a\u6307\u5b9a\u65f6\u4f7f\u7528\ndefault_outbound_endpoint=default_outbound_endpoint\ndebug=no\n; \u53d1\u9001 \u53cc CRLF \u4f5c\u4e3a keep-alives \u7684\u95f4\u9694 - \u5355\u4f4d \u79d2\n; \u9762\u5411\u6709\u8fde\u63a5\u4f20\u8f93\u534f\u8bae - \u4f8b\u5982 tcp websocket\nkeep_alive_interval=90\n; contacts \u5931\u6548\u68c0\u6d4b - \u5355\u4f4d\u79d2\n;contact_expiration_check_interval=30\n; \u7981\u7528\u591a \u57df\u540d \u652f\u6301\u53ef\u589e\u52a0 realtime \u5904\u7406\u6027\u80fd - \u51cf\u5c11 db \u8bf7\u6c42\ndisable_multi_domain=no\n; endpoint \u8bc6\u522b\u987a\u5e8f - ip,header,username,auth_username,anonymous\n; \u90e8\u5206\u901a\u8fc7\u6a21\u5757 res_pjsip_endpoint_identifier_* \u63d0\u4f9b\u652f\u6301\n; \u67e5\u770b\u5f53\u524d\u652f\u6301 pjsip show identifiers\nendpoint_identifier_order=ip,username,anonymous\n; \u542f\u52a8\u540e\u9a8c\u8bc1\u6240\u6709 contacts \u7684\u6700\u5927\u65f6\u95f4\n; \u5982\u679c\u5927\u4e8e qualify_frequency \u5219\u4f1a\u4f7f\u7528 qualify_frequency\n;max_initial_qualify_time=4\n; \u6307\u5b9a\u6ce8\u518c\u4e0a\u4e0b\u6587\u540e Asterisk \u4f1a\u4e3a endpoint \u7ef4\u62a4\u4e00\u4e2a NoOp \u7684 extension\n;regcontext=sipregistrations\n; \u9ed8\u8ba4\u8bed\u97f3\u90ae\u7bb1 extension - \u4f1a\u5728 NOTIFY Message-Account \u5934\u4e2d\u8fd4\u56de\n;default_voicemail_extension=asterisk\n\n; unidentified_request_* \u4ec5\u7528\u4e8e endpoint_identifier_order \u542f\u7528\u4e86 auth_username \u573a\u666f\n;\n; \u5728 unidentified_request_period \u5185\u672a\u8bc6\u522b\u7684\u8bf7\u6c42\u6b21\u6570 - \u8d85\u8fc7\u4ea7\u751f\u5b89\u5168\u4e8b\u4ef6\nunidentified_request_count=5\n; \u5355\u4f4d \u79d2\nunidentified_request_period=5\n; \u68c0\u6d4b\u6e05\u9664 \u672a\u8bc6\u522b \u7684\u95f4\u9694 - \u8d85\u8fc7\u4e24\u500d unidentified_request_period \u5219\u4f1a\u88ab\u6e05\u9664\n;unidentified_request_prune_interval=30\n\n; \u9ed8\u8ba4 \u51fa\u5c40 SIP \u7684\u7528\u6237\u540d - \u4f18\u5148\u4f7f\u7528 CallerID \u548c endpoint/from_user\n;default_from_user=asterisk\n; \u751f\u6210 auth challenge \u65f6\u7684\u9ed8\u8ba4 realm\n;default_realm=asterisk\n\n                    ; Asterisk Task Processor Queue Size\n                    ; On heavy loaded system with DB storage you may need to increase\n                    ; taskprocessor queue.\n                    ; If the taskprocessor queue size reached high water level,\n                    ; the alert is triggered.\n                    ; If the alert is set the pjsip distibutor stops processing incoming\n                    ; requests until the alert is cleared.\n                    ; The alert is cleared when taskprocessor queue size drops to the\n                    ; low water clear level.\n                    ; The next options set taskprocessor queue levels for MWI.\n;mwi_tps_queue_high=500 ; Taskprocessor high water alert trigger level.\n;mwi_tps_queue_low=450  ; Taskprocessor low water clear alert level.\n                    ; The default is -1 for 90% of high water level.\n\n                    ; Unsolicited MWI\n                    ; If there are endpoints configured with unsolicited MWI\n                    ; then res_pjsip_mwi module tries to send MWI to all endpoints on startup.\n;mwi_disable_initial_unsolicited=no ; Disable sending unsolicited mwi to all endpoints on startup.\n                    ; If disabled then unsolicited mwi will start processing\n                    ; on the endpoint\'s next contact update.\n\n; \u79fb\u9664 URI \u4e2d ; \u540e\u9762\u90e8\u5206 - \u7528\u4e8e\u517c\u5bb9\u65e7\u8bbe\u5907 \u4f8b\u5982 ITSP\nignore_uri_user_options=no\n\n; \u8bbe\u5907\u5237\u65b0\u6ce8\u518c\u4fe1\u606f\u65f6\u53d1\u9001 AMI ContactStatus \u4e8b\u4ef6\nsend_contact_status_on_update_registration=no\n\ntaskprocessor_overload_trigger=global\n                ; Set the trigger the distributor will use to detect\n                ; taskprocessor overloads.  When triggered, the distributor\n                ; will not accept any new requests until the overload has\n                ; cleared.\n                ; "global": (default) Any taskprocessor overload will trigger.\n                ; "pjsip_only": Only pjsip taskprocessor overloads will trigger.\n                ; "none":  No overload detection will be performed.\n                ; WARNING: The "none" and "pjsip_only" options should be used\n                ; with extreme caution and only to mitigate specific issues.\n                ; Under certain conditions they could make things worse.\n\n; \u5728\u652f\u6301\u573a\u666f\u53d1\u9001 norefersub \u6807\u7b7e\u8868\u793a \u652f\u6301 REFER subscription - RFC 4488\nnorefersub=yes\n'})}),"\n",(0,i.jsx)(n.h3,{id:"system",children:"system"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"[system]\ntype=system\n\n; transaction timer T1 - \u5355\u4f4d ms\ntimer_t1=500\n; transaction timer B\ntimer_b=32000\n; \u4f7f\u7528\u66f4\u77ed\u7684 SIP \u5934\u540d\u5b57\ncompact_headers=no\n; res_pjsip \u7ebf\u7a0b\u6c60\u521d\u59cb\u7ebf\u7a0b\nthreadpool_initial_size=0\n; \u7ebf\u7a0b\u6c60\u589e\u957f\nthreadpool_auto_increment=5\nthreadpool_idle_timeout=60\nthreadpool_max_size=0\n; \u51fa\u5c40\u65f6 - \u5982\u679c\u8bf7\u6c42\u8fc7\u5927 \u7981\u6b62\u81ea\u52a8\u4ece UDP \u5207\u6362\u5230 TCP - RFC 3261 section 18.1.1.\n; \u8bbe\u7f6e\u4e3a no \u53ef\u80fd\u5bfc\u81f4\u517c\u5bb9\u95ee\u9898\ndisable_tcp_switch=yes\n; \u51fa\u5c40\u65f6 - \u5982\u679c USA \u5728\u540e\u7eed 18X \u548c 2XX \u8fd4\u56de SDP \u5c5e\u6027\u5305\u542b\u4e0d\u540c\u7684 To \u4fe1\u606f\u65f6\uff0c\u8ddf\u968f\u65b0\u7684\u4fe1\u606f\n; \u4e5f\u9700\u8981\u5728 endpoint \u542f\u7528\n; \u901a\u5e38\u53d1\u751f\u5728 INVITE fork \u5230\u591a UAS \u65f6\nfollow_early_media_fork=yes\n; \u51fa\u5c40\u65f6 - \u7c7b\u4f3c follow_early_media_fork\uff0c\u66f4\u6539 port \u5c5e\u6027\n; \u4e5f\u9700\u8981\u5728 endpoint \u542f\u7528\n; \u901a\u5e38\u53d1\u751f\u5728\u4f7f\u7528\u4e0d\u540c\u7aef\u53e3 ringback \u65f6\naccept_multiple_sdp_answers=no\n\n; \u51fa\u5c40\u7981\u7528 rport\n;disable_rport=no\n"})}),"\n",(0,i.jsx)(n.h3,{id:"acl",children:"acl"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"res_pjsip_acl"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"[acl]\ntype=acl\n; List of IP ACL section names in acl conf\n;acl=\n; List of Contact ACL section names in acl conf\n;contact_acl=\n; List of Contact header addresses to deny\n;contact_deny=\n; List of Contact header addresses to permit\n;contact_permit=\n; List of IP addresses to deny access from\n;deny=\n; List of IP addresses to permit access from\n;permit=\n"})}),"\n",(0,i.jsx)(n.h3,{id:"transport",children:"transport"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"res_pjsip_transport_websocket"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:'[transport]\ntype=transport\n\n; \u4f20\u8f93\u534f\u8bae\nprotocol=udp\n; IP Address and optional port to bind to for this transport\n;bind=\n; Number of simultaneous Asynchronous Operations\nasync_operations=1\n\n; Note that for the Websocket transport the TLS configuration is configured\n; in http.conf and is applied for all HTTPS traffic.\n;\n; File containing a list of certificates to read TLS ONLY\n;ca_list_file=\n;ca_list_path=  ; Path to directory containing certificates to read TLS ONLY.\n                ; PJProject version 2.4 or higher is required for this option to\n                ; be used.\n;cert_file=     ; Certificate file for endpoint TLS ONLY\n                ; Will read .crt or .pem file but only uses cert,\n                ; a .key file must be specified via priv_key_file.\n                ; Since PJProject version 2.5: If the file name ends in _rsa,\n                ; for example "asterisk_rsa.pem", the files "asterisk_dsa.pem"\n                ; and/or "asterisk_ecc.pem" are loaded (certificate, inter-\n                ; mediates, private key), to support multiple algorithms for\n                ; server authentication (RSA, DSA, ECDSA). If the chains are\n                ; different, at least OpenSSL 1.0.2 is required.\n                ; (default: "")\n; Preferred cryptography cipher names TLS ONLY\n;cipher=\n; Method of SSL transport TLS ONLY\n;method=\n;priv_key_file= ; Private key file TLS ONLY (default: "")\n; Require verification of client certificate TLS ONLY\n;verify_client=\n; Require verification of server certificate TLS ONLY\n;verify_server=\n; Require client certificate TLS ONLY\n;require_client_cert=\n; Domain the transport comes from\n;domain=\n; External IP address to use in RTP handling\n;external_media_address=\n; External address for SIP signalling\n;external_signaling_address=\n; External port for SIP signalling\nexternal_signaling_port=0\n; \u672c\u5730\u7f51\u7edc - NAT \u65f6\u4f7f\u7528\n;local_net=\n; \u5bc6\u94a5\n;password=\n\ntos=0  ; TOS for the signalling sent over this transport\ncos=0  ; COS for the signalling sent over this transport\n\n; websocket \u8d85\u65f6\u65f6\u95f4 - \u5355\u4f4d ms\n; \u5ba2\u6237\u7aef\u8f83\u6162\u7684\u573a\u666f\u9700\u8981\u8c03\u6574\nwebsocket_write_timeout=100\n; \u662f\u5426\u5141\u8bb8\u91cd\u8f7d - \u6709\u65f6\u91cd\u8f7d\u53ef\u80fd\u5bfc\u81f4\u901a\u8bdd\u4e2d\u65ad\nallow_reload=no\n; \u5bf9\u7b49\u4f20\u8f93\n; \u5f53\u4ece\u4e00\u4e2a\u52a8\u6001 contact \u8bf7\u6c42\u8fdb\u6765\u65f6\uff0c\u8bb0\u5f55\u4f20\u8f93\u5230 uri \u53c2\u6570 x-ast-txp\n; \u8bf7\u6c42\u51fa\u53bb\u65f6\uff0c\u5982\u679c uri \u4e0d\u662f hostname \u5219\u4f1a\u4f7f\u7528\u8bb0\u5f55\u7684 x-ast-txp \u53c2\u6570\nsymmetric_transport=no\n'})}),"\n",(0,i.jsx)(n.h3,{id:"auth",children:"auth"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4e0d\u63a8\u8350 inbound \u548c outbound \u4f7f\u7528\u76f8\u540c auth"}),"\n",(0,i.jsxs)(n.li,{children:["\u7a7a realm \u5bf9 inbound \u548c outbound \u542b\u4e49\u4e0d\u540c\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["inbound\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5728\u6388\u6743\u662f\u53d1\u9001\u7ed9 peer \u4f5c\u4e3a\u6388\u6743\u7684\u4e00\u90e8\u5206"}),"\n",(0,i.jsx)(n.li,{children:"\u9ed8\u8ba4\u4e3a\u5168\u5c40\u7684 default_realm"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["outbound\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4f1a\u5339\u914d\u8fd4\u56de\u7684 realm \u6765\u8fd4\u56de auth"}),"\n",(0,i.jsx)(n.li,{children:"\u7a7a \u5339\u914d\u6240\u6709 realm"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:'[auth]\ntype=auth\n; \u7528\u6237\u540d\n;username=\n; \u6388\u6743\u7c7b\u578b userpass, md5\nauth_type=userpass\n; \u660e\u6587\u5bc6\u7801\n;password=\n; MD5 \u5bc6\u94a5\n; echo -n "myname:myrealm:mypassword" | md5sum\n; outbound \u65f6 realm \u4e0d\u80fd\u4e3a \u7a7a - \u5982\u679c\u4e3a\u7a7a\u5219\u8981\u6c42\u670d\u52a1\u7aef\u53d1\u9001 \u7a7a realm \u800c\u4e0d\u662f\u5339\u914d\u4efb\u610f\n;md5_cred=\n; outgoing \u65f6 \u7a7a \u6216 * \u90fd\u6807\u8bc6\u4f7f\u7528\u670d\u52a1\u7aef\u8fd4\u56de realm\n;realm=\n; Lifetime of a nonce\nnonce_lifetime=32\n'})}),"\n",(0,i.jsx)(n.h3,{id:"phoneprovr",children:"phoneprovr"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u96c6\u6210 res_pjsip \u548c res_phoneprov"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"[1000]\ntype = phoneprovr\nendpoint = ep1000\n; \u5fc5\u987b - \u7528\u6237\u7684 mac \u5730\u5740\nMAC = deadbeef4dad\n; \u5fc5\u987b - phoneprov profile\nPROFILE = grandstream2\n\n; \u4efb\u610f\u81ea\u5b9a\u4e49\u53d8\u91cf\nLINEKEYS = 2\nLINE = 1\nOTHERVAR = othervalue\n\n; \u4ece\u5b9a\u4e49\u7684 endpoint \u751f\u6210\u7684\u53d8\u91cf\nUSERNAME\nSECRET\nCALLERID\nDISPLAY_NAME\n; id of the phoneprov section\nLABEL\n\n; \u5176\u4ed6\u53d8\u91cf\nENDPOINT_ID\n; endpoint -> transport\nTRANSPORT_ID\n; endpoint -> auth\nAUTH_ID\n"})}),"\n",(0,i.jsx)(n.h3,{id:"endpoint",children:"endpoint"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"res_pjsip"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:'[endpoint]\ntype=endpoint\n\n; RFC3262 provisional ACK tags\n100rel=yes\naggregate_mwi=yes\n; Media Codec s to allow\n;allow=\n; RFC3578 overlap dialing support\nallow_overlap=yes\n; AoR s to be used with the endpoint\n;aors=\n; Authentication Object s associated with the endpoint\n;auth=\n; CallerID\n;callerid=\n; \u9690\u79c1\u7ea7\u522b\ncallerid_privacy=allowed_not_screened\n; \u5185\u90e8 id_tag\n;callerid_tag=\n; Dialplan context for inbound sessions\ncontext=default\n; Mitigation of direct media re INVITE glare\ndirect_media_glare_mitigation=none\n; Direct Media method type\ndirect_media_method=invite\n; Accept Connected Line updates from this endpoint\ntrust_connected_line=yes\n; Send Connected Line updates to this endpoint\n;send_connected_line=yes\nconnected_line_method=invite   ; Connected line method type.\n                                ; When set to "invite", check the remote\'s\n                                ; Allow header and if UPDATE is allowed, send\n                                ; UPDATE instead of INVITE to avoid SDP\n                                ; renegotiation.  If UPDATE is not Allowed,\n                                ; send INVITE.\n                                ; If set to "update", send UPDATE regardless\n                                ; of what the remote Allows.\n                                ; (default: "invite")\n; media may flow directly between endpoints\ndirect_media=yes\n; Disable direct media session refreshes when NAT obstructs the media session\n;disable_direct_media_on_nat=no\n; \u7981\u7528\u7f16\u7801\n;disallow=\n;dtmf_mode=rfc4733\n; SDP \u5a92\u4f53\u5730\u5740\n;media_address=\n; \u7ed1\u5b9a RTP \u4f1a\u8bdd\u5230 media_address - \u4f1a\u5bfc\u81f4\u6240\u6709RTP\u5305\u53d1\u5f80\u6307\u5b9a\u5730\u5740\nbind_rtp_to_media_address=no\n; Force use of return port\nforce_rport=yes\n; \u542f\u7528 ICE \u8f85\u52a9 NAT \u7a7f\u900f\nice_support=no\n; \u7ec8\u7aef AoR \u6807\u8bc6\u903b\u8f91 - username, auth_username, ip, header\n; header \u5728 username+realm \u5931\u8d25\u65f6\u5c1d\u8bd5 username \u5339\u914d\nidentify_by=username,ip\n; \u91cd\u5b9a\u5411\u5904\u7406\u65b9\u5f0f\n;redirect_method=user\n;mailboxes=     ; NOTIFY the endpoint when state changes for any of the specified mailboxes.\n                ; Asterisk will send unsolicited MWI NOTIFY messages to the endpoint when state\n                ; changes happen for any of the specified mailboxes. (default: "")\n;voicemail_extension= ; The voicemail extension to send in the NOTIFY Message-Account header\n                      ; (default: global/default_voicemail_extension)\n;mwi_subscribe_replaces_unsolicited=no\n                      ; An MWI subscribe will replace unsoliticed NOTIFYs\n                      ; (default: "no")\n; \u9ed8\u8ba4 MOH \u5206\u7c7b\nmoh_suggest=default\n; Pass Music On Hold through using SIP re-invites with sendonlywhen placing on hold and sendrecv when taking off hold\n;moh_passthrough=yes\n\n; \u51fa\u5c40\u6388\u6743\u5bf9\u8c61\n;outbound_auth=\n; \u51fa\u5c40\u8bf7\u6c42\u4ee3\u7406 - SIP URI\n;outbound_proxy=\n\n; \u4f7f\u7528\u6765\u6e90 IP \u5730\u5740\u7aef\u53e3\u91cd\u5199 contact\nrewrite_contact=no\n; Enforce RTP symmetric\nrtp_symmetric=no\n; Send the Diversion header conveying the diversion information to the called user agent\nsend_diversion=yes\n\n; Send the P Asserted Identity header\nsend_pai=no\n; Send the Remote Party ID header\nsend_rpid=no\n; Send connected line updates on unanswered incoming calls immediately\nrpid_immediate=no\n; Minimum session timers expiration period\ntimers_min_se=90\n; Session timers for SIP packets\ntimers=yes\n; Maximum session timer expiration period\ntimers_sess_expires=1800\n; \u9650\u5b9a\u901a\u8baf\u534f\u8bae - \u9ed8\u8ba4\u90fd\u53ef\u4ee5\n;transport=\n\n; Accept identification information received from this endpoint\ntrust_id_inbound=no\n; Send private identification details to the endpoint\ntrust_id_outbound=no\n; Use Endpoint s requested packetisation interval\nuse_ptime=no\n; \u5f3a\u5236\u4f7f\u7528 AVPF\nuse_avpf=no\n; \u5f3a\u5236\u5a92\u4f53\u52a0\u5bc6\n;media_encryption=no\n; \u5c1d\u8bd5\u52a0\u5bc6\n;media_encryption_optimistic=no\n; yes => g.726 \u5931\u8d25\u540e\u5c1d\u8bd5 g726aal2 - \u4e0e RFC3551 \u4e0d\u540c\n; \u9700\u8981 allow g726aal2\ng726_non_standard=no\n; indicate ringing inband progress\n;inband_progress=no\n\n; The numeric pickup groups for a channel\n;call_group=\n; The numeric pickup groups that a channel can pickup\n;pickup_group=\n; The named pickup groups for a channel\n;named_call_group=\n; The named pickup groups that a channel can pickup\n;named_pickup_group=\n\n; The number of in use channels which will cause busy to be returned as device state\ndevice_state_busy_at=0\n\n;t38_udptl=no   ; Whether T 38 UDPTL support is enabled or not (default: "no")\n;t38_udptl_ec=none      ; T 38 UDPTL error correction method (default: "none")\n;t38_udptl_maxdatagram=0        ; T 38 UDPTL maximum datagram size (default:\n                                ; "0")\n;fax_detect=no  ; Whether CNG tone detection is enabled (default: "no")\n;fax_detect_timeout=30  ; How many seconds into a call before fax_detect is\n                        ; disabled for the call.\n                        ; Zero disables the timeout.\n                        ; (default: "0")\n;t38_udptl_nat=no       ; Whether NAT support is enabled on UDPTL sessions\n                        ; (default: "no")\n\n;tone_zone=     ; Set which country s indications to use for channels created\n                ; for this endpoint (default: "")\n;language=      ; Set the default language to use for channels created for this\n                ; endpoint (default: "")\n\n; one touch recording\none_touch_recording=no\n; \u5904\u7406 one touch recording \u7684\u65b9\u5f0f\nrecord_on_feature=automixmon\nrecord_off_feature=automixmon\n\n; Name of the RTP engine to use for channels created for this endpoint\nrtp_engine=asterisk\n; SIP REFER transfers\nallow_transfer=yes\n; SDP origin \u540e\u7684 username \u4fe1\u606f\n;sdp_owner=-\n; String used for the SDP session s line\n;sdp_session=Asterisk\n\n; endpoint is allowed to initiate subscriptions\nallow_subscribe=yes\n; The minimum allowed expiry time for subscriptions initiated by the endpoint\n;sub_min_expiry=0\n\n; Username to use in From header for requests to this endpoint\n;from_user=\n; Username to use in From header for unsolicited MWI NOTIFYs to this endpoint\n;mwi_from_user=\n; Domain to user in From header for requests to this endpoint\n;from_domain=\n\n;dtls_verify=no ; Verify that the provided peer certificate is valid (default:\n                ; "no")\n;dtls_rekey=0   ; Interval at which to renegotiate the TLS session and rekey\n                ; the SRTP session (default: "0")\n;dtls_auto_generate_cert= ; Enable ephemeral DTLS certificate generation (default:\n                          ; "no")\n;dtls_cert_file=          ; Path to certificate file to present to peer (default:\n                          ; "")\n;dtls_private_key=        ; Path to private key for certificate file (default:\n                          ; "")\n;dtls_cipher=   ; Cipher to use for DTLS negotiation (default: "")\n;dtls_ca_file=  ; Path to certificate authority certificate (default: "")\n;dtls_ca_path=  ; Path to a directory containing certificate authority\n                ; certificates (default: "")\n;dtls_setup=    ; Whether we are willing to accept connections connect to the\n                ; other party or both (default: "")\n;dtls_fingerprint= ; Hash to use for the fingerprint placed into SDP\n                   ; (default: "SHA-256")\n;srtp_tag_32=no ; Determines whether 32 byte tags should be used instead of 80\n                ; byte tags (default: "no")\n;set_var=       ; Variable set on a channel involving the endpoint. For multiple\n                ; channel variables specify multiple \'set_var\'(s)\n;rtp_keepalive= ; Interval, in seconds, between comfort noise RTP packets if\n                ; RTP is not flowing. This setting is useful for ensuring that\n                ; holes in NATs and firewalls are kept open throughout a call.\n;rtp_timeout=      ; Hang up channel if RTP is not received for the specified\n                   ; number of seconds when the channel is off hold (default:\n                   ; "0" or not enabled)\n;rtp_timeout_hold= ; Hang up channel if RTP is not received for the specified\n                   ; number of seconds when the channel is on hold (default:\n                   ; "0" or not enabled)\n;contact_user= ; On outgoing requests, force the user portion of the Contact\n               ; header to this value (default: "")\n;incoming_call_offer_pref= ; Based on this setting, a joint list of\n                           ; preferred codecs between those received in an\n                           ; incoming SDP offer (remote), and those specified\n                           ; in the endpoint\'s "allow" parameter (local)\n                           ; is created and is passed to the Asterisk core.\n                           ;\n                           ; local - Include all codecs in the local list that\n                           ; are also in the remote list preserving the local\n                           ; order. (default).\n                           ; local_first - Include only the first codec in the\n                           ; local list that is also in the remote list.\n                           ; remote - Include all codecs in the remote list that\n                           ; are also in the local list preserving remote list\n                           ; order.\n                           ; remote_first - Include only the first codec in\n                           ; the remote list that is also in the local list.\n;outgoing_call_offer_pref= ; Based on this setting, a joint list of\n                           ; preferred codecs between those received from the\n                           ; Asterisk core (remote), and those specified in\n                           ; the endpoint\'s "allow" parameter (local) is\n                           ; created and is used to create the outgoing SDP\n                           ; offer.\n                           ;\n                           ; local - Include all codecs in the local list that\n                           ; are also in the remote list preserving the local\n                           ; order.\n                           ; local_merge - Include all codecs in the local list\n                           ; preserving the local order.\n                           ; local_first - Include only the first codec in the\n                           ; local list.\n                           ; remote - Include all codecs in the remote list that\n                           ; are also in the local list preserving remote list\n                           ; order.\n                           ; remote_merge - Include all codecs in the local list\n                           ; preserving the remote list order. (default)\n                           ; remote_first - Include only the first codec in the\n                           ; remote list that is also in the local list.\n;preferred_codec_only=no   ; Respond to a SIP invite with the single most\n                           ; preferred codec rather than advertising all joint\n                           ; codec capabilities. This limits the other side\'s\n                           ; codec choice to exactly what we prefer.\n                           ; default is no.\n                           ; NOTE: This option is deprecated in favor\n                           ; of incoming_call_offer_pref.  Setting both\n                           ; options is unsupported.\n\n\n; \u5a92\u4f53\u914d\u7f6e\n; ====================\n; yes => rtcp_mux, use_avpf, ice_support, use_received_transport\n; \u9ed8\u8ba4\n;   media_encryption=dtls\n;   dtls_verify=fingerprint\n;   dtls_setup=actpass\n; dtls_cert_file, dtls_ca_file\nwebrtc=no\nmax_audio_streams=1 ; The maximum number of allowed negotiated audio streams\n                    ; (default: 1)\n;\nmax_video_streams=1 ; The maximum number of allowed negotiated video streams\n                    ; (default: 1)\n\n;tos_audio=0    ; DSCP TOS bits for audio streams (default: "0")\n;tos_video=0    ; DSCP TOS bits for video streams (default: "0")\n;cos_audio=0    ; Priority for audio streams (default: "0")\n;cos_video=0    ; Priority for video streams (default: "0")\n\n; RTP \u914d\u7f6e\n; ====================\n; SDP answer to use the media transport as received in the SDP offer\nmedia_use_received_transport=yes\n; force the usage of \'RTP/AVP\', \'RTP/AVPF\', \'RTP/SAVP\', or \'RTP/SAVPF\' as the media transport type in SDP offers depending on settings, even when DTLS is used for media encryption.\nforce_avp=no\nuse_avpf=no\n; \u5141\u8bb8\u53d1\u9001\u63a5\u6536\u4e0d\u540c\u7f16\u7801 - \u4e0d\u81ea\u52a8\u5339\u914d\nasymmetric_rtp_codec=no\nrefer_blind_progress=yes ; Whether to notifies all the progress details on blind\n                       ; transfer (default: "yes"). The value "no" is useful\n                       ; for some SIP phones (Mitel/Aastra, Snom) which expect\n                       ; a sip/frag "200 OK" after REFER has been accepted.\n;notify_early_inuse_ringing = ; Whether to notifies dialog-info \'early\'\n                              ; on INUSE && RINGING state (default: "no").\n                              ; The value "yes" is useful for some SIP phones\n                              ; (Cisco SPA) to be able to indicate and pick up\n                              ; ringing devices.\nrtcp_mux=no\n\n;incoming_mwi_mailbox = ; Mailbox name to use when incoming MWI NOTIFYs are\n                        ; received.\n                        ; If an MWI NOTIFY is received FROM this endpoint,\n                        ; this mailbox will be used when notifying other modules\n                        ; of MWI status changes.  If not set, incoming MWI\n                        ; NOTIFYs are ignored.\nfollow_early_media_fork=yes ; On outgoing calls, if the UAS responds with\n                           ; different SDP attributes on subsequent 18X or 2XX\n                           ; responses (such as a port update) AND the To tag\n                           ; on the subsequent response is different than that\n                           ; on the previous one, follow it.  This usually\n                           ; happens when the INVITE is forked to multiple UASs\n                           ; and more than 1 sends an SDP answer.\n                           ; This option must also be enabled in the system\n                           ; section.\n                           ; (default: yes)\naccept_multiple_sdp_answers=no\n                           ; On outgoing calls, if the UAS responds with\n                           ; different SDP attributes on non-100rel 18X or 2XX\n                           ; responses (such as a port update) AND the To tag on\n                           ; the subsequent response is the same as that on the\n                           ; previous one, process it. This can happen when the\n                           ; UAS needs to change ports for some reason such as\n                           ; using a separate port for custom ringback.\n                           ; This option must also be enabled in the system\n                           ; section.\n                           ; (default: no)\n;suppress_q850_reason_headers =\n                           ; Suppress Q.850 Reason headers for this endpoint.\n                           ; Some devices can\'t accept multiple Reason headers\n                           ; and get confused when both \'SIP\' and \'Q.850\' Reason\n                           ; headers are received.  This option allows the\n                           ; \'Q.850\' Reason header to be suppressed.\n                           ; (default: no)\n;ignore_183_without_sdp =\n                           ; Do not forward 183 when it doesn\'t contain SDP.\n                           ; Certain SS7 internetworking scenarios can result in\n                           ; a 183 to be generated for reasons other than early\n                           ; media.  Forwarding this 183 can cause loss of\n                           ; ringback tone.  This flag emulates the behavior of\n                           ; chan_sip and prevents these 183 responses from\n                           ; being forwarded.\n                           ; (default: no)\n;stir_shaken =\n                           ; If this is enabled, STIR/SHAKEN operations will be\n                           ; performed on this endpoint. This includes inbound\n                           ; and outbound INVITEs. On an inbound INVITE, Asterisk\n                           ; will check for an Identity header and attempt to\n                           ; verify the call. On an outbound INVITE, Asterisk will\n                           ; add an Identity header that others can use to verify\n                           ; calls from this endpoint. Additional configuration is\n                           ; done in stir_shaken.conf.\n                           ; The STIR_SHAKEN dialplan function must be used to get\n                           ; the verification results on inbound INVITEs. Nothing\n                           ; happens to the call if verification fails; it\'s up to\n                           ; you to determine what to do with the results.\n                           ; (default: no)\nallow_unauthenticated_options=no\n                           ; By default, chan_pjsip will challenge an incoming\n                           ; OPTIONS request for authentication credentials just\n                           ; as it would an INVITE request. This is consistent\n                           ; with RFC 3261.\n                           ; There are many UAs that use an OPTIONS request as a\n                           ; "ping" and they expect a 200 response indicating that\n                           ; the remote party is up and running without a need to\n                           ; authenticate.\n                           ; Setting allow_unauthenticated_options to \'yes\' will\n                           ; instruct chan_pjsip to skip the authentication step\n                           ; when it receives an OPTIONS request for this\n                           ; endpoint.\n                           ; There are security implications to enabling this\n                           ; setting as it can allow information disclosure to\n                           ; occur - specifically, if enabled, an external party\n                           ; could enumerate and find the endpoint name by\n                           ; sending OPTIONS requests and examining the\n                           ; responses.\n'})}),"\n",(0,i.jsx)(n.h3,{id:"registration",children:"registration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"res_pjsip_outbound_registration"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:'[registration]\ntype=registration\n;auth_rejection_permanent=yes   ; Determines whether failed authentication\n                                ; challenges are treated as permanent failures\n                                ; (default: "yes")\n;client_uri=    ; Client SIP URI used when attemping outbound registration\n                ; (default: "")\n;contact_user=  ; Contact User to use in request (default: "")\n;expiration=3600        ; Expiration time for registrations in seconds\n                        ; (default: "3600")\n;max_retries=10 ; Maximum number of registration attempts (default: "10")\n;outbound_auth= ; Authentication object to be used for outbound registrations\n                ; (default: "")\n;outbound_proxy=        ; Proxy through which to send registrations, a full SIP URI\n                        ; must be provided (default: "")\n;retry_interval=60      ; Interval in seconds between retries if outbound\n                        ; registration is unsuccessful (default: "60")\n;forbidden_retry_interval=0     ; Interval used when receiving a 403 Forbidden\n                                ; response (default: "0")\n;fatal_retry_interval=0 ; Interval used when receiving a fatal response.\n                        ; (default: "0") A fatal response is any permanent\n                        ; failure (non-temporary 4xx, 5xx, 6xx) response\n                        ; received from the registrar. NOTE - if also set\n                        ; the \'forbidden_retry_interval\' takes precedence\n                        ; over this one when a 403 is received. Also, if\n                        ; \'auth_rejection_permanent\' equals \'yes\' a 401 and\n                        ; 407 become subject to this retry interval.\n;server_uri=    ; SIP URI of the server to register against (default: "")\n;transport=     ; Transport used for outbound authentication (default: "")\n;line=          ; When enabled this option will cause a \'line\' parameter to be\n                ; added to the Contact header placed into the outgoing\n                ; registration request. If the remote server sends a call\n                ; this line parameter will be used to establish a relationship\n                ; to the outbound registration, ultimately causing the\n                ; configured endpoint to be used (default: "no")\n;endpoint=      ; When line support is enabled this configured endpoint name\n                ; is used for incoming calls that are related to the outbound\n                ; registration (default: "")\n'})}),"\n",(0,i.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(n.h2,{id:"res_pjsip_outbound_registrationc1061-handle_registration_response-fatal-response-401-received-from-sip19216812-on-registration-attempt-to-sip600119216822-stopping-outbound-registration",children:"res_pjsip_outbound_registration.c:1061 handle_registration_response: Fatal response '401' received from 'sip:192.168.1.2' on registration attempt to 'sip:6001@192.168.2.2', stopping outbound registration"}),"\n",(0,i.jsx)(n.p,{children:"\u521d\u6b21\u6ce8\u518c\u6210\u529f\uff0c\u4e4b\u540e\u6ce8\u518c\u90fd\u5931\u8d25"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pjsip send registry trunk-6001-reg-0\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u5c1d\u8bd5\u4fee\u6539\u914d\u7f6e\u589e\u52a0\u91cd\u8bd5\u673a\u5236"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-conf",children:"expiration = 300\nauth_rejection_permanent = no\nretry_interval = 30\nforbidden_retry_interval = 60\nfatal_retry_interval = 120\nmax_retries = 120\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/asterisk/asterisk/blob/35437879e55b67d46cb9d0e558edef1e1609a28d/configs/samples/pjsip.conf.sample#L1335",children:"pjsip.conf#fatal_retry_interval"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pjproject-error-sending-stun-request-network-is-unreachable",children:"pjproject: .Error sending STUN request: Network is unreachable"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u53c2\u8003\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://community.asterisk.org/t/83908/2",children:"https://community.asterisk.org/t/83908/2"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Occurs due to usage of IPv6 link local addresses as ICE candidates. If media is flowing, there\u2019s nothing to do there. You can ignore them."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3354:(e,n,t)=>{var i=t(50959),s=Symbol.for("react.element"),r=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function l(e,n,t){var i,r={},l=null,c=null;for(i in void 0!==t&&(l=""+t),void 0!==n.key&&(l=""+n.key),void 0!==n.ref&&(c=n.ref),n)o.call(n,i)&&!d.hasOwnProperty(i)&&(r[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===r[i]&&(r[i]=n[i]);return{$$typeof:s,type:e,key:l,ref:c,props:r,_owner:a.current}}n.Fragment=r,n.jsx=l,n.jsxs=l},11527:(e,n,t)=>{e.exports=t(3354)},47214:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>o});var i=t(50959);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);