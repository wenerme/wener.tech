"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[4711],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),k=a,d=m["".concat(o,".").concat(k)]||m[k]||c[k]||i;return n?r.createElement(d,s(s({ref:t},u),{},{components:n})):r.createElement(d,s({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},49488:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var r=n(96600),a=n(27279),i=(n(59496),n(49613)),s=["components"],l={title:"Wiki.js"},o="Wiki.js",p={unversionedId:"service/cms/wikijs",id:"service/cms/wikijs",title:"Wiki.js",description:"- Requarks/wiki \u662f\u4ec0\u4e48\uff1f",source:"@site/../notes/service/cms/wikijs.md",sourceDirName:"service/cms",slug:"/service/cms/wikijs",permalink:"/notes/service/cms/wikijs",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/../notes/service/cms/wikijs.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1646989992,formattedLastUpdatedAt:"Mar 11, 2022",frontMatter:{title:"Wiki.js"},sidebar:"docs",previous:{title:"Strapi",permalink:"/notes/service/cms/strapi"},next:{title:"CN",permalink:"/notes/service/cn/"}},u={},c=[{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"Kubernetes",id:"kubernetes",level:2}],m={toc:c};function k(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"wikijs"},"Wiki.js"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Requarks/wiki"},"Requarks/wiki")," \u662f\u4ec0\u4e48\uff1f",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"AGPL-3.0"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301 Markdown \u7684 Wiki"),(0,i.kt)("li",{parentName:"ul"},"\u7c7b\u4f3c\u4e8e\u8bed\u96c0\u4f46\u662f\u652f\u6301 Markdown"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301\u6587\u4ef6\uff0c\u652f\u6301\u56fe\u7247\uff0c\u652f\u6301 Git \u540e\u7aef\uff0c\u652f\u6301\u641c\u7d22"),(0,i.kt)("li",{parentName:"ul"},"Nodejs 10.12+"),(0,i.kt)("li",{parentName:"ul"},"\u652f\u6301 MySQL, MariaDB, PostgreSQL, MSSQL, SQLite3",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u63a8\u8350\u4f7f\u7528 PostgreSQL"),(0,i.kt)("li",{parentName:"ul"},"\u591a\u526f\u672c\u53ea\u652f\u6301 PostgreSQL"))))),(0,i.kt)("li",{parentName:"ul"},"\u8981\u6c42",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"2 CPU 1G \u5185\u5b58"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.requarks.io/auth"},"\u6388\u6743"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"CAS\u3001LDAP/AD\u3001SAML 2.0\u3001Local")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'# Docker \u5b89\u88c5\n# https://docs.requarks.io/install/docker\n# SQLite \u542f\u52a8\ndocker run --rm -it \\\n  -p 8080:3000 \\\n  -v $PWD/wiki:/data \\\n  -e "DB_TYPE=sqlite" \\\n  -e "DB_FILEPATH=/data/wiki.sqlite" \\\n  --name wiki requarks/wiki:2\n\n# PG \u542f\u52a8\ndocker run -d --restart unless-stopped \\\n  -p 8080:3000 \\\n  -e "DB_TYPE=postgres"\n  -e "DB_HOST=db"\n  -e "DB_PORT=5432"\n  -e "DB_USER=wikijs"\n  -e "DB_PASS=wikijsrocks"\n  -e "DB_NAME=wiki" \\\n  --name wiki requarks/wiki:2\n')),(0,i.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://docs.requarks.io/install/config"},"Configuration")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Requarks/wiki/blob/dev/config.sample.yml"},"config.sample.yml"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"bindIP: 0.0.0.0\nport: 3000\n# error, warn, info, verbose, debug, silly\nlogLevel: info\nuploads:\n  # \u9ed8\u8ba4 5 MB\n  maxFileSize: 5242880\n  maxFiles: 10\n\n# \u79bb\u7ebf\u6a21\u5f0f - \u907f\u514d\u4e0b\u8f7d\u66f4\u65b0\noffline: true\n\n# HA \u6a21\u5f0f - \u9700\u8981 PostgreSQL\nha: true\n\n# \u4e34\u65f6\u6570\u636e\u76ee\u5f55\ndataPath: ./data\n---\ndb:\n  type: postgres\n  host: localhost\n  port: 5432\n  user: wikijs\n  pass: wikijsrocks\n  db: wiki\n  # SQLite\n  # type: sqlite\n  # storage: db.sqlite\n# DB \u8fde\u63a5\u6c60\npool:\n  min: 2\n  max: 10\n\n---\nssl:\n  enabled: true\n  port: 3443\n  provider: custom\n\n  format: pem\n  key: path/to/key.pem\n  cert: path/to/cert.pem\n  passphrase: null\n  dhparam: null\n\n  # format: pfx\n  # pfx: path/to/cert.pfx\n---\n# ACME\nssl:\n  enabled: true\n  port: 3443\n  provider: letsencrypt\n\n  domain: wiki.yourdomain.com\n  subscriberEmail: admin@example.com\n")),(0,i.kt)("h2",{id:"kubernetes"},"Kubernetes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/Requarks/wiki/tree/dev/dev/helm"},"dev/helm"))),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"values.yaml")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"image:\n  # \u9ed8\u8ba4\u662f latest\n  tag: latest\npostgresql:\n  # \u4f7f\u7528\u5df2\u6709\u7684\n  enabled: false\n  postgresqlHost:\n  postgresqlPort: 5432\n  postgresqlDatabase: wiki\n  postgresqlUser: postgres\n  postgresqlPassword:\n  # \u5b58\u50a8 Password \u7684 secret\n  existingSecret:\n  secretKey: postgresql-password\n")))}k.isMDXComponent=!0}}]);