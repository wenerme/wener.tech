"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[43935],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return k}});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),g=o,k=c["".concat(s,".").concat(g)]||c[g]||m[g]||a;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=g;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},86275:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return f},default:function(){return v},frontMatter:function(){return k},metadata:function(){return b},toc:function(){return h}});var r=n(49613),o=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,c=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&u(e,n,t[n]);if(i)for(var n of i(t))p.call(t,n)&&u(e,n,t[n]);return e},m=(e,t)=>a(e,l(t)),g=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&i)for(var r of i(e))t.indexOf(r)<0&&p.call(e,r)&&(n[r]=e[r]);return n};const k={title:"Kong Ingress"},f="Kong Ingress",b={unversionedId:"devops/web/kong/kong-ingress",id:"devops/web/kong/kong-ingress",title:"Kong Ingress",description:"- Kong/kubernetes-ingress-controller",source:"@site/../notes/devops/web/kong/kong-ingress.md",sourceDirName:"devops/web/kong",slug:"/devops/web/kong/ingress",permalink:"/notes/devops/web/kong/ingress",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/web/kong/kong-ingress.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1703483037,formattedLastUpdatedAt:"Dec 25, 2023",frontMatter:{title:"Kong Ingress"},sidebar:"docs",previous:{title:"Kong",permalink:"/notes/devops/web/kong/"},next:{title:"lighttpd",permalink:"/notes/devops/web/lighttpd"}},d={},h=[],N={toc:h},y="wrapper";function v(e){var t=e,{components:n}=t,o=g(t,["components"]);return(0,r.kt)(y,m(c(c({},N),o),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",c({},{id:"kong-ingress"}),"Kong Ingress"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller"}),"Kong/kubernetes-ingress-controller")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller/blob/master/docs/deployment/k4k8s.md"}),"Kong for Kubernetes")," \u90e8\u7f72",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller/blob/master/docs/concepts/deployment.md"}),"\u90e8\u7f72\u6982\u5ff5")))),(0,r.kt)("li",{parentName:"ul"},"\u7279\u6027",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ingres"),(0,r.kt)("li",{parentName:"ul"},"API \u7ba1\u7406",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"kong \u6709\u5927\u91cf\u63d2\u4ef6"))),(0,r.kt)("li",{parentName:"ul"},"gRPC \u652f\u6301"),(0,r.kt)("li",{parentName:"ul"},"Health checking, Load-balancing",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u652f\u6301\u4e3b\u52a8\u88ab\u52a8\u68c0\u67e5"))),(0,r.kt)("li",{parentName:"ul"},"\u8bf7\u6c42\u54cd\u5e94\u8f6c\u6362",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u63d2\u4ef6\u62e6\u622a\u4fee\u6539"))),(0,r.kt)("li",{parentName:"ul"},"\u8ba4\u8bc1"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller/blob/main/docs/concepts/custom-resources.md"}),"CRD \u914d\u7f6e"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"KongIngress",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6269\u5c55\u9ed8\u8ba4\u7684 Ingress"),(0,r.kt)("li",{parentName:"ul"},"Ingress \u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"configuration.konghq.com")," Annotation \u6307\u5411\u8be5\u914d\u7f6e"))),(0,r.kt)("li",{parentName:"ul"},"KongPlugin",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Ingress \u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"plugins.konghq.com")," Annotation \u6307\u5411\u8be5\u914d\u7f6e"))),(0,r.kt)("li",{parentName:"ul"},"KongClusterPlugin",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u96c6\u7fa4\u7eac\u5ea6\u63d2\u4ef6\u914d\u7f6e"))),(0,r.kt)("li",{parentName:"ul"},"KongConsumer",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Kong \u7684 Consumers \u5bf9\u8c61"))),(0,r.kt)("li",{parentName:"ul"},"TCPIngress"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller/blob/main/docs/concepts/design.md"}),"\u67b6\u6784")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller/tree/main/docs/guides"}),"\u6587\u6863")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",c({parentName:"li"},{href:"https://github.com/Kong/kubernetes-ingress-controller/blob/main/docs/references/annotations.md"}),"annotations"))),(0,r.kt)("pre",null,(0,r.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'helm repo add kong https://charts.konghq.com\nhelm repo update\n\nhelm install kong/kong --generate-name --set ingressController.installCRDs=false\n# \u8bbf\u95ee\u4ee3\u7406\u5730\u5740\nexport PROXY_IP=$(kubectl get -o jsonpath="{.status.loadBalancer.ingress[0].ip}" service -n kong demo-kong-proxy)\n')))}v.isMDXComponent=!0}}]);