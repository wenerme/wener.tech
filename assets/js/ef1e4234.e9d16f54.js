"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[9241],{49613:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(59496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),g=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=g(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=g(t),m=a,d=c["".concat(s,".").concat(m)]||c[m]||p[m]||l;return t?r.createElement(d,i(i({ref:n},u),{},{components:t})):r.createElement(d,i({ref:n},u))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=c;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var g=2;g<l;g++)i[g]=t[g];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},4470:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return o},metadata:function(){return g},toc:function(){return p}});var r=t(96600),a=t(27279),l=(t(59496),t(49613)),i=["components"],o={title:"gqlgen"},s=void 0,g={unversionedId:"languages/go/lib/gqlgen",id:"languages/go/lib/gqlgen",title:"gqlgen",description:"- 99designs/gqlgen \u662f\u4ec0\u4e48\uff1f",source:"@site/notes/languages/go/lib/gqlgen.md",sourceDirName:"languages/go/lib",slug:"/languages/go/lib/gqlgen",permalink:"/notes/languages/go/lib/gqlgen",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/languages/go/lib/gqlgen.md",tags:[],version:"current",frontMatter:{title:"gqlgen"},sidebar:"docs",previous:{title:"GORM",permalink:"/notes/languages/go/lib/gorm"},next:{title:"graphql",permalink:"/notes/languages/go/lib/graphql"}},u={},p=[{value:"Note",id:"note",level:2},{value:"\u7981\u7528 Introspection",id:"\u7981\u7528-introspection",level:2}],c={toc:p};function m(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen"},"99designs/gqlgen")," \u662f\u4ec0\u4e48\uff1f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u57fa\u4e8e\u751f\u6210\u7684 GraphQL \u5f15\u64ce"),(0,l.kt)("li",{parentName:"ul"},"Schema first - \u9700\u8981 DSL \u5b9a\u4e49 GraphQL Schema"),(0,l.kt)("li",{parentName:"ul"},"\u7c7b\u578b\u5b89\u5168"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301 Plugin - \u4fee\u6539\u914d\u7f6e, \u751f\u6210\u4ee3\u7801"))),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u70b9",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5e93\u4ee3\u7801\u8d28\u91cf\u4e00\u822c"),(0,l.kt)("li",{parentName:"ul"},"\u6587\u6863\u5c11"),(0,l.kt)("li",{parentName:"ul"},"\u63d2\u4ef6\u80fd\u529b\u5f31\uff0c\u4e14\u6ca1\u4ec0\u4e48 Demo"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gqlgen.com/feature-comparison/"},"gqlgen vs gophers vs graphql-go vs thunder"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"gqlgen \u6700\u8fd1\u5f00\u53d1\u4e0d\u6d3b\u8dc3 - 2021-08"),(0,l.kt)("li",{parentName:"ul"},"graphql-go/graphql \u5f00\u53d1\u4e0d\u6d3b\u8dc3")))),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"\u26a0\ufe0f fragment \u5185\u7684 alias \u4e0d\u4f1a\u5904\u7406 - \u975e\u5e38\u4e25\u91cd\u4e14\u96be\u6392\u67e5",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen/issues/1271"},"99designs/gqlgen#1271")))),(0,l.kt)("li",{parentName:"ul"},"embeded \u76f8\u540c struct \u9700\u8981\u91cd\u590d\u5199 resolver",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen/issues/592"},"99designs/gqlgen#592")," - resolve \u903b\u8f91\u4e0d\u80fd\u5b9a\u4e49\u5728 interface \u4e0a"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen/issues/626"},"99designs/gqlgen#626")," - \u751f\u6210\u7c7b\u578b\u4e0d\u652f\u6301 embedded"))),(0,l.kt)("li",{parentName:"ul"},"enum \u4e0d\u652f\u6301 int - ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen/issues/366"},"99designs/gqlgen#366")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen/issues/1516"},"99designs/gqlgen#1516"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e0d\u517c\u5bb9 gqlparser 2.2 - \u5347\u7ea7\u7684\u65f6\u5019\u6ce8\u610f"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/99designs/gqlgen/issues/1031"},"99designs/gqlgen#1031"),"\nfederation \u53ea\u652f\u6301\u5355\u4e2a @key"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"go get -u github.com/99designs/gqlgen\ngo run github.com/99designs/gqlgen init\n\ngo run github.com/99designs/gqlgen generate\n")),(0,l.kt)("h2",{id:"note"},"Note"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type HandlerExtension interface {\n  // ExtensionName should be a CamelCase string version of the extension which may be shown in stats and logging.\n  ExtensionName() string\n  // Validate is called when adding an extension to the server, it allows validation against the servers schema.\n  Validate(schema ExecutableSchema) error\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'+--- REQUEST   POST /graphql --------------------------------------------+\n| +- OPERATION query OpName { viewer { name } } -----------------------+ |\n| |  RESPONSE  { "data": { "viewer": { "name": "bob" } } }             | |\n| +- OPERATION subscription OpName2 { chat { message } } --------------+ |\n| |  RESPONSE  { "data": { "chat": { "message": "hello" } } }          | |\n| |  RESPONSE  { "data": { "chat": { "message": "byee" } } }           | |\n| +--------------------------------------------------------------------+ |\n+------------------------------------------------------------------------+\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-graphql"},"directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION\ndirective @goField(forceResolver: Boolean, name: String) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION\n\nscalar Time\nscalar Any\nscalar Map\nscalar Upload\n")),(0,l.kt)("h2",{id:"\u7981\u7528-introspection"},"\u7981\u7528 Introspection"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"srv.AroundOperations(func(ctx context.Context, next graphql.OperationHandler) graphql.ResponseHandler {\n  if !isUserAdmin(ctx) {\n    graphql.GetOperationContext(ctx).DisableIntrospection = true\n  }\n  return next(ctx)\n})\n")))}m.isMDXComponent=!0}}]);