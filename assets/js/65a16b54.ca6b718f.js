"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[2698],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return u}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),c=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(t),u=r,h=m["".concat(o,".").concat(u)]||m[u]||d[u]||i;return t?a.createElement(h,l(l({ref:n},p),{},{components:t})):a.createElement(h,l({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},78370:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return o},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=t(87462),r=t(63366),i=(t(67294),t(3905)),l=["components"],s={title:"Headscale"},o=void 0,c={unversionedId:"service/network/headscale",id:"service/network/headscale",title:"Headscale",description:"- juanfont/headscale",source:"@site/notes/service/network/headscale.md",sourceDirName:"service/network",slug:"/service/network/headscale",permalink:"/notes/service/network/headscale",editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/network/headscale.md",tags:[],version:"current",frontMatter:{title:"Headscale"},sidebar:"docs",previous:{title:"FRP",permalink:"/notes/service/network/frp"},next:{title:"IKEv2",permalink:"/notes/service/network/ikev2"}},p=[{value:"conf",id:"conf",children:[],level:2},{value:"Notes",id:"notes",children:[],level:2}],d={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/juanfont/headscale"},"juanfont/headscale"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"BSD-3, Go"),(0,i.kt)("li",{parentName:"ul"},"tailscale control server"),(0,i.kt)("li",{parentName:"ul"},"\u57fa\u4e8e Wireguard \u7684 Mesh \u65b9\u6848"),(0,i.kt)("li",{parentName:"ul"},"SQLite driver \u4f7f\u7528 - ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/glebarez/go-sqlite"},"glebarez/go-sqlite"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"\u4e0d\u9700\u8981 CGO")))))),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("ul",{parentName:"div"},(0,i.kt)("li",{parentName:"ul"},"Tailscale iOS & Android \u4e0d\u652f\u6301\u4fee\u6539 control server \u5730\u5740")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -Lo config.yaml https://raw.githubusercontent.com/juanfont/headscale/main/config-example.yaml\ncurl -Lo headscale https://github.com/juanfont/headscale/releases/download/v0.14.0/headscale_0.14.0_linux_amd64\nchmod +x headscale\nmkdir -p /var/lib/headscale\n./headscale serve\n./headscale namespaces create myns\n\n# AlpineLinux\napk add tailscale\nservice tailscale start\ntailscale up --login-server http://192.168.1.2:8080\ntailscale ip\n\n# @Server \u540c\u610f\n./headscale -n myns nodes register --key $KEY\n\n# \u9884\u751f\u6210 - \u51cf\u5c11\u540c\u610f\u8fd9\u4e2a\u73af\u8282\nheadscale --namespace myns preauthkeys create --reusable --expiration 24h\n\n#\ntailscale up --login-server http://192.168.1.2:8080 --authkey $KEY\n")),(0,i.kt)("h2",{id:"conf"},"conf"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/juanfont/headscale/blob/main/config-example.yaml"},"config-example.yaml")),(0,i.kt)("li",{parentName:"ul"},"config.yaml,config.json",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"/etc/headscale"),(0,i.kt)("li",{parentName:"ul"},"~/.headscale"),(0,i.kt)("li",{parentName:"ul"},"./")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# \u5ba2\u6237\u7aef\u8fde\u63a5\u4f7f\u7528\u7684\u5730\u5740\nserver_url: http://127.0.0.1:8080\n\n# \u670d\u52a1\u7aef\u76d1\u542c\nlisten_addr: 0.0.0.0:8080\n\n# /metrics\nmetrics_listen_addr: 127.0.0.1:9090\n\n# gRPC API - \u901a\u8fc7 cert \u8ba4\u8bc1\ngrpc_listen_addr: 0.0.0.0:50443\ngrpc_allow_insecure: false\n\n# \u4e0d\u5b58\u5728\u4f1a\u751f\u6210\nprivate_key_path: /var/lib/headscale/private.key\n\n# IP \u6bb5\nip_prefixes:\n  - fd7a:115c:a1e0::/48\n  - 100.64.0.0/10\n\n# DERP - \u4e2d\u7ee7\n# https://tailscale.com/blog/how-tailscale-works/#encrypted-tcp-relays-derp\nderp:\n  server:\n    # \u8fd0\u884c\u5185\u7f6e\u7684 DERP - HTTPS\n    enabled: false\n    # \u5185\u7f6e DERP \u7684 Region ID\n    region_id: 999\n\n    # Region \u4fe1\u606f\n    region_code: 'headscale'\n    region_name: 'Headscale Embedded DERP'\n\n    # \u76d1\u542c\u8f85\u52a9 NAT\n    # https://tailscale.com/blog/how-tailscale-works/\n    stun:\n      enabled: false\n      listen_addr: '0.0.0.0:3478'\n\n  # \u5916\u90e8 DERP\n  urls:\n    - https://controlplane.tailscale.com/derpmap/default\n\n  # \u672c\u5730 DERP \u914d\u7f6e\u6587\u4ef6 - \u7528\u4e8e selfhost\n  # https://tailscale.com/kb/1118/custom-derp-servers/\n  paths: []\n\n  # \u5237\u65b0 derpmap\n  auto_update_enabled: true\n  update_frequency: 24h\n\ndisable_check_updates: true\nephemeral_node_inactivity_timeout: 30m\n\ndb_type: sqlite3\ndb_path: /var/lib/headscale/db.sqlite\n\n# # Postgres config\n# db_type: postgres\n# db_host: localhost\n# db_port: 5432\n# db_name: headscale\n# db_user: foo\n# db_pass: bar\n\n### TLS configuration\n#\n## Let's encrypt / ACME\n#\n# headscale supports automatically requesting and setting up\n# TLS for a domain with Let's Encrypt.\n#\n# URL to ACME directory\nacme_url: https://acme-v02.api.letsencrypt.org/directory\n\n# Email to register with ACME provider\nacme_email: ''\n\n# Domain name to request a TLS certificate for:\ntls_letsencrypt_hostname: ''\n\n# Client (Tailscale/Browser) authentication mode (mTLS)\n# Acceptable values:\n# - disabled: client authentication disabled\n# - relaxed: client certificate is required but not verified\n# - enforced: client certificate is required and verified\ntls_client_auth_mode: relaxed\n\n# Path to store certificates and metadata needed by\n# letsencrypt\ntls_letsencrypt_cache_dir: /var/lib/headscale/cache\n\ntls_letsencrypt_challenge_type: HTTP-01\ntls_letsencrypt_listen: ':http'\n\ntls_cert_path: ''\ntls_key_path: ''\n\nlog_level: info\n\n# ACL\n# https://tailscale.com/kb/1018/acls/\nacl_policy_path: ''\n\n## DNS\n#\n# headscale supports Tailscale's DNS configuration and MagicDNS.\n# Please have a look to their KB to better understand the concepts:\n#\n# - https://tailscale.com/kb/1054/dns/\n# - https://tailscale.com/kb/1081/magicdns/\n# - https://tailscale.com/blog/2021-09-private-dns-with-magicdns/\n#\ndns_config:\n  # List of DNS servers to expose to clients.\n  nameservers:\n    - 1.1.1.1\n\n  # Split DNS (see https://tailscale.com/kb/1054/dns/),\n  # list of search domains and the DNS to query for each one.\n  #\n  # restricted_nameservers:\n  #   foo.bar.com:\n  #     - 1.1.1.1\n  #   darp.headscale.net:\n  #     - 1.1.1.1\n  #     - 8.8.8.8\n\n  # Search domains to inject.\n  domains: []\n\n  # Whether to use [MagicDNS](https://tailscale.com/kb/1081/magicdns/).\n  # Only works if there is at least a nameserver defined.\n  magic_dns: true\n\n  # Defines the base domain to create the hostnames for MagicDNS.\n  # `base_domain` must be a FQDNs, without the trailing dot.\n  # The FQDN of the hosts will be\n  # `hostname.namespace.base_domain` (e.g., _myhost.mynamespace.example.com_).\n  base_domain: example.com\n\n# Unix socket used for the CLI to connect without authentication\n# Note: for local development, you probably want to change this to:\n# unix_socket: ./headscale.sock\nunix_socket: /var/run/headscale.sock\nunix_socket_permission: '0770'\n#\n# headscale supports experimental OpenID connect support,\n# it is still being tested and might have some bugs, please\n# help us test it.\n# OpenID Connect\n# oidc:\n#   issuer: \"https://your-oidc.issuer.com/path\"\n#   client_id: \"your-oidc-client-id\"\n#   client_secret: \"your-oidc-client-secret\"\n#\n#   If `strip_email_domain` is set to `true`, the domain part of the username email address will be removed.\n#   This will transform `first-name.last-name@example.com` to the namespace `first-name.last-name`\n#   If `strip_email_domain` is set to `false` the domain part will NOT be removed resulting to the following\n#   namespace: `first-name.last-name.example.com`\n#\n#   strip_email_domain: true\n")),(0,i.kt)("h2",{id:"notes"},"Notes"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"/var/lib/headscale/",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"private.key"),(0,i.kt)("li",{parentName:"ul"},"db.sqlite",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"api_keys"),(0,i.kt)("li",{parentName:"ul"},"kvs"),(0,i.kt)("li",{parentName:"ul"},"machines"),(0,i.kt)("li",{parentName:"ul"},"namespaces"),(0,i.kt)("li",{parentName:"ul"},"pre_auth_keys"),(0,i.kt)("li",{parentName:"ul"},"shared_machines")))))))}m.isMDXComponent=!0}}]);