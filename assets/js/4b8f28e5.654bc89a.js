/*! For license information please see 4b8f28e5.654bc89a.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[63558],{4074:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>o});var s=r(11527),i=r(47214);const l={title:"Gitlab Runner"},t="Gitlab Runner",c={id:"service/forge/gitlab/gitlab-runner",title:"Gitlab Runner",description:"- \u662f\u4ec0\u4e48\uff1f",source:"@site/../notes/service/forge/gitlab/gitlab-runner.md",sourceDirName:"service/forge/gitlab",slug:"/service/forge/gitlab/runner",permalink:"/notes/service/forge/gitlab/runner",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/service/forge/gitlab/gitlab-runner.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1672817159,formattedLastUpdatedAt:"Jan 4, 2023",frontMatter:{title:"Gitlab Runner"},sidebar:"docs",previous:{title:"Gitlab Repository",permalink:"/notes/service/forge/gitlab/repo"},next:{title:"Gitlab SAST",permalink:"/notes/service/forge/gitlab/sast"}},a={},o=[{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"Docker in Docker",id:"docker-in-docker",level:2},{value:"\u5c06\u5171\u4eab runner \u4fee\u6539\u4e3a \u79c1\u6709",id:"\u5c06\u5171\u4eab-runner-\u4fee\u6539\u4e3a-\u79c1\u6709",level:2},{value:"Windows",id:"windows",level:2},{value:"AlpineLinux",id:"alpinelinux",level:2},{value:"Shell in Docker",id:"shell-in-docker",level:2},{value:"Kubernetes Executor",id:"kubernetes-executor",level:2},{value:"zombie process in Runner",id:"zombie-process-in-runner",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"gitlab-runner",children:"Gitlab Runner"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u662f\u4ec0\u4e48\uff1f\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"Gitlab \u8fd0\u884c CI/CD \u4efb\u52a1\u7684\u7ec8\u7aef"}),"\n",(0,s.jsx)(e.li,{children:"Golang \u5b9e\u73b0"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u67b6\u6784 x86, AMD64, ARM64, ARM, s390x"}),"\n",(0,s.jsx)(e.li,{children:"\u652f\u6301\u5e73\u53f0 Linux, Windows, macOS, FreeBSD"}),"\n",(0,s.jsx)(e.li,{children:"\u90e8\u7f72\u65b9\u5f0f Docker, Helm, Shell"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["Runner \u7c7b\u578b\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["shell\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u76f4\u63a5 Shell \u6267\u884c\u811a\u672c\uff0c\u6700\u5feb\uff0c\u4e0d\u9700\u8981\u542f\u52a8\u5bb9\u5668 - \u4f8b\u5982\u6784\u5efa Golang \u53ef\u80fd\u53ea\u9700\u8981\u5341\u6765\u79d2"}),"\n",(0,s.jsx)(e.li,{children:"\u9700\u8981\u73af\u5883\u9700\u8981\u63d0\u524d\u51c6\u5907\u597d"}),"\n",(0,s.jsx)(e.li,{children:"\u5efa\u8bae\u4f7f\u7528 root \u6743\u9650\uff0c\u56e0\u6b64\u5efa\u8bae\u901a\u8fc7 docker \u6765\u4f7f\u7528"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["docker\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u652f\u6301 image \u6307\u5b9a\u955c\u50cf"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["ssh\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u901a\u8fc7 SSH \u6267\u884c\u547d\u4ee4\uff0cCI \u6267\u884c\u4efb\u52a1\u65f6\u53ef\u80fd\u66f4\u6709\u610f\u4e49"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["kubernetes\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5728\u96c6\u7fa4\u73af\u5883\u4e0b"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.li,{children:"docker-windows, docker-ssh, parallels, virtualbox, docker+machine, docker-ssh+machine"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\u53c2\u8003\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://about.gitlab.com/blog/2020/05/27/best-practices-for-kubernetes-runners/",children:"Best practices to keep your Kubernetes runners moving"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# \u67e5\u770b\u6ce8\u518c\u53c2\u6570\ndocker run --rm -it gitlab/gitlab-runner:alpine register --help\n# \u4ea4\u4e92\u5f0f\u6ce8\u518c\ndocker run --rm -it gitlab/gitlab-runner:alpine register\n# \u975e\u4ea4\u4e92\u5f0f\u6ce8\u518c\nTOKEN=""\n# \u6ce8\u518c\u4e3a docker executor\ndocker run --rm \\\n  -v /data/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner:alpine register \\\n  --non-interactive \\\n  --executor "docker" \\\n  --docker-image wener/base:latest \\\n  --url "https://gitlab.com/" \\\n  --registration-token "$TOKEN" \\\n  --description "docker-runner" \\\n  --tag-list "docker,internal" \\\n  --run-untagged="true" \\\n  --locked="false" \\\n  --access-level="not_protected"\n\n# \u4f1a\u751f\u6210\u914d\u7f6e /data/gitlab-runner/config/config.toml\n\n# \u542f\u52a8 runner\ndocker run -d --restart always -e TZ=Asia/Shanghai \\\n  -v /data/gitlab-runner/config:/etc/gitlab-runner \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --name gitlab-runner gitlab/gitlab-runner:alpine\n'})}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"register"}),(0,s.jsx)(e.th,{children:"env"}),(0,s.jsx)(e.th,{children:"note"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-r,--registration-token=VALUE"}),(0,s.jsx)(e.td,{children:"REGISTRATION_TOKEN"}),(0,s.jsx)(e.td,{children:"\u65b0\u6ce8\u518c"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-t,--token"}),(0,s.jsx)(e.td,{children:"CI_SERVER_TOKEN"}),(0,s.jsx)(e.td,{children:"\u8bc6\u522b\u5df2\u7ecf\u6ce8\u518c"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-u,--url"}),(0,s.jsx)(e.td,{children:"CI_SERVER_URL"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"-n,--non-interactive"}),(0,s.jsx)(e.td,{children:"REGISTER_NON_INTERACTIVE"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"--builds-dir"}),(0,s.jsx)(e.td,{children:"RUNNER_BUILDS_DIR"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"--cache-dir"}),(0,s.jsx)(e.td,{children:"RUNNER_CACHE_DIR"}),(0,s.jsx)(e.td,{})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"--executor"}),(0,s.jsx)(e.td,{children:"RUNNER_EXECUTOR"}),(0,s.jsx)(e.td,{children:"shell, docker"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"--name,--description"}),(0,s.jsx)(e.td,{children:"RUNNER_NAME"}),(0,s.jsx)(e.td,{})]})]})]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"export REGISTER_NON_INTERACTIVE=true\n"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.gitlab.com/runner/commands/#gitlab-runner-register",children:"https://docs.gitlab.com/runner/commands/#gitlab-runner-register"})}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u914d\u7f6e",children:"\u914d\u7f6e"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["/etc/gitlab-runner/config.toml - ",(0,s.jsx)(e.code,{children:"*nix"})]}),"\n",(0,s.jsxs)(e.li,{children:["~/.gitlab-runner/config.tom - ",(0,s.jsx)(e.code,{children:"*nix"})," \u975e root"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"./config.toml"})," - \u5176\u4ed6"]}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://docs.gitlab.com/runner/configuration/advanced-configuration.html",children:"Advanced configuration"})}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ini",children:'concurrent=4\n# debug, info, warn, error, fatal, panic\nlog_level=info\n# runner, text, json\nlog_format=runner\n# \u68c0\u6d4b\u4efb\u52a1\u7684\u95f4\u9694 - \u6700\u4f4e 3s\ncheck_interval=3\n# \u9519\u8bef\u53d1\u9001\u5230 Sentry\nsentry_dsn=false\n# metrics \u5730\u5740\n# listen_address=0.0.0.0:9090\n\n# \u591a runner \u534f\u540c\u7528\u7684\u4f1a\u8bdd\u670d\u52a1\n[session_server]\n  listen_address = "[::]:8093"\n  advertise_address = "runner-host-name.tld:8093"\n  session_timeout = 1800\n\n[[runners]]\n  name = "My Docker Runner"\n  # Gitlab \u5730\u5740\n  url = "http://127.0.0.1:3000/"\n  # \u5185\u90e8\u7279\u6b8a token\n  token = "$TOKEN"\n  # tls-ca-file\n  # tls-cert-file\n  # tls-key-file\n  # \u8be5 token \u80fd\u5e76\u884c\u5904\u7406\u7684\u4efb\u52a1\u6570 - 0 \u4e0d\u9650\n  limit=0\n  # shell, docker, docker-windows, docker-ssh, ssh, parallels, virtualbox, docker+machine\n  # docker-ssh+machine, kubernetes\n  executor = "docker"\n  # bash, sh, powershell, pwsh (PowerShell Core)\n  shell=""\n  # \u6784\u5efa\u76ee\u5f55 - Locally, Docker, SSH\n  # builds_dir=/build\n  # \u7f13\u5b58\u76ee\u5f55 - Locally, Docker, SSH - docker \u73af\u5883\u9700\u8981\u8be5\u76ee\u5f55\u5728 volume \u4e2d\n  # cache_dir=/cache\n  # \u73af\u5883\u53d8\u91cf\n  # environment=["ENV=value", "LC_ALL=en_US.UTF-8"]\n  # \u8bf7\u6c42\u4efb\u52a1\u7684\u5e76\u53d1\n  request_concurrency=1\n  # \u65e5\u5fd7\u5927\u5c0f - \u9ed8\u8ba4 4MB\n  output_limit=4096\n  # clone \u4e4b\u524d hook \u811a\u672c\n  # pre_clone_script=\n  # pre_build_script\n  # post_build_script\n\n  # \u4fee\u6539 clone \u7528\u7684\u5730\u5740\n  # clone_url\n\n  # \u662f\u5426\u7981\u7528 CI_DEBUG_TRACE \u7279\u6027\n  # debug_trace_disabled\n  # Extra job monitoring workers that pass their results as job artifacts to GitLab\n  # referees\n\n# \u81ea\u5b9a\u4e49\u6784\u5efa\u76ee\u5f55\n# GIT_CLONE_PATH\n[runners.custom_build_dir]\n# \u9ed8\u8ba4\u542f\u7528\u73af\u5883 kubernetes, docker, docker-ssh, docker+machine, docker-ssh+machine\n  # enabled = true\n[runners.docker]\n  # \u4f18\u5148\u4f7f\u7528 DOCKER_HOST\n  host=unix:///var/run/docker.sock\n  hostname=""\n  runtime=""\n\n  # ca.pem, cert.pem, key.pem\n  # tls_cert_path\n  # tls_verify\n\n  # build \u4f7f\u7528\u955c\u50cf\n  image = "docker:stable"\n  # \u5185\u5b58\u9650\u5236 - \u4f8b\u5982 1G\n  memory=""\n  memory_swap=""\n  memory_reservation=""\n\n  # OOM \u65f6\u4e0d kill\n  oom_kill_disable=false\n  # OOM kill \u4f18\u5148\u7ea7\n  oom_score_adjust=0\n\n  # CPU \u9650\u5236\n  cpuset_cpus=0\n  cpu_shares=1024\n  cpus=""\n\n  dns=[]\n  dns_search=[]\n\n  privileged=false\n\n  # \u662f\u5426\u7981\u6b62\u4fee\u6539\u5165\u53e3\n  disable_entrypoint_overwrite=false\n  userns_mode=\n  cap_add=[]\n  cap_drop=[]\n  security_opt=[]\n  devices=[]\n  cache_dir=""\n  # docker volume \u6784\u5efa\u65f6\u7f13\u5b58\n  disable_cache=true\n  network_mode=\n  wait_for_services_timeout=\n  volumes = ["/certs/client", "/cache"]\n  # \u6620\u5c04\u73b0\u6709\u955c\u50cf\u914d\u7f6e\n  # volumes = ["/opt/docker/daemon.json:/etc/docker/daemon.json:ro"]\n  volumes_from=[]\n  volume_driver=[]\n  extra_hosts=[]\n  shm_size = 0\n  links=[]\n  allowed_images=[]\n  allowed_services=[]\n  # never, if-not-present, always\n  pull_policy=always\n  sysctls=[]\n  # \u4fee\u6539\u9ed8\u8ba4 helper\n  # helper_image=""\n\n  # \u5b9a\u4e49\u670d\u52a1\u548c\u522b\u540d\n  [[runners.docker.services]]\n    name = "redis:5"\n    alias = "cache"\n\n  [[runners.docker.services]]\n    name = "docker:dind"\n    # \u5168\u5c40\u4fee\u6539 dind \u955c\u50cf\n    command = ["--registry-mirror", "https://registry-mirror.example.com"]\n\n[runners.parallels]\n  base_name=""\n  template_name=""\n  disable_snapshots=false\n\n[runners.virtualbox]\n  base_name=""\n  template_name=""\n  disable_snapshots=false\n\n[runners.ssh]\n  host = "my-production-server"\n  port = "22"\n  user = "root"\n  password = "production-server-password"\n  identity_file = ""\n\n# Docker Machine\n[runners.machine]\n# https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-runnersmachine-section\n\n# \u81ea\u5b9a\u4e49\n[runners.custom]\n\n# \u7f13\u5b58\u914d\u7f6e\n[runners.cache]\n# s3, gcs, azure\nType=s3\n# \u7f13\u5b58 URL prefix\nPath=\n# Runner \u4e4b\u95f4\u5171\u4eab\u7f13\u5b58\nShared=false\n\n  # S3 \u914d\u7f6e\n  [runners.cache.s3]\n    ServerAddress = "s3.amazonaws.com"\n    AccessKey = "AWS_S3_ACCESS_KEY"\n    SecretKey = "AWS_S3_SECRET_KEY"\n    BucketName = "runners-cache"\n    BucketLocation = "eu-west-1"\n    Insecure = false\n\n# Kubernetes\n[runners.kubernetes]\n  host = "https://45.67.34.123:4892"\n  cert_file = "/etc/ssl/kubernetes/api.crt"\n  key_file = "/etc/ssl/kubernetes/api.key"\n  ca_file = "/etc/ssl/kubernetes/ca.crt"\n  image = "golang:1.8"\n  privileged = true\n  allow_privilege_escalation = true\n  image_pull_secrets = ["docker-registry-credentials"]\n  [runners.kubernetes.node_selector]\n    gitlab = "true"\n\n[runners.referees]\n  [runners.referees.metrics]\n    prometheus_address = "http://localhost:9090"\n    query_interval = 10\n    metric_queries = []\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://about.gitlab.com/releases/2019/07/31/docker-in-docker-with-docker-19-dot-03/",children:"https://about.gitlab.com/releases/2019/07/31/docker-in-docker-with-docker-19-dot-03/"})}),"\n",(0,s.jsx)(e.h2,{id:"docker-in-docker",children:"Docker in Docker"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.code,{children:'volumes = ["/certs/client", "/cache"]'})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4566",children:"gitlab-org/gitlab-runner#4566"})}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4501",children:"gitlab-org/gitlab-runner#4501"})," - Docker in Docker 19.03 service fails"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"\u5c06\u5171\u4eab-runner-\u4fee\u6539\u4e3a-\u79c1\u6709",children:"\u5c06\u5171\u4eab runner \u4fee\u6539\u4e3a \u79c1\u6709"}),"\n",(0,s.jsx)(e.p,{children:"\u79fb\u9664 runner \u4ece\u65b0\u6dfb\u52a0"}),"\n",(0,s.jsx)(e.h2,{id:"windows",children:"Windows"}),"\n",(0,s.jsxs)(e.ol,{start:"0",children:["\n",(0,s.jsxs)(e.li,{children:["\u4e0b\u8f7d\u5b89\u88c5 Git ",(0,s.jsx)(e.a,{href:"https://git-scm.com/download/win",children:"https://git-scm.com/download/win"})]}),"\n"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u5efa\u8bae\u4e0b\u8f7d Portable \u89e3\u538b\u5373\u53ef"}),"\n",(0,s.jsx)(e.li,{children:"\u5982\u679c\u60f3\u5b89\u88c5 Runner \u4e3a Service \u5219\u9700\u8981\u7528 msi"}),"\n"]}),"\n",(0,s.jsxs)(e.ol,{start:"0",children:["\n",(0,s.jsxs)(e.li,{children:["\u4e0b\u8f7d ",(0,s.jsx)(e.a,{href:"https://docs.gitlab.com/runner/install/windows.html",children:"Windows Runner"})]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'mkdir -p /usr/local/bin\n# \u6253\u5f00 bin \u76ee\u5f55 - \u590d\u5236\u4e0b\u8f7d\u7684 gitlab runner \u5230\u8fd9\u91cc\uff0c\u5e76\u66f4\u540d\u4e3a gitlab-runner.exe\nstart "$(cygpath -d /usr/local/bin)"\n\n# gitlab TOKEN\nTOKEN=\ngitlab-runner register \\\n  --non-interactive \\\n  --executor shell \\\n  --shell bash \\\n  --url "https://gitlab.com/" \\\n  --registration-token "$TOKEN" \\\n  --description windows-runner \\\n  --tag-list "windows,shell,bash" \\\n  --run-untagged=false \\\n  --locked=false \\\n  --access-level=not_protected \\\n  --builds-dir ./build \\\n  --cache-dir ./cache\n# \u751f\u6210\u7684\u914d\u7f6e\ncat config.toml\n# \u5728 runner \u4e0b\u6267\u884c - build \u548c cache \u4e5f\u5728\u8be5\u76ee\u5f55\u4e0b\ngitlab-runner run -d ./runner\n'})}),"\n",(0,s.jsx)(e.h2,{id:"alpinelinux",children:"AlpineLinux"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:'# \u6700\u65b0\u7248\napk add gitlab-runner -X https://mirrors.aliyun.com/alpine/edge/community/\n# register\n# \u914d\u7f6e\u6587\u4ef6 /etc/gitlab-runner/config.toml\n\n# \u9ed8\u8ba4\u4f7f\u7528 gitlab-runner \u7528\u6237\u548c\u5206\u7ec4\n# \u5982\u679c\u5728 docker \u91cc\u4f7f\u7528 root \u66f4\u65b9\u4fbf\ncat << CONF > /etc/conf.d/gitlab-runner\nGITLAB_RUNNER_USER="root"\nGITLAB_RUNNER_GROUP="root"\nCONF\n'})}),"\n",(0,s.jsx)(e.h2,{id:"shell-in-docker",children:"Shell in Docker"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u6709\u4e9b\u6784\u5efa\u73af\u5883\u53ef\u80fd\u8fd8\u4f1a\u9700\u8981 py3\uff0cgcc"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# wener/gitlab-runner include docker, make, git\ndocker run -d --restart always \\\n  -v $PWD:/etc/gitlab-runner \\\n  -v $PWD/builds:/builds \\\n  -v $PWD/cache:/cache \\\n  -e TZ=Asia/Shanghai \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --name gitlab-runner-shell wener/gitlab-runner\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u6700\u5c0f\u914d\u7f6e"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-ini",children:'concurrent = 1\ncheck_interval = 0\n# \u4e0d\u8fd0\u884c\u6ca1\u6709\u6307\u5b9a tag \u7684 - \u76f8\u5f53\u4e8e\u9ed8\u8ba4 runner - \u4e00\u822c docker \u4f1a\u901a\u7528\u4e00\u70b9\nrun_untagged=false\nshell="bash"\n\n[session_server]\n  session_timeout = 1800\n\n[[runners]]\n  name = "linux-shell-runner"\n  url = "https://gitlab.com/"\n  token = "$TOKEN"\n  executor = "shell"\n'})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"go"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"apk add go -X https://mirrors.aliyun.com/alpine/edge/community\ncurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.32.2\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"nodejs"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"apk add nodejs npm nghttp2\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"java"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"apk add openjdk11\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"k8s"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"apk add kubectl\n"})}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u81ea\u5b9a\u4e49 Runner"})}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"cat << DOCKERFILE > Dockerfile\nFROM wener/gitlab-runner\nRUN apk add --no-cache util-linux coreutils python3\nRUN apk add --no-cache nodejs npm nghttp2\nRUN apk add --no-cache go -X https://mirrors.aliyun.com/alpine/edge/community\nDOCKERFILE\n\ndocker build -t runner .\n\ndocker run -d --restart always \\\n  -v $PWD:/etc/gitlab-runner \\\n  -v $PWD/builds:/builds \\\n  -v $PWD/cache:/cache \\\n  -e TZ=Asia/Shanghai \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  --name gitlab-runner-shell runner\n"})}),"\n",(0,s.jsx)(e.h2,{id:"kubernetes-executor",children:"Kubernetes Executor"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:["\u9ed8\u8ba4 runner \u955c\u50cf ",(0,s.jsx)(e.code,{children:"gitlab/gitlab-runner:alpine-v{VERSION}"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://hub.docker.com/r/gitlab/gitlab-runner",children:"https://hub.docker.com/r/gitlab/gitlab-runner"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(e.h2,{id:"zombie-process-in-runner",children:"zombie process in Runner"}),"\n",(0,s.jsx)(e.p,{children:"\u81ea\u884c\u6784\u5efa runner \u7684\u65f6\u5019\u6ce8\u610f\u6dfb\u52a0 init"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dockerfile",children:'RUN apk add --no-cache dumb-init\nENTRYPOINT ["/usr/bin/dumb-init", "gitlab-ci-runner"]\nCMD ["run"]\n'})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/989",children:"https://gitlab.com/gitlab-org/gitlab-runner/-/issues/989"})}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,i.a)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},3354:(n,e,r)=>{var s=r(50959),i=Symbol.for("react.element"),l=Symbol.for("react.fragment"),t=Object.prototype.hasOwnProperty,c=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function o(n,e,r){var s,l={},o=null,d=null;for(s in void 0!==r&&(o=""+r),void 0!==e.key&&(o=""+e.key),void 0!==e.ref&&(d=e.ref),e)t.call(e,s)&&!a.hasOwnProperty(s)&&(l[s]=e[s]);if(n&&n.defaultProps)for(s in e=n.defaultProps)void 0===l[s]&&(l[s]=e[s]);return{$$typeof:i,type:n,key:o,ref:d,props:l,_owner:c.current}}e.Fragment=l,e.jsx=o,e.jsxs=o},11527:(n,e,r)=>{n.exports=r(3354)},47214:(n,e,r)=>{r.d(e,{Z:()=>c,a:()=>t});var s=r(50959);const i={},l=s.createContext(i);function t(n){const e=s.useContext(l);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:t(n.components),s.createElement(l.Provider,{value:e},n.children)}}}]);