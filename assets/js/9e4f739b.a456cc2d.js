"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[13569],{49613:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var a=r(59496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(r),d=n,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return r?a.createElement(f,l(l({ref:t},c),{},{components:r})):a.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=r[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},28228:function(e,t,r){r.r(t),r.d(t,{assets:function(){return b},contentTitle:function(){return d},default:function(){return y},frontMatter:function(){return m},metadata:function(){return f},toc:function(){return k}});var a=r(49613),n=Object.defineProperty,i=Object.defineProperties,l=Object.getOwnPropertyDescriptors,o=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&c(e,r,t[r]);if(o)for(var r of o(t))u.call(t,r)&&c(e,r,t[r]);return e};const m={title:"Ambassador"},d="Ambassador",f={unversionedId:"devops/service/ambassador",id:"devops/service/ambassador",title:"Ambassador",description:"- API Gateway + Layer 7 load balancer + Kubernetes Ingress",source:"@site/../notes/devops/service/ambassador.md",sourceDirName:"devops/service",slug:"/devops/service/ambassador",permalink:"/notes/devops/service/ambassador",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/service/ambassador.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1629019137,formattedLastUpdatedAt:"Aug 15, 2021",frontMatter:{title:"Ambassador"},sidebar:"docs",previous:{title:"\u670d\u52a1",permalink:"/notes/devops/service/"},next:{title:"Consul \u914d\u7f6e",permalink:"/notes/devops/service/consul-conf"}},b={},k=[],v={toc:k};function y(e){var t,r=e,{components:n}=r,c=((e,t)=>{var r={};for(var a in e)s.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&o)for(var a of o(e))t.indexOf(a)<0&&u.call(e,a)&&(r[a]=e[a]);return r})(r,["components"]);return(0,a.kt)("wrapper",(t=p(p({},v),c),i(t,l({components:n,mdxType:"MDXLayout"}))),(0,a.kt)("h1",p({},{id:"ambassador"}),"Ambassador"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"API Gateway + Layer 7 load balancer + Kubernetes Ingress"),(0,a.kt)("li",{parentName:"ul"},"aes = Ambassador Edge Stack"),(0,a.kt)("li",{parentName:"ul"},"\u7279\u6027",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u53ef\u914d\u5408 Service Mesh - Consul, Linkerd, Istio"),(0,a.kt)("li",{parentName:"ul"},"Ingress Controller for Kubernetes",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"K8S \u96c6\u6210 - Ingress, RBAC, CRD"),(0,a.kt)("li",{parentName:"ul"},"\u534f\u8bae - HTTP/1.0 and HTTP/1.1, HTTP/2, WebSockets, gRPC, gRPC-Web, TCP"),(0,a.kt)("li",{parentName:"ul"},"TLS - V 1.1, v 1.2 (lookup), Server Name Indication (SNI), Set minimum TLS version"),(0,a.kt)("li",{parentName:"ul"},"CORS"))),(0,a.kt)("li",{parentName:"ul"},"Edge Management",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Self-Service Edge Policies - Global policies, Edge policy console UI, CRD-based configuration"),(0,a.kt)("li",{parentName:"ul"},"Observability - Prometheus, StatsD"),(0,a.kt)("li",{parentName:"ul"},"Tracing - Zipkin, Lightstep, Jaeger, Datadog APM"))),(0,a.kt)("li",{parentName:"ul"},"Traffic Management",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"LB - Round robin, Sticky sessions, Least request"),(0,a.kt)("li",{parentName:"ul"},"Availability - Load shedding, Circuit breaking, Timeouts, Automatic retries"),(0,a.kt)("li",{parentName:"ul"},"Progressive Delivery - Canary releases, Traffic shadowing"))),(0,a.kt)("li",{parentName:"ul"},"Service Mesh",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Integrations - Istio, Linkerd, Consul"),(0,a.kt)("li",{parentName:"ul"},"Multi-cluster - Linkerd"))))),(0,a.kt)("li",{parentName:"ul"},"\u5f00\u6e90\u7248\u7f3a\u5931\u529f\u80fd",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"\u5b89\u5168\u548c\u8ba4\u8bc1",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"OAuth/OpenID\u3001JWT"),(0,a.kt)("li",{parentName:"ul"},"Rate Limiting"),(0,a.kt)("li",{parentName:"ul"},"Custom Request Filters"),(0,a.kt)("li",{parentName:"ul"},"External Filters"),(0,a.kt)("li",{parentName:"ul"},"Automatic HTTPS (ACME support)"))),(0,a.kt)("li",{parentName:"ul"},"Delivery Acceleration- CI/CD",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"MicroCD Pipeline"),(0,a.kt)("li",{parentName:"ul"},"Jenkins X"))),(0,a.kt)("li",{parentName:"ul"},"Delivery Acceleration- Service Preview"),(0,a.kt)("li",{parentName:"ul"},"Developer Portal")))),(0,a.kt)("pre",null,(0,a.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"# macOS\ncurl -fL https://metriton.datawire.io/downloads/darwin/edgectl \\\n  -o edgectl && \\\nchmod a+x ./edgectl\n./edgectl install\n\n# HELM3\nhelm repo add datawire https://www.getambassador.io\nkubectl create namespace ambassador && helm install ambassador --namespace ambassador datawire/ambassador\n\n# Docker demo\ndocker run -it -p 8080:8080 --name=ambassador --rm datawire/aes:1.6.2 --demo\n")))}y.isMDXComponent=!0}}]);