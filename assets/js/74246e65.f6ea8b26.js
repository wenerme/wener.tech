"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[55369],{49613:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=n.createContext({}),p=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),f=a,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},83060:function(e,t,r){r.r(t),r.d(t,{assets:function(){return y},contentTitle:function(){return f},default:function(){return k},frontMatter:function(){return m},metadata:function(){return d},toc:function(){return g}});var n=r(49613),a=Object.defineProperty,o=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,c=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,s=(e,t)=>{for(var r in t||(t={}))u.call(t,r)&&c(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&c(e,r,t[r]);return e};const m={title:"cpuid"},f="cpuid",d={unversionedId:"os/linux/sys/cpuid",id:"os/linux/sys/cpuid",title:"cpuid",description:"- AVX - Advanced Vector Extension",source:"@site/../notes/os/linux/sys/cpuid.md",sourceDirName:"os/linux/sys",slug:"/os/linux/sys/cpuid",permalink:"/notes/os/linux/sys/cpuid",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/sys/cpuid.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1681042995,formattedLastUpdatedAt:"Apr 9, 2023",frontMatter:{title:"cpuid"},sidebar:"docs",previous:{title:"cpu",permalink:"/notes/os/linux/sys/cpu"},next:{title:"Linux Kernel \u65e5\u5fd7\u5e38\u89c1\u95ee\u9898",permalink:"/notes/os/linux/sys/dmesg-faq"}},y={},g=[],b={toc:g};function k(e){var t,r=e,{components:a}=r,c=((e,t)=>{var r={};for(var n in e)u.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&p.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=s(s({},b),c),o(t,i({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",s({},{id:"cpuid"}),"cpuid"),(0,n.kt)("pre",null,(0,n.kt)("code",s({parentName:"pre"},{className:"language-bash"}),"cat /proc/cpuinfo | sort -u | grep --color -Ei 'AVX|FMA|NEON|F16|BLAS|SSE3|VSX'\n\ngo env -w GOPROXY=https://goproxy.cn,direct\ngo install github.com/klauspost/cpuid/v2/cmd/cpuid@latest\n~/go/bin/cpuid\n~/go/bin/cpuid | grep --color -Ei 'AVX|FMA|NEON|F16|BLAS|SSE3|VSX'\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AVX - Advanced Vector Extension",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"AVX"),(0,n.kt)("li",{parentName:"ul"},"AVX2"),(0,n.kt)("li",{parentName:"ul"},"AVX512"))),(0,n.kt)("li",{parentName:"ul"},"FMA - fused multiply\u2013add",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"FMA2"),(0,n.kt)("li",{parentName:"ul"},"FMA3"),(0,n.kt)("li",{parentName:"ul"},"128 and 256-bit Streaming SIMD Extensions"))),(0,n.kt)("li",{parentName:"ul"},"arm",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"NEON"),(0,n.kt)("li",{parentName:"ul"},"ARM_FMA"))),(0,n.kt)("li",{parentName:"ul"},"F16C"),(0,n.kt)("li",{parentName:"ul"},"FP16_VA"),(0,n.kt)("li",{parentName:"ul"},"wasm",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"WASM_SIMD"))),(0,n.kt)("li",{parentName:"ul"},"BLAS"),(0,n.kt)("li",{parentName:"ul"},"SSE3"),(0,n.kt)("li",{parentName:"ul"},"IBM PowerPC",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"VSX - Vector Scalar Extension"))),(0,n.kt)("li",{parentName:"ul"},"Golang",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",s({parentName:"li"},{href:"https://pkg.go.dev/golang.org/x/sys/cpu"}),"https://pkg.go.dev/golang.org/x/sys/cpu"))))))}k.isMDXComponent=!0}}]);