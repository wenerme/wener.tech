"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[59122],{49613:function(t,e,n){n.d(e,{Zo:function(){return m},kt:function(){return s}});var r=n(59496);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),u=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},m=function(t){var e=u(t.components);return r.createElement(p.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,p=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),d=u(n),s=a,k=d["".concat(p,".").concat(s)]||d[s]||c[s]||l;return n?r.createElement(k,o(o({ref:e},m),{},{components:n})):r.createElement(k,o({ref:e},m))}));function s(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var p in e)hasOwnProperty.call(e,p)&&(i[p]=e[p]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},66242:function(t,e,n){n.r(e),n.d(e,{assets:function(){return g},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return d},metadata:function(){return k},toc:function(){return f}});var r=n(49613),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,m=(t,e,n)=>e in t?a(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,c=(t,e)=>{for(var n in e||(e={}))p.call(e,n)&&m(t,n,e[n]);if(i)for(var n of i(e))u.call(e,n)&&m(t,n,e[n]);return t};const d={tags:["Glossary"]},s="Network \u8bcd\u6c47\u8868",k={unversionedId:"os/linux/network/network-glossary",id:"os/linux/network/network-glossary",title:"Network \u8bcd\u6c47\u8868",description:"| abbr. | stand for                         |",source:"@site/../notes/os/linux/network/network-glossary.md",sourceDirName:"os/linux/network",slug:"/os/linux/network/glossary",permalink:"/notes/os/linux/network/glossary",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/network/network-glossary.md",tags:[{label:"Glossary",permalink:"/notes/tags/glossary"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1642767775,formattedLastUpdatedAt:"Jan 21, 2022",frontMatter:{tags:["Glossary"]},sidebar:"docs",previous:{title:"\u7f51\u7edc\u5e38\u89c1\u95ee\u9898",permalink:"/notes/os/linux/network/faq"},next:{title:"NetworkManager",permalink:"/notes/os/linux/network/networkmanager"}},g={},f=[],y={toc:f};function b(t){var e,n=t,{components:a}=n,m=((t,e)=>{var n={};for(var r in t)p.call(t,r)&&e.indexOf(r)<0&&(n[r]=t[r]);if(null!=t&&i)for(var r of i(t))e.indexOf(r)<0&&u.call(t,r)&&(n[r]=t[r]);return n})(n,["components"]);return(0,r.kt)("wrapper",(e=c(c({},y),m),l(e,o({components:a,mdxType:"MDXLayout"}))),(0,r.kt)("h1",c({},{id:"network-\u8bcd\u6c47\u8868"}),"Network \u8bcd\u6c47\u8868"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",c({parentName:"tr"},{align:null}),"abbr."),(0,r.kt)("th",c({parentName:"tr"},{align:null}),"stand for"),(0,r.kt)("th",c({parentName:"tr"},{align:null})))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"GRE"),(0,r.kt)("td",c({parentName:"tr"},{align:null})),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"GRO"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Generic Receive Offload"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"GSO"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Generic Segmentation Offload"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"IPIP"),(0,r.kt)("td",c({parentName:"tr"},{align:null})),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"LACP"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Link Aggregation Control Protocol"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"LAG"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Link Aggregation Group"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"\u94fe\u8def\u805a\u5408\u5206\u7ec4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"LRO"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Large Receive Offload"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"SCTP"),(0,r.kt)("td",c({parentName:"tr"},{align:null})),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"SIT"),(0,r.kt)("td",c({parentName:"tr"},{align:null})),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"STP"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"Spanning Tree Protocol"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"TSO"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"TCP Segmentation Offload"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",c({parentName:"tr"},{align:null}),"USO"),(0,r.kt)("td",c({parentName:"tr"},{align:null}),"UDP Segmentation Offload"),(0,r.kt)("td",c({parentName:"tr"},{align:null}))))))}b.isMDXComponent=!0}}]);