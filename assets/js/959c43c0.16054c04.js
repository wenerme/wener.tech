"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[65],{89559:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return h},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var a=n(96600),r=n(27279),l=(n(59496),n(3905)),s=["components"],o={title:"clash"},i=void 0,p={unversionedId:"service/network/clash",id:"service/network/clash",title:"clash",description:"- Dreamacro/clash",source:"@site/notes/service/network/clash.md",sourceDirName:"service/network",slug:"/service/network/clash",permalink:"/notes/service/network/clash",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/network/clash.md",tags:[],version:"current",frontMatter:{title:"clash"},sidebar:"docs",previous:{title:"Avahi",permalink:"/notes/service/network/avahi"},next:{title:"coturn",permalink:"/notes/service/network/coturn"}},c={},m=[{value:"Awesome",id:"awesome",level:2},{value:"notes",id:"notes",level:2},{value:"API",id:"api",level:2},{value:"conf",id:"conf",level:2},{value:"Rule",id:"rule",level:2},{value:"TProxy",id:"tproxy",level:2},{value:"openrc",id:"openrc",level:2},{value:"Start TProxy server error: operation not permitted",id:"start-tproxy-server-error-operation-not-permitted",level:2}],u={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash"},"Dreamacro/clash"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"GPLv3, Golang"),(0,l.kt)("li",{parentName:"ul"},"rule-based tunnel"))),(0,l.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/juewuy/ShellClash"},"juewuy/ShellClash")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://clash.gitbook.io/doc/"},"https://clash.gitbook.io/doc/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/vernesong/OpenClash"},"vernesong/OpenClash")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Loyalsoldier"},"https://github.com/Loyalsoldier"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Loyalsoldier/geoip"},"Loyalsoldier/geoip")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/eycorsican/leaf"},"eycorsican/leaf")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/eycorsican/go-tun2socks"},"eycorsican/go-tun2socks")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/EAimTY/tuic"},"EAimTY/tuic")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/HyNetwork/hysteria"},"HyNetwork/hysteria")))),(0,l.kt)("li",{parentName:"ul"},"Premium - \u95ed\u6e90",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash/releases/tag/premium"},"\u53d1\u5e03\u5386\u53f2")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash/wiki/Premium-Core-Features"},"Premium-Core-Features")),(0,l.kt)("li",{parentName:"ul"},"tun,script,tracing"),(0,l.kt)("li",{parentName:"ul"},"rule-providers",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"type: http,file - \u6307\u5411 yaml"),(0,l.kt)("li",{parentName:"ul"},"yaml \u5305\u542b ",(0,l.kt)("inlineCode",{parentName:"li"},"{payload:[]}")))),(0,l.kt)("li",{parentName:"ul"},"ebpf - redirect-to-tun"),(0,l.kt)("li",{parentName:"ul"},"auto-redir - \u914d\u5408 tun \u66ff\u4ee3 redir-port")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# golang\ngo install github.com/Dreamacro/clash@latest\n\n# Docker\n# https://hub.docker.com/r/dreamacro/clash\n# https://github.com/Dreamacro/clash/blob/master/Dockerfile\ndocker run --rm -it --name clash dreamacro/clash\n")),(0,l.kt)("h2",{id:"awesome"},"Awesome"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash"},"Dreamacro/clash")),(0,l.kt)("li",{parentName:"ul"},"Client",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/vernesong/OpenClash"},"vernesong/OpenClash"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"OpenWRT Client"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Fndroid/clash_for_windows_pkg"},"Fndroid/clash_for_windows_pkg")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ClashDotNetframework/ClashDotNetframework"},"ClashDotNetframework"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"DotNet, Windows"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/yichengchen/clashX"},"yichengchen/clashX"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"macOS"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/WhoJave/clashX/tree/master"},"WhoJave/clashX")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Kr328/ClashForAndroid"},"Kr328/ClashForAndroid")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/WhoJave/ClashA"},"WhoJave/ClashA")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ccg2018/ClashA"},"ccg2018/ClashA")),(0,l.kt)("li",{parentName:"ul"},"iOS",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://apps.apple.com/app/choc/id1582542227"},"https://apps.apple.com/app/choc/id1582542227"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6536\u8d39\uff0c\u4e0d\u4e00\u5b9a\u53ef\u7528"))))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/SpongeNobody/Clashy"},"SpongeNobody/Clashy")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://sites.google.com/view/honven/%E9%A6%96%E9%A1%B5/%E6%9C%BA%E5%9C%BA%E9%93%BE%E6%8E%A5%E8%BD%AC%E6%8D%A2"},"\u94fe\u63a5\u8f6c\u6362")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash-tracing"},"Dreamacro/clash-tracing")),(0,l.kt)("li",{parentName:"ul"},"Dashboard",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/haishanh/yacd"},"haishanh/yacd"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MIT, Typescript"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"http://yacd.haishan.me/"},"http://yacd.haishan.me/")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash-dashboard"},"Dreamacro/clash-dashboard"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"MIT, Typescript"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://clash.razord.top/"},"https://clash.razord.top/")),(0,l.kt)("li",{parentName:"ul"},"Docker \u5185\u7f6e")))))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"# Dreamacro/clash-dashboard\ncurl -LO https://github.com/Dreamacro/clash-dashboard/archive/gh-pages.zip\nunzip gh-pages.zip\n\n# haishanh/yacd\ncurl -LO https://github.com/haishanh/yacd/archive/gh-pages.zip\nmv yacd-gh-pages/ ~/.config/clash\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"external-controller: 0.0.0.0:9090\nsecret: external-controller-secret\n# \u9ed8\u8ba4\u76ee\u5f55 \uff5e/.config/clash\n# http://{{external-controller}}/ui\n# yacd-gh-pages\nexternal-ui: clash-dashboard-gh-pages\n")),(0,l.kt)("h2",{id:"notes"},"notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4f1a\u4e0b\u8f7d MMDB")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"curl -o ~/.config/clash/Country.mmdb https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb\n")),(0,l.kt)("h2",{id:"api"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'# reload \u91cd\u8f7d\u914d\u7f6e\ncurl -X PUT 127.0.0.1:9090/configs --json "{}"\n# \u914d\u7f6e Secret \u540e\ncurl -X PUT -H "Authorization: Bearer secret" 127.0.0.1:9090/configs --json "{}"\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Dreamacro/clash/wiki/external-controller-API-reference"},"https://github.com/Dreamacro/clash/wiki/external-controller-API-reference"))),(0,l.kt)("h2",{id:"conf"},"conf"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"config.yaml"),(0,l.kt)("li",{parentName:"ul"},"mode",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"rule - \u57fa\u4e8e\u89c4\u5219\u8def\u7531"),(0,l.kt)("li",{parentName:"ul"},"global - \u5168\u5c40\u8def\u7531\u5230\u5355\u4e2a\u51fa\u53e3"),(0,l.kt)("li",{parentName:"ul"},"direct - \u4e0d\u8def\u7531\u76f4\u63a5\u8bbf\u95ee"))),(0,l.kt)("li",{parentName:"ul"},"proxies - \u4e0a\u6e38\u4ee3\u7406",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"type",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"ss"),(0,l.kt)("li",{parentName:"ul"},"ssr - ShadowsocksR"),(0,l.kt)("li",{parentName:"ul"},"vmess"),(0,l.kt)("li",{parentName:"ul"},"socks5"),(0,l.kt)("li",{parentName:"ul"},"http"),(0,l.kt)("li",{parentName:"ul"},"snell"),(0,l.kt)("li",{parentName:"ul"},"trojan"))))),(0,l.kt)("li",{parentName:"ul"},"proxy-groups - \u4ee3\u7406\u5206\u7ec4 - LB \u7b56\u7565",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"type",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"select - \u624b\u52a8\u9009\u62e9"),(0,l.kt)("li",{parentName:"ul"},"url-test - \u4f7f\u7528 url \u6d4b\u901f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"url ",(0,l.kt)("a",{parentName:"li",href:"http://www.gstatic.com/generate_204"},"http://www.gstatic.com/generate_204")),(0,l.kt)("li",{parentName:"ul"},"interval 300"))),(0,l.kt)("li",{parentName:"ul"},"relay - \u4e32\u8054\u6240\u6709\u4ee3\u7406"),(0,l.kt)("li",{parentName:"ul"},"fallback - \u57fa\u4e8e URL \u68c0\u6d4b\u8fdb\u884c\u56de\u6eda"),(0,l.kt)("li",{parentName:"ul"},"load-balance - \u57fa\u4e8e eTLD+1 \u8fdb\u884c\u8d1f\u8f7d"))))),(0,l.kt)("li",{parentName:"ul"},"proxy-providers - \u6307\u5411 yaml \u914d\u7f6e - \u5305\u542b ",(0,l.kt)("inlineCode",{parentName:"li"},"proxies: []"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"type http,file"))),(0,l.kt)("li",{parentName:"ul"},"rules",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"DOMAIN"),(0,l.kt)("li",{parentName:"ul"},"DOMAIN-SUFFIX"),(0,l.kt)("li",{parentName:"ul"},"DOMAIN-KEYWORD"),(0,l.kt)("li",{parentName:"ul"},"GEOIP"),(0,l.kt)("li",{parentName:"ul"},"IP-CIDR"),(0,l.kt)("li",{parentName:"ul"},"IP-CIDR6"),(0,l.kt)("li",{parentName:"ul"},"SRC-IP-CIDR"),(0,l.kt)("li",{parentName:"ul"},"SRC-PORT"),(0,l.kt)("li",{parentName:"ul"},"DST-PORT"),(0,l.kt)("li",{parentName:"ul"},"PROCESS-NAME"),(0,l.kt)("li",{parentName:"ul"},"MATCH - \u9ed8\u8ba4\u5339\u914d"),(0,l.kt)("li",{parentName:"ul"},"\u6dfb\u52a0 no-resolve \u53ef\u907f\u514d resolve \u57df\u540d \u53bb\u5339\u914d cidr"),(0,l.kt)("li",{parentName:"ul"},"\u7279\u6b8a\u7b56\u7565 DIRECT, REJECT")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# HTTP(S) \u4ee3\u7406\u7aef\u53e3\nport: 7890\n# SOCKS5 \u4ee3\u7406\u7aef\u53e3\nsocks-port: 7891\n\n# Linux, macOS \u8f6c\u53d1\u900f\u660e\u4ee3\u7406\u7aef\u53e3 (Redirect TCP and TProxy UDP)\n# redir-port: 7892\n\n# Linux TProxy \u900f\u660e\u4ee3\u7406\u7aef\u53e3 (TProxy TCP and TProxy UDP)\n# tproxy-port: 7893\n\n# HTTP(S), SOCKS4(A)/SOCKS5 \u591a\u534f\u8bae\u7aef\u53e3\n# mixed-port: 7890\n\n# SOCKS5/HTTP(S) \u4ee3\u7406\u8ba4\u8bc1\n# authentication:\n#  - \"user1:pass1\"\n#  - \"user2:pass2\"\n\n# \u5141\u8bb8 Lan \u8fde\u63a5\u5230\u672c\u5730\u7aef\u53e3\nallow-lan: false\n# allow-lan=true \u65f6\u7684\u76d1\u542c\u7ed1\u5b9a\u5730\u5740\nbind-address: '*'\n\n# \u8def\u7531\u6a21\u5f0f\n# rule - \u57fa\u4e8e\u89c4\u5219\u7684\u5305\u8f6c\u53d1\n# global - \u5168\u5c40\u5355\u51fa\u53e3\n# direct - \u76f4\u63a5\u8bbf\u95ee\nmode: rule\n\n# \u65e5\u5fd7\u7ea7\u522b\n# info / warning / error / debug / silent\nlog-level: info\n\nipv6: false\n\n# \u5916\u90e8 REST API \u63a5\u53e3 \u76d1\u542c\u5730\u5740\nexternal-controller: 127.0.0.1:9090\n# UI \u76ee\u5f55\n# \u8bbf\u95ee\u5730\u5740 http://{{external-controller}}/ui\nexternal-ui: folder\n# REST \u7684 \u5bc6\u94a5\n# Authorization: Bearer ${secret}\n# secret: \"\"\n\n# Outbound interface name\ninterface-name: en0\n\n# Linux fwmark\nrouting-mark: 6666\n\n# Static hosts for DNS server and connection establishment (like /etc/hosts)\n#\n# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)\n# Non-wildcard domain names have a higher priority than wildcard domain names\n# e.g. foo.example.com > *.example.com > .example.com\n# P.S. +.foo.com equals to .foo.com and foo.com\nhosts:\n  # '*.clash.dev': 127.0.0.1\n  # '.dev': 127.0.0.1\n  # 'alpha.clash.dev': '::1'\n\nprofile:\n  # Store the `select` results in $HOME/.config/clash/.cache\n  # set false If you don't want this behavior\n  # when two different configurations have groups with the same name, the selected values are shared\n  store-selected: false\n\n  # persistence fakeip\n  store-fake-ip: true\n\ndns:\n  enable: false\n  listen: 0.0.0.0:53\n  # ipv6: false # when the false, response to AAAA questions will be empty\n\n  # These nameservers are used to resolve the DNS nameserver hostnames below.\n  # Specify IP addresses only\n  default-nameserver:\n    - 114.114.114.114\n    - 8.8.8.8\n  enhanced-mode: redir-host # or fake-ip\n  fake-ip-range: 198.18.0.1/16 # Fake IP addresses pool CIDR\n  # use-hosts: true # lookup hosts and return IP record\n\n  # Hostnames in this list will not be resolved with fake IPs\n  # i.e. questions to these domain names will always be answered with their\n  # real IP addresses\n  # fake-ip-filter:\n  #   - '*.lan'\n  #   - localhost.ptlogin2.qq.com\n\n  # Supports UDP, TCP, DoT, DoH. You can specify the port to connect to.\n  # All DNS questions are sent directly to the nameserver, without proxies\n  # involved. Clash answers the DNS question with the first result gathered.\n  nameserver:\n    - 114.114.114.114 # default value\n    - 8.8.8.8 # default value\n    - tls://dns.rubyfish.cn:853 # DNS over TLS\n    - https://1.1.1.1/dns-query # DNS over HTTPS\n    - dhcp://en0 # dns from dhcp\n\n  # When `fallback` is present, the DNS server will send concurrent requests\n  # to the servers in this section along with servers in `nameservers`.\n  # The answers from fallback servers are used when the GEOIP country\n  # is not `CN`.\n  # fallback:\n  #   - tcp://1.1.1.1\n\n  # If IP addresses resolved with servers in `nameservers` are in the specified\n  # subnets below, they are considered invalid and results from `fallback`\n  # servers are used instead.\n  #\n  # IP address resolved with servers in `nameserver` is used when\n  # `fallback-filter.geoip` is true and when GEOIP of the IP address is `CN`.\n  #\n  # If `fallback-filter.geoip` is false, results from `nameserver` nameservers\n  # are always used if not match `fallback-filter.ipcidr`.\n  #\n  # This is a countermeasure against DNS pollution attacks.\n  # fallback-filter:\n  #   geoip: true\n  #   geoip-code: CN\n  #   ipcidr:\n  #     - 240.0.0.0/4\n  #   domain:\n  #     - '+.google.com'\n  #     - '+.facebook.com'\n  #     - '+.youtube.com'\n\n  # Lookup domains via specific nameservers\n  # nameserver-policy:\n  #   'www.baidu.com': '114.114.114.114'\n  #   '+.internal.crop.com': '10.0.0.1'\n\n# \u4ee3\u7406\u8bbe\u7f6e\nproxies:\n  # Shadowsocks\n  # The supported ciphers (encryption methods):\n  #   aes-128-gcm aes-192-gcm aes-256-gcm\n  #   aes-128-cfb aes-192-cfb aes-256-cfb\n  #   aes-128-ctr aes-192-ctr aes-256-ctr\n  #   rc4-md5 chacha20-ietf xchacha20\n  #   chacha20-ietf-poly1305 xchacha20-ietf-poly1305\n  - name: 'ss1'\n    type: ss\n    server: server\n    port: 443\n    cipher: chacha20-ietf-poly1305\n    password: 'password'\n    # udp: true\n    # \u63d2\u4ef6\u914d\u7f6e\n    plugin: obfs # obfs, v2ray-plugin\n    plugin-opts:\n      # obfs - tls,http\n      # v2ray-plugin - websocket - \u6682\u4e0d\u652f\u6301 QUIC\n      mode: tls\n      # host: bing.com\n\n      # v2ray-plugin \u914d\u7f6e\n      # tls: true # wss\n      # skip-cert-verify: true\n      # host: bing.com\n      # path: \"/\"\n      # mux: true\n      # headers:\n      #   custom: value\n\n  # vmess\n  # cipher - auto/aes-128-gcm/chacha20-poly1305/none\n  - name: 'vmess'\n    type: vmess\n    server: server\n    port: 443\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    # udp: true\n    # tls: true\n    # skip-cert-verify: true\n    # servername: example.com # priority over wss host\n    # network: ws\n    # ws-opts:\n    #   path: /path\n    #   headers:\n    #     Host: v2ray.com\n    #   max-early-data: 2048\n    #   early-data-header-name: Sec-WebSocket-Protocol\n\n  - name: 'vmess-h2'\n    type: vmess\n    server: server\n    port: 443\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    network: h2\n    tls: true\n    h2-opts:\n      host:\n        - http.example.com\n        - http-alt.example.com\n      path: /\n\n  - name: 'vmess-http'\n    type: vmess\n    server: server\n    port: 443\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    # udp: true\n    # network: http\n    # http-opts:\n    #   # method: \"GET\"\n    #   # path:\n    #   #   - '/'\n    #   #   - '/video'\n    #   # headers:\n    #   #   Connection:\n    #   #     - keep-alive\n\n  - name: vmess-grpc\n    server: server\n    port: 443\n    type: vmess\n    uuid: uuid\n    alterId: 32\n    cipher: auto\n    network: grpc\n    tls: true\n    servername: example.com\n    # skip-cert-verify: true\n    grpc-opts:\n      grpc-service-name: 'example'\n\n  # socks5\n  - name: 'socks'\n    type: socks5\n    server: server\n    port: 443\n    # username: username\n    # password: password\n    # tls: true\n    # skip-cert-verify: true\n    # udp: true\n\n  # http\n  - name: 'http'\n    type: http\n    server: server\n    port: 443\n    # username: username\n    # password: password\n    # tls: true # https\n    # skip-cert-verify: true\n    # sni: custom.com\n\n  # Snell\n  # Beware that there's currently no UDP support yet\n  - name: 'snell'\n    type: snell\n    server: server\n    port: 44046\n    psk: yourpsk\n    # version: 2\n    # obfs-opts:\n    # mode: http # or tls\n    # host: bing.com\n\n  # Trojan\n  - name: 'trojan'\n    type: trojan\n    server: server\n    port: 443\n    password: yourpsk\n    # udp: true\n    # sni: example.com # aka server name\n    # alpn:\n    #   - h2\n    #   - http/1.1\n    # skip-cert-verify: true\n\n  - name: trojan-grpc\n    server: server\n    port: 443\n    type: trojan\n    password: 'example'\n    network: grpc\n    sni: example.com\n    # skip-cert-verify: true\n    udp: true\n    grpc-opts:\n      grpc-service-name: 'example'\n\n  - name: trojan-ws\n    server: server\n    port: 443\n    type: trojan\n    password: 'example'\n    network: ws\n    sni: example.com\n    # skip-cert-verify: true\n    udp: true\n    # ws-opts:\n    # path: /path\n    # headers:\n    #   Host: example.com\n\n  # ShadowsocksR\n  # The supported ciphers (encryption methods): all stream ciphers in ss\n  # The supported obfses:\n  #   plain http_simple http_post\n  #   random_head tls1.2_ticket_auth tls1.2_ticket_fastauth\n  # The supported supported protocols:\n  #   origin auth_sha1_v4 auth_aes128_md5\n  #   auth_aes128_sha1 auth_chain_a auth_chain_b\n  - name: 'ssr'\n    type: ssr\n    server: server\n    port: 443\n    cipher: chacha20-ietf\n    password: 'password'\n    obfs: tls1.2_ticket_auth\n    protocol: auth_sha1_v4\n    # obfs-param: domain.tld\n    # protocol-param: \"#\"\n    # udp: true\n\n# \u4ee3\u7406\u5206\u7ec4 - LB \u7b56\u7565\nproxy-groups:\n  # \u4e2d\u7ee7 - \u4f1a\u7ecf\u8fc7\u7ed9\u5b9a\u7684\u6240\u6709\u4ee3\u7406\n  # \u4e0d\u652f\u6301 UDP\n  # clash <-> http <-> vmess <-> ss1 <-> ss2 <-> Internet\n  - name: 'relay'\n    type: relay\n    proxies:\n      - http\n      - vmess\n      - ss1\n      - ss2\n\n  # \u57fa\u4e8e\u8bf7\u6c42 URL \u7684\u901f\u5ea6\u6765\u9009\u62e9\n  - name: 'auto'\n    type: url-test\n    proxies:\n      - ss1\n      - ss2\n    # tolerance: 150\n    # lazy: true\n    url: 'http://www.gstatic.com/generate_204'\n    interval: 300\n\n  # \u57fa\u4e8e\u4f18\u5148\u7ea7\u9009\u62e9\u4e00\u4e2a\u53ef\u7528\u7684\u4ee3\u7406\n  # \u7c7b\u4f3c\u4e00\u4e2a url-test \u81ea\u52a8\u5206\u7ec4\n  - name: 'fallback-auto'\n    type: fallback\n    proxies:\n      - ss1\n      - ss2\n    url: 'http://www.gstatic.com/generate_204'\n    interval: 300\n\n  # \u57fa\u4e8e eTLD+1 \u8fdb\u884c\u8d1f\u8f7d\n  - name: 'load-balance'\n    type: load-balance\n    proxies:\n      - ss1\n      - ss2\n    url: 'http://www.gstatic.com/generate_204'\n    interval: 300\n    # strategy: consistent-hashing # round-robin\n\n  # \u9009\u62e9 proxy \u6216 proxy group\n  # \u53ef\u901a\u8fc7 RESTful API \u6765\u5207\u6362\n  - name: Proxy\n    type: select\n    # disable-udp: true\n    proxies:\n      - auto\n      - DIRECT # \u53ef\u4ee5\u6307\u5b9a \u76f4\u63a5\n    # DIRECT \u914d\u7f6e\n    interface-name: en1\n    routing-mark: 6667\n    #\n    use:\n      - provider1\n\nproxy-providers:\n  provider1:\n    type: http\n    url: 'url'\n    interval: 3600\n    path: ./provider1.yaml\n    health-check:\n      enable: true\n      interval: 600\n      # lazy: true\n      url: http://www.gstatic.com/generate_204\n  test:\n    type: file\n    path: /test.yaml\n    health-check:\n      enable: true\n      interval: 36000\n      url: http://www.gstatic.com/generate_204\n\nrules:\n  - IP-CIDR,127.0.0.0/8,DIRECT\n  - IP-CIDR,127.0.0.0/8,DIRECT\n  - DOMAIN-SUFFIX,google.com,auto\n  - DOMAIN,google.com,auto\n  - DOMAIN-KEYWORD,google,auto\n  - DOMAIN-SUFFIX,ad.com,REJECT\n  - SRC-IP-CIDR,192.168.1.201/32,DIRECT\n  # optional param \"no-resolve\" for IP rules (GEOIP, IP-CIDR, IP-CIDR6)\n  - GEOIP,CN,DIRECT\n  - DST-PORT,80,DIRECT\n  - SRC-PORT,7777,DIRECT\n  - RULE-SET,apple,REJECT # Premium only\n  - MATCH,auto\n")),(0,l.kt)("h2",{id:"rule"},"Rule"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml"},"# \u5df2\u77e5 IP \u6bb5\n- IP-CIDR,127.0.0.0/8,REJECT\n- IP-CIDR,0.0.0.0/8,REJECT\n- GEOIP,LAN,DIRECT\n\n# \u56fd\u5185\u5e38\u89c1\n- DOMAIN-SUFFIX,taobao.com,DIRECT\n- DOMAIN-SUFFIX,qq.com,DIRECT\n- DOMAIN-SUFFIX,jdapi.com,DIRECT\n\n# \u56fd\u5916\u5e38\u89c1\n- DOMAIN-SUFFIX,google.com,auto\n\n- GEOIP,CN,DIRECT\n\n#- RULE-SET,China,DIRECT\n\n- MATCH,auto\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"type"),(0,l.kt)("th",{parentName:"tr",align:null},"desc"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOMAIN-SUFFIX"),(0,l.kt)("td",{parentName:"tr",align:null},"\u57df\u540d\u540e\u7f00")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOMAIN"),(0,l.kt)("td",{parentName:"tr",align:null},"\u57df\u540d\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DOMAIN-KEYWORD"),(0,l.kt)("td",{parentName:"tr",align:null},"\u57df\u540d\u5173\u952e\u5b57\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"IP-CIDR"),(0,l.kt)("td",{parentName:"tr",align:null},"IP \u6bb5\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SRC-IP-CIDR"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6e90 IP \u6bb5\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GEOIP"),(0,l.kt)("td",{parentName:"tr",align:null},"GEOIP \u6570\u636e\u5e93\uff08\u56fd\u5bb6\u4ee3\u7801\uff09\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"DST-PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"\u76ee\u6807\u7aef\u53e3\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"SRC-PORT"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6e90\u7aef\u53e3\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PROCESS-NAME"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6e90\u8fdb\u7a0b\u540d\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"RULE-SET"),(0,l.kt)("td",{parentName:"tr",align:null},"Rule Provider \u89c4\u5219\u5339\u914d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"MATCH"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5168\u5339\u914d")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"RULE-SET",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/Loyalsoldier/clash-rules"},"https://github.com/Loyalsoldier/clash-rules")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/DivineEngine/Profiles/tree/master"},"https://github.com/DivineEngine/Profiles/tree/master"))),(0,l.kt)("h2",{id:"tproxy"},"TProxy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'sysctl -w net.ipv4.ip_forward=1\n\n# \u65b0\u7684\u8def\u7531\u8868\nip rule add fwmark 666 lookup 666\nip route add local 0.0.0.0/0 dev lo table 666\n\n# clash\n# ==================\n# clash \u94fe\u8d1f\u8d23\u5904\u7406\u8f6c\u53d1\u6d41\u91cf\niptables -t mangle -N clash\n\n# DIRECT Private\niptables -t mangle -A clash -d 0.0.0.0/8 -j RETURN\niptables -t mangle -A clash -d 127.0.0.0/8 -j RETURN\niptables -t mangle -A clash -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A clash -d 172.16.0.0/12 -j RETURN\niptables -t mangle -A clash -d 192.168.0.0/16 -j RETURN\niptables -t mangle -A clash -d 169.254.0.0/16 -j RETURN\niptables -t mangle -A clash -d 224.0.0.0/4 -j RETURN\niptables -t mangle -A clash -d 240.0.0.0/4 -j RETURN\n\n# Proxy\niptables -t mangle -A clash -p tcp -j TPROXY --on-port 7893 --tproxy-mark 666\niptables -t mangle -A clash -p udp -j TPROXY --on-port 7893 --tproxy-mark 666\n\n# \u8f6c\u53d1\u6240\u6709 DNS \u67e5\u8be2\u5230 1053 \u7aef\u53e3\n# \u6b64\u64cd\u4f5c\u4f1a\u5bfc\u81f4\u6240\u6709 DNS \u8bf7\u6c42\u5168\u90e8\u8fd4\u56de\u865a\u5047 IP(fake ip 198.18.0.1/16)\niptables -t nat -I PREROUTING -p udp --dport 53 -j REDIRECT --to 1053\n\n# \u5982\u679c\u60f3\u8981 dig \u7b49\u547d\u4ee4\u53ef\u7528, \u53ef\u4ee5\u53ea\u5904\u7406 DNS SERVER \u8bbe\u7f6e\u4e3a\u5f53\u524d\u5185\u7f51\u7684 DNS \u8bf7\u6c42\n#iptables -t nat -I PREROUTING -p udp --dport 53 -d 192.168.0.0/16 -j REDIRECT --to 1053\n\n# \u6700\u540e\u8ba9\u6240\u6709\u6d41\u91cf\u901a\u8fc7 clash \u94fe\u8fdb\u884c\u5904\u7406\niptables -t mangle -A PREROUTING -j clash\n\n# clash_local\n# ==================\n# clash_local \u94fe\u8d1f\u8d23\u5904\u7406\u7f51\u5173\u672c\u8eab\u53d1\u51fa\u7684\u6d41\u91cf\niptables -t mangle -N clash_local\n# nerdctl \u5bb9\u5668\u6d41\u91cf\u91cd\u65b0\u8def\u7531\n#iptables -t mangle -A clash_local -i nerdctl2 -p udp -j MARK --set-mark 666\n#iptables -t mangle -A clash_local -i nerdctl2 -p tcp -j MARK --set-mark 666\n\n# \u8df3\u8fc7\u5185\u7f51\u6d41\u91cf\niptables -t mangle -A clash_local -d 0.0.0.0/8 -j RETURN\niptables -t mangle -A clash_local -d 127.0.0.0/8 -j RETURN\niptables -t mangle -A clash_local -d 10.0.0.0/8 -j RETURN\niptables -t mangle -A clash_local -d 172.16.0.0/12 -j RETURN\niptables -t mangle -A clash_local -d 192.168.0.0/16 -j RETURN\niptables -t mangle -A clash_local -d 169.254.0.0/16 -j RETURN\n\niptables -t mangle -A clash_local -d 224.0.0.0/4 -j RETURN\niptables -t mangle -A clash_local -d 240.0.0.0/4 -j RETURN\n\n# \u4e3a\u672c\u673a\u53d1\u51fa\u7684\u6d41\u91cf\u6253 mark\niptables -t mangle -A clash_local -p tcp -j MARK --set-mark 666\niptables -t mangle -A clash_local -p udp -j MARK --set-mark 666\n\n# \u8df3\u8fc7 clash \u7a0b\u5e8f\u672c\u8eab\u53d1\u51fa\u7684\u6d41\u91cf, \u9632\u6b62\u6b7b\u5faa\u73af(clash \u7a0b\u5e8f\u9700\u8981\u4f7f\u7528 "clash" \u7528\u6237\u542f\u52a8)\niptables -t mangle -A OUTPUT -p tcp -m owner --uid-owner clash -j RETURN\niptables -t mangle -A OUTPUT -p udp -m owner --uid-owner clash -j RETURN\n\n# \u8ba9\u672c\u673a\u53d1\u51fa\u7684\u6d41\u91cf\u8df3\u8f6c\u5230 clash_local\n# clash_local \u94fe\u4f1a\u4e3a\u672c\u673a\u6d41\u91cf\u6253 mark, \u6253\u8fc7 mark \u7684\u6d41\u91cf\u4f1a\u91cd\u65b0\u56de\u5230 PREROUTING \u4e0a\niptables -t mangle -A OUTPUT -j clash_local\n\n# \u4fee\u590d ICMP(ping)\n# \u8fd9\u5e76\u4e0d\u80fd\u4fdd\u8bc1 ping \u7ed3\u679c\u6709\u6548(clash \u7b49\u4e0d\u652f\u6301\u8f6c\u53d1 ICMP), \u53ea\u662f\u8ba9\u5b83\u6709\u8fd4\u56de\u7ed3\u679c\u800c\u5df2\n# --to-destination \u8bbe\u7f6e\u4e3a\u4e00\u4e2a\u53ef\u8fbe\u7684\u5730\u5740\u5373\u53ef\nsysctl -w net.ipv4.conf.all.route_localnet=1\niptables -t nat -A PREROUTING -p icmp -d 198.18.0.0/16 -j DNAT --to-destination 127.0.0.1\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53c2\u8003\u914d\u7f6e",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://gist.github.com/phlinhng/38a141862de775b10c613f7f2c6ade99"},"https://gist.github.com/phlinhng/38a141862de775b10c613f7f2c6ade99")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/springzfx/cgproxy/blob/aaa628a76b2911018fc93b2e3276c177e85e0861/readme.md#known-issues"},"https://github.com/springzfx/cgproxy/blob/aaa628a76b2911018fc93b2e3276c177e85e0861/readme.md#known-issues"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"docker \u4e0d\u53ef\u4ee5 tproxy")))))),(0,l.kt)("h2",{id:"openrc"},"openrc"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'#!/sbin/openrc-run\nsupervisor=supervise-daemon\n\nname="Clash"\ndescription="A rule-based tunnel in Go."\ndescription_reload="Reload configuration without exiting"\n\ncommand=/usr/local/bin/clash\ncommand_args="-d /var/lib/clash/ -f /etc/clash/config.yaml"\n\nCLASH_LOGFILE="${CLASH_LOGFILE:-/var/log/${RC_SVCNAME}.log}"\noutput_log=${CLASH_LOGFILE}\nerror_log=${CLASH_LOGFILE}\n\ndepend() {\n  use logger dns\n  need net\n}\n\ncheckconfig() {\n  if [ ! -f "/etc/clash/config.yaml" ] ; then\n    eerror "No clash config.yaml"\n    return 1\n  fi\n  return 0\n}\n\nreload() {\n  ebegin "Reloading configuration"\n  curl -X PUT -H "Authorization: Bearer $AUTH_TOKEN" -sf 127.0.0.1:9090/configs --json "{}"\n  eend $?\n}\n')),(0,l.kt)("h1",{id:"faq"},"FAQ"),(0,l.kt)("h2",{id:"start-tproxy-server-error-operation-not-permitted"},"Start TProxy server error: operation not permitted"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"sudo setcap cap_net_bind_service,cap_net_admin+ep $(which clash)\n")))}h.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{kt:function(){return u}});var a=n(59496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,d=u["".concat(i,".").concat(h)]||u[h]||c[h]||l;return n?a.createElement(d,s(s({ref:t},m),{},{components:n})):a.createElement(d,s({ref:t},m))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=m;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var p=2;p<l;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);