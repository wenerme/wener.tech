/*! For license information please see e6ddec83.da06be09.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[57860],{14748:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var c=s(2488),i=s(62780);const t={title:"Consule Connect Mesh"},r="Consule Connect Mesh",a={id:"devops/service/consul-connect",title:"Consule Connect Mesh",description:"- \u4f18\u52bf",source:"@site/../notes/devops/service/consul-connect.md",sourceDirName:"devops/service",slug:"/devops/service/consul-connect",permalink:"/notes/devops/service/consul-connect",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/service/consul-connect.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1655970411,formattedLastUpdatedAt:"Jun 23, 2022",frontMatter:{title:"Consule Connect Mesh"},sidebar:"docs",previous:{title:"Consul \u914d\u7f6e",permalink:"/notes/devops/service/consul-conf"},next:{title:"Consul FAQ",permalink:"/notes/devops/service/consul-faq"}},o={},l=[{value:"annotations",id:"annotations",level:2},{value:"k8s",id:"k8s",level:2},{value:"whomai",id:"whomai",level:2}];function h(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.M)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.h1,{id:"consule-connect-mesh",children:"Consule Connect Mesh"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\u4f18\u52bf\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"mesh gateway \u6253\u901a\u96c6\u7fa4"}),"\n",(0,c.jsx)(e.li,{children:"ingress gateway \u5141\u8bb8\u5916\u90e8\u8bbf\u95ee\u5185\u90e8\u670d\u52a1"}),"\n",(0,c.jsx)(e.li,{children:"terminating gateway \u5141\u8bb8\u5185\u90e8 mtls \u8bbf\u95ee\u5916\u90e8\u670d\u52a1"}),"\n",(0,c.jsx)(e.li,{children:"\u652f\u6301\u4ee3\u7801\u5c42\u96c6\u6210 - \u63d0\u4f9b Go SDK"}),"\n",(0,c.jsx)(e.li,{children:"\u8fde\u901a\u6027\u597d"}),"\n",(0,c.jsx)(e.li,{children:"\u652f\u6301 7 \u5c42\u8def\u7531"}),"\n",(0,c.jsx)(e.li,{children:"\u6ca1\u6709\u96c6\u6210 prometheus \u548c grafana - \u66f4\u9002\u5408\u5229\u7528\u73b0\u6709\u5b9e\u4f8b"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\u52a3\u52bf\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\u9700\u8981\u4e24\u4e2a sidecard\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"consul-connect-inject-init"}),"\n",(0,c.jsx)(e.li,{children:"consul-connect-envoy-sidecar"}),"\n",(0,c.jsx)(e.li,{children:"consul-connect-lifecycle-sidecar"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.li,{children:"connect \u4e3b\u8981 \u652f\u6301\u8fde\u901a\u6027\uff0c\u8ddf\u8e2a\u548c\u6307\u6807\u90fd\u6ca1\u6709\u652f\u6301"}),"\n",(0,c.jsx)(e.li,{children:"\u754c\u9762\u529f\u80fd\u8f83\u5f31"}),"\n",(0,c.jsx)(e.li,{children:"\u6d41\u91cf\u5207\u5206\u5b9e\u4f8b\u5206\u7ec4\u9700\u8981\u914d\u7f6e\uff0c\u6ca1\u6709\u754c\u9762"}),"\n",(0,c.jsx)(e.li,{children:"observability \u548c \u6307\u6807\u90fd\u4f9d\u8d56 envoy - \u6ca1\u6709\u9ed8\u8ba4\u914d\u7f6e"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\u7279\u6027\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"mtls"}),"\n",(0,c.jsxs)(e.li,{children:["intention - Service-to-Service \u6743\u9650\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"consul intention create -deny web '*'"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\u81ea\u52a8\u6ce8\u5165\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"consul.hashicorp.com/connect-inject: 'true'"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["Control Plane\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"Consul UI"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["Data Plane\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5185\u5efa - \u4e3b\u8981\u7528\u4e8e\u5f00\u53d1"}),"\n",(0,c.jsx)(e.li,{children:"envoy"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\u6ce8\u610f\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5fc5\u987b\u914d\u5408 consule \u4f7f\u7528"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["Mesh Gateway\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u7f51\u5173\u4e92\u901a - \u8de8\u96c6\u7fa4/\u533a\u57df"}),"\n",(0,c.jsx)(e.li,{children:"\u670d\u52a1\u5230\u670d\u52a1"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["Ingress Gateway\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u63a5\u53d7\u5916\u90e8\u6d41\u91cf"}),"\n",(0,c.jsx)(e.li,{children:"\u5916\u90e8\u8bbf\u95ee\u5185\u90e8\u670d\u52a1"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["Terminating Gateway\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5185\u90e8\u8bbf\u95ee\u5916\u90e8"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.li,{children:"Intention - ACL \u63a7\u5236"}),"\n",(0,c.jsxs)(e.li,{children:["\u4ee3\u7406\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5185\u5efa - \u4e0d\u9002\u7528\u4e8e\u751f\u4ea7"}),"\n",(0,c.jsx)(e.li,{children:"Envoy"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\u8bc1\u4e66\u7ba1\u7406\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5185\u5efa CA"}),"\n",(0,c.jsx)(e.li,{children:"Vault"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["\u53c2\u8003\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.a,{href:"https://github.com/hashicorp/consul-k8s-prometheus-grafana-hashicups-demoapp",children:"hashicorp/consul-k8s-prometheus-grafana-hashicups-demoapp"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:'kubectl port-forward service/consul-server 8500:8500\n# tls\n# kubectl port-forward service/consul-server 8501:8501\n\n# token\nexport CONSUL_HTTP_TOKEN=$(kubectl get secrets/consul-bootstrap-acl-token --template={{.data.token}} | base64 -d)\nconsul info\n\n# in pod\nexport CONSUL_HTTP_ADDR="${HOST_IP}:8500"\n\n# \u547d\u4ee4\u884c\u542f\u52a8\n# -- -l trace - envoy \u7684 trace \u65e5\u5fd7\nconsul connect envoy \\\n  -sidecar-for echo -http-addr http://127.0.0.1:8500 \\\n  -grpc-addr http://127.0.0.1:8502 \\\n  -admin-bind 127.0.0.1:0\n'})}),"\n",(0,c.jsx)(e.h2,{id:"annotations",children:"annotations"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["consul.hashicorp.com/connect-inject\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"bool"}),"\n",(0,c.jsx)(e.li,{children:"\u662f\u5426\u6ce8\u5165 sidecard"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["consul.hashicorp.com/connect-service\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u670d\u52a1\u7684\u540d\u5b57"}),"\n",(0,c.jsx)(e.li,{children:"\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a container \u7684\u540d\u5b57"}),"\n",(0,c.jsx)(e.li,{children:"\u5982\u679c\u542f\u7528\u4e86 acl\uff0c\u540d\u5b57\u5fc5\u987b\u4e0e ServiceAccount \u76f8\u540c"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["consul.hashicorp.com/connect-service-port\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u63a5\u53d7\u8bf7\u6c42\u7684\u7aef\u53e3"}),"\n",(0,c.jsx)(e.li,{children:"\u9ed8\u8ba4\u4e3a\u7b2c\u4e00\u4e2a\u66b4\u9732\u7aef\u53e3"}),"\n",(0,c.jsx)(e.li,{children:"\u53ef\u4ee5\u662f\u540d\u5b57\u4e5f\u53ef\u4ee5\u662f\u7aef\u53e3\u53f7"}),"\n",(0,c.jsx)(e.li,{children:"proxy \u76d1\u542c\u52a8\u6001\u7aef\u53e3"}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["consul.hashicorp.com/connect-service-upstreams\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u8fde\u63a5\u5230\u7684\u4e0a\u6e38\u670d\u52a1"}),"\n",(0,c.jsx)(e.li,{children:"\u9017\u53f7\u5206\u5272\u6307\u5b9a\u591a\u4e2a"}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"[service-name]:[port]:[optional datacenter]"})}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"prepared_query:[query name]:[port]"})}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["consul.hashicorp.com/connect-service-protocol\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u6ce8\u518c\u534f\u8bae"}),"\n",(0,c.jsxs)(e.li,{children:["helm \u5b89\u88c5\u65f6\u4f7f\u7528 ",(0,c.jsx)(e.code,{children:"defaultProtocol"})," \u6307\u5b9a\u9ed8\u8ba4\u534f\u8bae\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5efa\u8bae\u6307\u5b9a\u4e3a http"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsxs)(e.li,{children:["consul.hashicorp.com/service-tags\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u9017\u53f7\u5206\u5272\u6307\u5b9a\u591a\u4e2a"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.li,{children:(0,c.jsx)(e.code,{children:"consul.hashicorp.com/service-meta-<KEY>"})}),"\n",(0,c.jsxs)(e.li,{children:[(0,c.jsx)(e.code,{children:"consul.hashicorp.com/sidecar-proxy-"})," - proxy \u914d\u7f6e\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"cpu/memory-limit/request"}),"\n",(0,c.jsxs)(e.li,{children:["helm \u9ed8\u8ba4\u914d\u7f6e ",(0,c.jsx)(e.code,{children:"connectInject.sidecarProxy.resources"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"k8s",children:"k8s"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: alpine-connect\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: alpine-connect\n  annotations:\n    consul.hashicorp.com/connect-inject: 'true'\n    consul.hashicorp.com/connect-service-upstreams: consul:8500,static-server:1234,web-test:2019,whoami-v1:1992\nspec:\n  serviceAccountName: alpine-connect\n  containers:\n    - name: alpine-connect\n      image: wener/base\n      command:\n        - tail\n      args:\n        - -f\n        - /dev/null\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:"kubectl exec alpine-connect -it -c alpine-connect -- sh\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: static-server\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-server\n  annotations:\n    consul.hashicorp.com/connect-inject: 'true'\nspec:\n  containers:\n    # consule \u4e2d\u7684\u670d\u52a1\u540d\n    - name: static-server\n      image: hashicorp/http-echo:latest\n      args:\n        - -text=\"hello world\"\n        - -listen=:8080\n      ports:\n        - containerPort: 8080\n          name: http\n  # \u5982\u679c\u542f\u7528\u4e86 ACL\uff0c serviceAccountName \u5fc5\u987b\u8981\u5339\u914d Consil \u4e2d\u7684\u670d\u52a1\u540d\n  serviceAccountName: static-server\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: static-client\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-client\n  annotations:\n    'consul.hashicorp.com/connect-inject': 'true'\n    'consul.hashicorp.com/connect-service-upstreams': 'static-server:1234'\nspec:\n  containers:\n    # \u670d\u52a1\u540d\n    - name: static-client\n      image: tutum/curl:latest\n      # \u4fdd\u6301\u8fd0\u884c\n      command: ['/bin/sh', '-c', '--']\n      args: ['while true; do sleep 30; done;']\n  # ACL \u8981\u6c42\n  serviceAccountName: static-client\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: web-test\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-test\n  labels:\n    app: web-test\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web-test\n  template:\n    metadata:\n      name: web-test\n      labels:\n        app: web-test\n      annotations:\n        consul.hashicorp.com/connect-service-upstreams: 'static-server:1234'\n        consul.hashicorp.com/connect-inject: 'true'\n    spec:\n      containers:\n        - name: web-test\n          image: nginx:alpine\n          ports:\n            - containerPort: 80\n      serviceAccountName: web-test\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: static-server-next\n---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: static-server-next\n  annotations:\n    consul.hashicorp.com/connect-inject: 'true'\nspec:\n  containers:\n    - name: static-server-next\n      image: hashicorp/http-echo:latest\n      args:\n        - -text=\"hello world\"\n        - -listen=:8080\n      ports:\n        - containerPort: 8080\n          name: http\n  serviceAccountName: static-server-next\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:'cat << HCL | consul config write -\nKind      = "service-defaults"\nName      = "static-server"\nProtocol  = "http"\nHCL\ncat << HCL | consul config write -\nKind      = "service-defaults"\nName      = "static-server-next"\nProtocol  = "http"\nHCL\ncat << HCL | consul config write -\nKind = "service-router"\nName = "static-server"\nRoutes = [\n  {\n    Match {\n      HTTP {\n        PathPrefix = "/next"\n      }\n    }\n\n    Destination {\n      Service = "static-server-next"\n    }\n  },\n]\nHCL\n'})}),"\n",(0,c.jsx)(e.h2,{id:"whomai",children:"whomai"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: whoami\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: whoami-v1\n  labels:\n    app: whoami-v1\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: whoami-v1\n  template:\n    metadata:\n      labels:\n        app: whoami-v1\n      annotations:\n        consul.hashicorp.com/connect-inject: 'true'\n        consul.hashicorp.com/connect-service-protocol: http\n        consul.hashicorp.com/service-tags: app=whoami\n        consul.hashicorp.com/service-meta-version: v1\n    spec:\n      serviceAccountName: whoami\n      containers:\n        - name: whoami\n          image: containous/whoami\n          # diff\n          env:\n            - name: WHOAMI_NAME\n              value: V1\n          ports:\n            - containerPort: 80\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 80\n            initialDelaySeconds: 3\n            periodSeconds: 3\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: whoami-v2\n  labels:\n    app: whoami-v2\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: whoami-v2\n  template:\n    metadata:\n      labels:\n        app: whoami-v2\n      annotations:\n        consul.hashicorp.com/connect-inject: 'true'\n        consul.hashicorp.com/connect-service-protocol: http\n        consul.hashicorp.com/service-tags: app=whoami\n        consul.hashicorp.com/service-meta-version: v2\n    spec:\n      # same service\n      serviceAccountName: whoami\n      containers:\n        - name: whoami\n          image: containous/whoami\n          # diff\n          env:\n            - name: WHOAMI_NAME\n              value: V2\n          ports:\n            - containerPort: 80\n          livenessProbe:\n            httpGet:\n              path: /health\n              port: 80\n            initialDelaySeconds: 3\n            periodSeconds: 3\n"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-bash",children:'cat << HCL | consul config write -\nKind      = "service-defaults"\nName      = "whoami"\nProtocol  = "http"\nExpose    = {\n  Checks = true\n  Paths = [{\n    Path = "/health"\n  }]\n}\nHCL\ncat << HCL | consul config write -\nKind          = "service-resolver"\nName          = "whoami"\nDefaultSubset = "v2"\nSubsets = {\n  "v1" = {\n    Filter = "Service.Meta.version == v1"\n  }\n  "v2" = {\n    Filter = "Service.Meta.version == v2"\n  }\n}\nHCL\n\ncat << HCL | consul config write -\nKind = "service-router"\nName = "whoami"\nRoutes = [\n  {\n    Match {\n      HTTP {\n        Header = [\n          {\n            Name  = "x-version"\n            Exact = "2"\n          },\n        ]\n      }\n    }\n    Destination {\n      Service       = "whoami"\n      ServiceSubset = "v2"\n    }\n  },\n  {\n    Match {\n      HTTP {\n        PathPrefix = "/v2"\n      }\n    }\n    Destination {\n      Service       = "whoami"\n      ServiceSubset = "v2"\n    }\n  },\n\n    {\n    Match {\n      HTTP {\n        Header = [\n          {\n            Name  = "x-version"\n            Exact = "1"\n          },\n        ]\n      }\n    }\n    Destination {\n      Service       = "whoami"\n      ServiceSubset = "v1"\n    }\n  },\n    {\n    Match {\n      HTTP {\n        PathPrefix = "/v1"\n      }\n    }\n    Destination {\n      Service       = "whoami"\n      ServiceSubset = "v1"\n    }\n  },\n]\nHCL\n'})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"\u5206\u7ec4"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-hcl",children:'Kind          = "service-resolver"\nName          = "whoami"\nDefaultSubset = "v1"\nSubsets = {\n  "v1" = {\n    Filter = "Service.Meta.version == v1"\n  }\n  "v2" = {\n    Filter = "Service.Meta.version == v2"\n  }\n}\n'})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"\u6d41\u91cf\u5207\u5206"})}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-hcl",children:'Kind = "service-splitter"\nName = "web"\nSplits = [\n  {\n    Weight        = 90\n    ServiceSubset = "v1"\n  },\n  {\n    Weight        = 10\n    ServiceSubset = "v2"\n  },\n]\n'})})]})}function d(n={}){const{wrapper:e}={...(0,i.M)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(h,{...n})}):h(n)}},38088:(n,e,s)=>{var c=s(96651),i=Symbol.for("react.element"),t=Symbol.for("react.fragment"),r=Object.prototype.hasOwnProperty,a=c.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function l(n,e,s){var c,t={},l=null,h=null;for(c in void 0!==s&&(l=""+s),void 0!==e.key&&(l=""+e.key),void 0!==e.ref&&(h=e.ref),e)r.call(e,c)&&!o.hasOwnProperty(c)&&(t[c]=e[c]);if(n&&n.defaultProps)for(c in e=n.defaultProps)void 0===t[c]&&(t[c]=e[c]);return{$$typeof:i,type:n,key:l,ref:h,props:t,_owner:a.current}}e.Fragment=t,e.jsx=l,e.jsxs=l},2488:(n,e,s)=>{n.exports=s(38088)},62780:(n,e,s)=>{s.d(e,{I:()=>a,M:()=>r});var c=s(96651);const i={},t=c.createContext(i);function r(n){const e=c.useContext(t);return c.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),c.createElement(t.Provider,{value:e},n.children)}}}]);