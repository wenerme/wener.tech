/*! For license information please see 91c65d3a.29200592.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[84177],{28256:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var s=i(11527),t=i(47214);const o={title:"uxplay"},a="uxplay",r={id:"os/linux/desktop/uxplay",title:"uxplay",description:"- FDH2/UxPlay",source:"@site/../notes/os/linux/desktop/uxplay.md",sourceDirName:"os/linux/desktop",slug:"/os/linux/desktop/uxplay",permalink:"/notes/os/linux/desktop/uxplay",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/desktop/uxplay.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1705291463,formattedLastUpdatedAt:"Jan 15, 2024",frontMatter:{title:"uxplay"},sidebar:"docs",previous:{title:"rustdesk",permalink:"/notes/os/linux/desktop/rustdesk"},next:{title:"VA-API",permalink:"/notes/os/linux/desktop/vaapi"}},l={},d=[{value:"misc",id:"misc",level:2},{value:"help",id:"help",level:2},{value:"vaapi",id:"vaapi",level:2},{value:"error: XDG_RUNTIME_DIR is invalid or not set in the environment",id:"error-xdg_runtime_dir-is-invalid-or-not-set-in-the-environment",level:2},{value:"libfusion segfault",id:"libfusion-segfault",level:2},{value:"gstreamer dropping frame due to qos",id:"gstreamer-dropping-frame-due-to-qos",level:2},{value:"iPhone \u53ef\u4ee5\uff0cmacOS \u4e0d\u53ef\u4ee5",id:"iphone-\u53ef\u4ee5macos-\u4e0d\u53ef\u4ee5",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"uxplay",children:"uxplay"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/FDH2/UxPlay",children:"FDH2/UxPlay"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"GPLv3, C"}),"\n",(0,s.jsx)(n.li,{children:"AirPlay Unix mirroring server"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u53c2\u8003\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/postlund/pyatv",children:"postlund/pyatv"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"client library for Apple TV and AirPla"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://nto.github.io/AirPlay.html",children:"https://nto.github.io/AirPlay.html"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unofficial AirPlay Protocol Specification"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.apple.com/streaming/fps/",children:"https://developer.apple.com/streaming/fps/"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"FairPlay DRM"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u4e0d\u652f\u6301 DRM\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Netflix, AppleTV+ \u4e0d\u53ef\u7528"}),"\n"]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'apk add git gcc g++ make cmake openssl-dev avahi-daemon avahi-dev gstreamer-dev gst-plugins-base-dev gst-libav gst-plugins-good libplist-dev\n\nservice avahi-daemon start\n\ngit clone https://github.com/FDH2/UxPlay\ncd UxPlay\nmkdir build\ncd build\ncmake ..\nmake\n./uxplay --help\n\n# \u6ce8\u610f \u9700\u8981\u5728 X Session \u7684 terminal/\u73af\u5883 \u91cc\u542f\u52a8 - \u6216\u8005\u901a\u8fc7\u8bbe\u7f6e env \u5e94\u8be5\u4e5f\u53ef\u4ee5\n# -vs \u6d4b\u8bd5\u53ef\u7528 glimagesink, ximagesink\n#   xvimagesink \u6ca1\u6709\u5185\u5bb9\u8f93\u51fa\uff0c\u4f46\u4f3c\u4e4e\u88ab\u9ed8\u8ba4\u9009\u62e9\n#   ximagesink CPU \u5360\u7528\u6bd4 glimagesink \u4f4e\u5f97\u591a, \u652f\u6301 -fs\n./uxplay -n "tv@living-room" -nh -fps 18 -fs -vs ximagesink\n'})}),"\n",(0,s.jsx)(n.h2,{id:"misc",children:"misc"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"#\naddgroup $USER audio\naddgroup $USER video\n\napk add inxi\ninxi -A # audio\n\napk add pavucontrol\n# \u6ce8\u610f\u9009\u62e9\u8f93\u51fa\u8bbe\u5907\npavucontrol\n\n# pa\napk add pulseaudio pulseaudio-alsa alsa-plugins-pulse\n# apk add pulseaudio-utils pipewire wireplumber pipewire-pulse\n"})}),"\n",(0,s.jsx)(n.h2,{id:"help",children:"help"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'UxPlay 1.68: An open-source AirPlay mirroring server.\n=========== Website: https://github.com/FDH2/UxPlay ==========\nUsage: ./uxplay [-n name] [-s wxh] [-p [n]] [(other options)]\nOptions:\n-n name   Specify the network name of the AirPlay server\n-nh       Do not add "@hostname" at the end of AirPlay server name\n-pin[xxxx]Use a 4-digit pin code to control client access (default: no)\n          default pin is random: optionally use fixed pin xxxx\n-reg [fn] Keep a register in $HOME/.uxplay.register to verify returning\n          client pin-registration; (option: use file "fn" for this)\n-vsync [x]Mirror mode: sync audio to video using timestamps (default)\n          x is optional audio delay: millisecs, decimal, can be neg.\n-vsync no Switch off audio/(server)video timestamp synchronization\n-async [x]Audio-Only mode: sync audio to client video (default: no)\n-async no Switch off audio/(client)video timestamp synchronization\n-db l[:h] Set minimum volume attenuation to l dB (decibels, negative);\n          optional: set maximum to h dB (+ or -) default: -30.0:0.0 dB\n-taper    Use a "tapered" AirPlay volume-control profile\n-s wxh[@r]Set display resolution [refresh_rate] default 1920x1080[@60]\n-o        Set display "overscanned" mode on (not usually needed)\n-fs       Full-screen (only works with X11, Wayland and VAAPI)\n-p        Use legacy ports UDP 6000:6001:7011 TCP 7000:7001:7100\n-p n      Use TCP and UDP ports n,n+1,n+2. range 1024-65535\n          use "-p n1,n2,n3" to set each port, "n1,n2" for n3 = n2+1\n          "-p tcp n" or "-p udp n" sets TCP or UDP ports separately\n-avdec    Force software h264 video decoding with libav decoder\n-vp ...   Choose the GSteamer h264 parser: default "h264parse"\n-vd ...   Choose the GStreamer h264 decoder; default "decodebin"\n          choices: (software) avdec_h264; (hardware) v4l2h264dec,\n          nvdec, nvh264dec, vaapih64dec, vtdec,etc.\n          choices: avdec_h264,vaapih264dec,nvdec,nvh264dec,v4l2h264dec\n-vc ...   Choose the GStreamer videoconverter; default "videoconvert"\n          another choice when using v4l2h264dec: v4l2convert\n-vs ...   Choose the GStreamer videosink; default "autovideosink"\n          some choices: ximagesink,xvimagesink,vaapisink,glimagesink,\n          gtksink,waylandsink,osxvideosink,kmssink,d3d11videosink etc.\n-vs 0     Streamed audio only, with no video display window\n-v4l2     Use Video4Linux2 for GPU hardware h264 decoding\n-bt709    Sometimes needed for Raspberry Pi with GStreamer < 1.22\n-as ...   Choose the GStreamer audiosink; default "autoaudiosink"\n          some choices:pulsesink,alsasink,pipewiresink,jackaudiosink,\n          osssink,oss4sink,osxaudiosink,wasapisink,directsoundsink.\n-as 0     (or -a)  Turn audio off, streamed video only\n-al x     Audio latency in seconds (default 0.25) reported to client.\n-ca <fn>  In Airplay Audio (ALAC) mode, write cover-art to file <fn>\n-reset n  Reset after 3n seconds client silence (default 5, 0=never)\n-nc       do Not Close video window when client stops mirroring\n-nohold   Drop current connection when new client connects.\n-restrict Restrict clients to those specified by "-allow <deviceID>"\n          UxPlay displays deviceID when a client attempts to connect\n          Use "-restrict no" for no client restrictions (default)\n-allow <i>Permit deviceID = <i> to connect if restrictions are imposed\n-block <i>Always block connections from deviceID = <i>\n-FPSdata  Show video-streaming performance reports sent by client.\n-fps n    Set maximum allowed streaming framerate, default 30\n-f {H|V|I}Horizontal|Vertical flip, or both=Inversion=rotate 180 deg\n-r {R|L}  Rotate 90 degrees Right (cw) or Left (ccw)\n-m [mac]  Set MAC address (also Device ID);use for concurrent UxPlays\n          if mac xx:xx:xx:xx:xx:xx is not given, a random MAC is used\n-key [fn] Store private key in $HOME/.uxplay.pem (or in file "fn")\n-dacp [fn]Export client DACP information to file $HOME/.uxplay.dacp\n          (option to use file "fn" instead); used for client remote\n-vdmp [n] Dump h264 video output to "fn.h264"; fn="videodump",change\n          with "-vdmp [n] filename". If [n] is given, file fn.x.h264\n          x=1,2,.. opens whenever a new SPS/PPS NAL arrives, and <=n\n          NAL units are dumped.\n-admp [n] Dump audio output to "fn.x.fmt", fmt ={aac, alac, aud}, x\n          =1,2,..; fn="audiodump"; change with "-admp [n] filename".\n          x increases when audio format changes. If n is given, <= n\n          audio packets are dumped. "aud"= unknown format.\n-d        Enable debug logging\n-v        Displays version information\n-h        Displays this help\nStartup options in $UXPLAYRC, ~/.uxplayrc, or ~/.config/uxplayrc are\napplied first (command-line options may modify them): format is one\noption per line, no initial "-"; lines starting with "#" are ignored.\n'})}),"\n",(0,s.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"apk add gstreamer-tools\ngst-inspect-1.0 | tee\n\napk add gst-libav\n"})}),"\n",(0,s.jsx)(n.h2,{id:"vaapi",children:"vaapi"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"apk add intel-media-driver gst-vaapi\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"GStreammer error: Internal error: could not render surface\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/intel/libva/issues/745",children:"https://github.com/intel/libva/issues/745"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"error-xdg_runtime_dir-is-invalid-or-not-set-in-the-environment",children:"error: XDG_RUNTIME_DIR is invalid or not set in the environment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'cat << \'EOF\' >> ~/.profile\nif [ -z "$XDG_RUNTIME_DIR" ]; then\n\tXDG_RUNTIME_DIR="/tmp/$(id -u)-runtime-dir"\n\n\tmkdir -pm 0700 "$XDG_RUNTIME_DIR"\n\texport XDG_RUNTIME_DIR\nfi\nEOF\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://wiki.alpinelinux.org/wiki/Wayland",children:"https://wiki.alpinelinux.org/wiki/Wayland"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"libfusion-segfault",children:"libfusion segfault"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u542f\u52a8\u73af\u5883\u4e0d\u5bf9\uff0c\u5728 x \u73af\u5883\u91cc\u542f\u52a8"}),"\n",(0,s.jsx)(n.li,{children:"directfb"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/deniskropp/DirectFB",children:"https://github.com/deniskropp/DirectFB"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"gstreamer-dropping-frame-due-to-qos",children:"gstreamer dropping frame due to qos"}),"\n",(0,s.jsx)(n.p,{children:"OK"}),"\n",(0,s.jsx)(n.h2,{id:"iphone-\u53ef\u4ee5macos-\u4e0d\u53ef\u4ee5",children:"iPhone \u53ef\u4ee5\uff0cmacOS \u4e0d\u53ef\u4ee5"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"macOS \u6295\u5c4f\u6ca1\u6709\u7a97\u53e3"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/FDH2/UxPlay/issues/73#issuecomment-1086178735",children:"https://github.com/FDH2/UxPlay/issues/73#issuecomment-1086178735"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/FDH2/UxPlay/issues/264",children:"https://github.com/FDH2/UxPlay/issues/264"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},3354:(e,n,i)=>{var s=i(50959),t=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,r=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,i){var s,o={},d=null,c=null;for(s in void 0!==i&&(d=""+i),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(c=n.ref),n)a.call(n,s)&&!l.hasOwnProperty(s)&&(o[s]=n[s]);if(e&&e.defaultProps)for(s in n=e.defaultProps)void 0===o[s]&&(o[s]=n[s]);return{$$typeof:t,type:e,key:d,ref:c,props:o,_owner:r.current}}n.Fragment=o,n.jsx=d,n.jsxs=d},11527:(e,n,i)=>{e.exports=i(3354)},47214:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>a});var s=i(50959);const t={},o=s.createContext(t);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);