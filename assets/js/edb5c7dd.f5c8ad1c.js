"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[42539],{49613:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(59496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||a;return t?r.createElement(d,i(i({ref:n},p),{},{components:t})):r.createElement(d,i({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},88479:function(e,n,t){t.r(n),t.d(n,{assets:function(){return b},contentTitle:function(){return y},default:function(){return O},frontMatter:function(){return d},metadata:function(){return k},toc:function(){return g}});var r=t(49613),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,n,t)=>n in e?o(e,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[n]=t,u=(e,n)=>{for(var t in n||(n={}))s.call(n,t)&&p(e,t,n[t]);if(l)for(var t of l(n))c.call(n,t)&&p(e,t,n[t]);return e},f=(e,n)=>a(e,i(n)),m=(e,n)=>{var t={};for(var r in e)s.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&l)for(var r of l(e))n.indexOf(r)<0&&c.call(e,r)&&(t[r]=e[r]);return t};const d={title:"Token List"},y="Token List",k={unversionedId:"blockchain/eth/tokenlist",id:"blockchain/eth/tokenlist",title:"Token List",description:"- Uniswap/token-lists",source:"@site/../notes/blockchain/eth/tokenlist.md",sourceDirName:"blockchain/eth",slug:"/blockchain/eth/tokenlist",permalink:"/notes/blockchain/eth/tokenlist",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/blockchain/eth/tokenlist.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1659031280,formattedLastUpdatedAt:"Jul 28, 2022",frontMatter:{title:"Token List"},sidebar:"docs",previous:{title:"uniswap",permalink:"/notes/blockchain/eth/swap/uniswap"},next:{title:"Metamask",permalink:"/notes/blockchain/metamask"}},b={},g=[],h={toc:g},w="wrapper";function O(e){var n=e,{components:t}=n,o=m(n,["components"]);return(0,r.kt)(w,f(u(u({},h),o),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",u({},{id:"token-list"}),"Token List"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://github.com/Uniswap/token-lists"}),"Uniswap/token-lists"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://tokenlists.org/"}),"https://tokenlists.org/")," - Ethereum token list"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"https://uniswap.org/tokenlist.schema.json"}),"https://uniswap.org/tokenlist.schema.json")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",u({parentName:"li"},{href:"/notes/blockchain/eth/awesome#swap"}),"Swap Token"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u6d41\u52a8\u6c60\u4e5f\u53ef\u80fd\u4f1a\u53d1\u884c\u81ea\u5df1\u7684 Token \u7528\u6765\u6fc0\u52b1")))),(0,r.kt)("pre",null,(0,r.kt)("code",u({parentName:"pre"},{className:"language-ts"}),"type ExtensionValue = string | number | boolean | null;\n\nexport interface TokenInfo {\n  readonly chainId: number;\n  readonly address: string;\n  readonly name: string;\n  readonly decimals: number;\n  readonly symbol: string;\n  readonly logoURI?: string;\n  readonly tags?: string[];\n  readonly extensions?: {\n    readonly [key: string]: { [key: string]: ExtensionValue } | ExtensionValue;\n  };\n}\n\nexport interface Version {\n  readonly major: number;\n  readonly minor: number;\n  readonly patch: number;\n}\n\nexport interface Tags {\n  readonly [tagId: string]: {\n    readonly name: string;\n    readonly description: string;\n  };\n}\n\nexport interface TokenList {\n  readonly name: string;\n  readonly timestamp: string;\n  readonly version: Version;\n  readonly tokens: TokenInfo[];\n  readonly keywords?: string[];\n  readonly tags?: Tags;\n  readonly logoURI?: string;\n}\n")))}O.isMDXComponent=!0}}]);