"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[65977],{49613:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return k}});var n=r(59496);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(r),k=o,f=p["".concat(s,".").concat(k)]||p[k]||u[k]||a;return r?n.createElement(f,l(l({ref:t},d),{},{components:r})):n.createElement(f,l({ref:t},d))}));function k(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},39490:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return k},default:function(){return g},frontMatter:function(){return p},metadata:function(){return f},toc:function(){return v}});var n=r(49613),o=Object.defineProperty,a=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,d=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&d(e,r,t[r]);if(i)for(var r of i(t))c.call(t,r)&&d(e,r,t[r]);return e};const p={title:"Docker FAQ",tags:["FAQ"]},k="Docker FAQ",f={unversionedId:"devops/docker/docker-faq",id:"devops/docker/docker-faq",title:"Docker FAQ",description:"- Docker Best Practices",source:"@site/../notes/devops/docker/docker-faq.md",sourceDirName:"devops/docker",slug:"/devops/docker/faq",permalink:"/notes/devops/docker/faq",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/devops/docker/docker-faq.md",tags:[{label:"FAQ",permalink:"/notes/tags/faq"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1694402622,formattedLastUpdatedAt:"Sep 11, 2023",frontMatter:{title:"Docker FAQ",tags:["FAQ"]},sidebar:"docs",previous:{title:"Dockerfile",permalink:"/notes/devops/docker/dockerfile"},next:{title:"DockerHub",permalink:"/notes/devops/docker/hub"}},m={},v=[{value:"env",id:"env",level:2},{value:"\u5728 docker \u4e2d\u4f7f\u7528 docker",id:"\u5728-docker-\u4e2d\u4f7f\u7528-docker",level:2},{value:"\u975e root \u7ed1\u5b9a\u79c1\u6709\u7aef\u53e3",id:"\u975e-root-\u7ed1\u5b9a\u79c1\u6709\u7aef\u53e3",level:2},{value:"\u505c\u6b62\u6240\u6709\u5bb9\u5668",id:"\u505c\u6b62\u6240\u6709\u5bb9\u5668",level:2},{value:"\u8fc1\u79fb\u6570\u636e\u76ee\u5f55",id:"\u8fc1\u79fb\u6570\u636e\u76ee\u5f55",level:2},{value:"No swap limit support",id:"no-swap-limit-support",level:2},{value:"\u4e3a\u5df2\u7ecf\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u6dfb\u52a0\u7aef\u53e3\u6620\u5c04",id:"\u4e3a\u5df2\u7ecf\u8fd0\u884c\u7684-docker-\u5bb9\u5668\u6dfb\u52a0\u7aef\u53e3\u6620\u5c04",level:2},{value:"upper fs does not support RENAME_WHITEOUT",id:"upper-fs-does-not-support-rename_whiteout",level:2},{value:"docker zfs vol",id:"docker-zfs-vol",level:2},{value:"driver &quot;zfs&quot; failed to remove root filesystem",id:"driver-zfs-failed-to-remove-root-filesystem",level:2},{value:"\u6ca1\u6743\u9650",id:"\u6ca1\u6743\u9650",level:2},{value:"bridge-nf-call-iptables",id:"bridge-nf-call-iptables",level:2},{value:"Cannot link to a non running container",id:"cannot-link-to-a-non-running-container",level:2},{value:"docker exporter does not currently support exporting manifest lists",id:"docker-exporter-does-not-currently-support-exporting-manifest-lists",level:2},{value:"could not create a builder instance with TLS data loaded from environment",id:"could-not-create-a-builder-instance-with-tls-data-loaded-from-environment",level:2},{value:"DOCKER_HOST environment variable overrides the active context. To use a context, either set the global --context flag, or unset DOCKER_HOST environment variable.",id:"docker_host-environment-variable-overrides-the-active-context-to-use-a-context-either-set-the-global---context-flag-or-unset-docker_host-environment-variable",level:2},{value:"failed to solve with frontend dockerfile.v0: failed to create LLB definition: unexpected status code manifests latest: 403 Forbidden",id:"failed-to-solve-with-frontend-dockerfilev0-failed-to-create-llb-definition-unexpected-status-code-manifests-latest-403-forbidden",level:2},{value:"OpenTelemetry",id:"opentelemetry",level:2},{value:"error from daemon in stream: Error grabbing logs: invalid character &#39;\0&#39; looking for beginning of valu",id:"error-from-daemon-in-stream-error-grabbing-logs-invalid-character-x00-looking-for-beginning-of-valu",level:2},{value:"Error running exec in container: failed to open stdout fifo: error creating fifo",id:"error-running-exec-in-container-failed-to-open-stdout-fifo-error-creating-fifo",level:2},{value:"overlayfs: upper fs does not support RENAME_WHITEOUT",id:"overlayfs-upper-fs-does-not-support-rename_whiteout",level:2},{value:"listing workers: failed to list workers: Unavailable: connection closed before server preface received",id:"listing-workers-failed-to-list-workers-unavailable-connection-closed-before-server-preface-received",level:2},{value:"multiple platforms feature is currently not supported for docker driver. Please switch to a different driver",id:"multiple-platforms-feature-is-currently-not-supported-for-docker-driver-please-switch-to-a-different-driver",level:2}],b={toc:v};function g(e){var t,r=e,{components:o}=r,d=((e,t)=>{var r={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=u(u({},b),d),a(t,l({components:o,mdxType:"MDXLayout"}))),(0,n.kt)("h1",u({},{id:"docker-faq"}),"Docker FAQ"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://gist.github.com/StevenACoffman/41fee08e8782b411a4a26b9700ad7af5"}),"Docker Best Practices"))),(0,n.kt)("h2",u({},{id:"env"}),"env"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"DOCKER_REGISTRY_URL",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"jenkins ",(0,n.kt)("inlineCode",{parentName:"li"},"docker.withRegistry")))),(0,n.kt)("li",{parentName:"ul"},"DOCKER_REGISTRY_CREDENTIALS_ID"),(0,n.kt)("li",{parentName:"ul"},"DOCKER_CONFIG=~/.docker"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://docs.docker.com/engine/reference/commandline/cli/#environment-variables"}),"https://docs.docker.com/engine/reference/commandline/cli/#environment-variables"))),(0,n.kt)("h1",u({},{id:"volume-bind-\u6587\u4ef6\u4e0d\u4f1a\u66f4\u65b0"}),"volume bind \u6587\u4ef6\u4e0d\u4f1a\u66f4\u65b0"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u5c1d\u8bd5 bind \u76ee\u5f55\uff0c\u4e0d\u8981 bind \u6587\u4ef6")),(0,n.kt)("h2",u({},{id:"\u5728-docker-\u4e2d\u4f7f\u7528-docker"}),"\u5728 docker \u4e2d\u4f7f\u7528 docker"),(0,n.kt)("p",null,"\u76f4\u63a5\u6620\u5c04 /var/run/docker.sock"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock --name box wener/demo:test\n")),(0,n.kt)("h2",u({},{id:"\u975e-root-\u7ed1\u5b9a\u79c1\u6709\u7aef\u53e3"}),"\u975e root \u7ed1\u5b9a\u79c1\u6709\u7aef\u53e3"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u4e00\u822c\u6765\u8bf4\u6dfb\u52a0 CAP_NET_BIND_SERVICE \u5373\u53ef\uff0c\u4f46\u662f\u5bf9\u975e root \u65e0\u6548"),(0,n.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e sysctl ",(0,n.kt)("inlineCode",{parentName:"li"},"net.ipv4.ip_unprivileged_port_start=0")," \u5373\u53ef",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u9700\u8981 kernel 4.11+"),(0,n.kt)("li",{parentName:"ul"},"ubuntu 18+")))),(0,n.kt)("h2",u({},{id:"\u505c\u6b62\u6240\u6709\u5bb9\u5668"}),"\u505c\u6b62\u6240\u6709\u5bb9\u5668"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"docker stop $(docker ps -aq)\n")),(0,n.kt)("h2",u({},{id:"\u8fc1\u79fb\u6570\u636e\u76ee\u5f55"}),"\u8fc1\u79fb\u6570\u636e\u76ee\u5f55"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"/var/lib/docker \u5bf9 docker \u6027\u80fd\u5f71\u54cd\u8f83\u5927")),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),'# \u505c\u6b62\u670d\u52a1\u8fc1\u79fb\u6570\u636e\nservice docker stop\nmkdir -p /data/docker\nsudo rsync -aP /var/lib/docker/ /data/docker/\n\n# \u6dfb\u52a0 data-root \u914d\u7f6e\n# { "data-root": "/data/docker" }\nnano /etc/docker/daemon.json\n\n# \u542f\u52a8\nservice docker start\n# \u67e5\u770b\u65b0\u7684\u914d\u7f6e\ndocker info | grep \'Root Dir\'\n\n# \u786e\u8ba4\u65e7\u7684\u76ee\u5f55\u6ca1\u6709\u88ab\u4f7f\u7528\napk add lsof\nlsof +D /var/lib/docker\n')),(0,n.kt)("h2",u({},{id:"no-swap-limit-support"}),"No swap limit support"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u6dfb\u52a0\u5185\u6838\u53c2\u6570 ",(0,n.kt)("inlineCode",{parentName:"li"},"cgroup_enable=memory swapaccount=1")),(0,n.kt)("li",{parentName:"ul"},"\u727a\u7272 1% \u7684\u5185\u5bb9\uff0c10% \u6027\u80fd\u6765\u652f\u6301\u5185\u5b58\u548c\u4ea4\u6362\u533a\u5ba1\u8ba1"),(0,n.kt)("li",{parentName:"ul"},"\u4e00\u822c ",(0,n.kt)("inlineCode",{parentName:"li"},"cgroup_enable=memory")," \u4f1a\u5f00\u542f\uff0c\u4f46 ",(0,n.kt)("inlineCode",{parentName:"li"},"swapaccount")," \u4e0d\u5f00"),(0,n.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://docs.docker.com/config/containers/resource_constraints/"}),"Runtime options with Memory, CPUs, and GPUs")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://docs.docker.com/engine/install/linux-postinstall/#your-kernel-does-not-support-cgroup-swap-limit-capabilities"}),"Your kernel does not support cgroup swap limit capabilities"))))),(0,n.kt)("h2",u({},{id:"\u4e3a\u5df2\u7ecf\u8fd0\u884c\u7684-docker-\u5bb9\u5668\u6dfb\u52a0\u7aef\u53e3\u6620\u5c04"}),"\u4e3a\u5df2\u7ecf\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u6dfb\u52a0\u7aef\u53e3\u6620\u5c04"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"HOSTPORT=80\nCONTAINERIP=172.16.0.2\n\niptables -t nat -A DOCKER -p tcp --dport ${HOSTPORT} -j DNAT --to-destination ${CONTAINERIP}:${HOSTPORT}\niptables -t nat -A POSTROUTING -j MASQUERADE -p tcp --source ${CONTAINERIP} --destination ${CONTAINERIP} --dport ${HOSTPORT}\niptables -A DOCKER -j ACCEPT -p tcp --destination ${CONTAINERIP} --dport ${HOSTPORT}\n")),(0,n.kt)("h2",u({},{id:"upper-fs-does-not-support-rename_whiteout"}),"upper fs does not support RENAME_WHITEOUT"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"zfs \u65e0\u6cd5\u8fd0\u884c docker overlay"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/openzfs/zfs/issues/8648"}),"openzfs/zfs#8648"))),(0,n.kt)("h2",u({},{id:"docker-zfs-vol"}),"docker zfs vol"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"docker \u652f\u6301 zfs driver"),(0,n.kt)("li",{parentName:"ul"},"\u4f46\u662f\u6709\u4e9b\u95ee\u9898",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/moby/moby/issues/41055"}),"moby/moby#41055")))),(0,n.kt)("li",{parentName:"ul"},"\u5b9e\u5728\u9700\u8981\u53ef\u4ee5\u8003\u8651 zvol")),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),'mkdir -p /data/docker\n# -s sparse volume \u4e0d\u4fdd\u7559\u7a7a\u95f4\nzfs create -s -V 100GB main/docker-vol\nmkfs.ext4 /dev/zvol/main/docker-vol\nmount /dev/zvol/main/docker-vol /data/docker\n# \u6301\u4e45\u5316 mount\ntail -1 /proc/mounts | sudo tee -a /etc/fstab\n\n# \u505c\u670d\u52a1\u8fc1\u79fb\nservice docker stop\nsudo rsync -aP /var/lib/docker/ /data/docker/\n# { "data-root": "/data/docker" }\nnano /etc/docker/daemon.json\nservice docker start\n\n# \u67e5\u770b\u65b0\u7684\u914d\u7f6e\ndocker info | grep \'Root Dir\'\n\n# \u786e\u8ba4\u65e7\u7684\u76ee\u5f55\u6ca1\u6709\u88ab\u4f7f\u7528\napk add lsof\nlsof +D /var/lib/docker\n')),(0,n.kt)("h2",u({},{id:"driver-zfs-failed-to-remove-root-filesystem"}),'driver "zfs" failed to remove root filesystem'),(0,n.kt)("p",null,"\u4e00\u8fb9\u9000\u51fa\uff0c\u53e6\u5916\u4e00\u8fb9\u8fd8\u5728\u64cd\u4f5c\u65f6\u53ef\u80fd\u51fa\u73b0\uff0c\u4e4b\u540e\u518d\u6267\u884c ",(0,n.kt)("inlineCode",{parentName:"p"},"docker rm")," \u5373\u53ef\u3002"),(0,n.kt)("hr",null),(0,n.kt)("p",null,"\u5982\u679c ",(0,n.kt)("inlineCode",{parentName:"p"},"docker rm")," \u8fd8\u51fa\u73b0\u5f02\u5e38"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),'Error response from daemon: container 2736566eac14027e7bf708c2babe894f1978249fc4a674886e158d6aa886479a: driver "zfs" failed to remove root filesystem: exit status 1: "/usr/sbin/zfs fs destroy -r main/docker/9d56a9bde13e6a1d37c6af5a55057cc4a9fb8b684ff454ac25f415b70bc55d0d" => cannot open \'main/docker/9d56a9bde13e6a1d37c6af5a55057cc4a9fb8b684ff454ac25f415b70bc55d0d\': dataset does not exist\n')),(0,n.kt)("p",null,"\u5219\u53ef\u4ee5\u5148\u521b\u5efa\u518d\u6267\u884c"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"zfs create main/docker/9d56a9bde13e6a1d37c6af5a55057cc4a9fb8b684ff454ac25f415b70bc55d0d\ndocker rm container\n")),(0,n.kt)("h2",u({},{id:"\u6ca1\u6743\u9650"}),"\u6ca1\u6743\u9650"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"sudo adduser $USER docker\n")),(0,n.kt)("h2",u({},{id:"bridge-nf-call-iptables"}),"bridge-nf-call-iptables"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-conf",metastring:'title="/etc/sysctl.d/99-br_netfilter.conf"',title:'"/etc/sysctl.d/99-br_netfilter.conf"'}),"net.bridge.bridge-nf-call-iptables=1\nnet.bridge.bridge-nf-call-ip6tables=1\n")),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"sudo sysctl -p /etc/sysctl.d/99-br_netfilter.conf\n")),(0,n.kt)("h2",u({},{id:"cannot-link-to-a-non-running-container"}),"Cannot link to a non running container"),(0,n.kt)("h2",u({},{id:"docker-exporter-does-not-currently-support-exporting-manifest-lists"}),"docker exporter does not currently support exporting manifest lists"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u53ea\u80fd --push ",(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/docker/buildx/issues/59"}),"docker/buildx#59"))),(0,n.kt)("h2",u({},{id:"could-not-create-a-builder-instance-with-tls-data-loaded-from-environment"}),"could not create a builder instance with TLS data loaded from environment"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# \u53ea\u8981\u4e0d\u662f\u9ed8\u8ba4\u7684\u5c31\u884c\ndocker context create tls\ndocker buildx create --name multiarch-builder --driver docker-container --use tls\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/docker/buildx/issues/413"}),"https://github.com/docker/buildx/issues/413"))),(0,n.kt)("h2",u({},{id:"docker_host-environment-variable-overrides-the-active-context-to-use-a-context-either-set-the-global---context-flag-or-unset-docker_host-environment-variable"}),"DOCKER_HOST environment variable overrides the active context. To use a context, either set the global --context flag, or unset DOCKER_HOST environment variable."),(0,n.kt)("h2",u({},{id:"failed-to-solve-with-frontend-dockerfilev0-failed-to-create-llb-definition-unexpected-status-code-manifests-latest-403-forbidden"}),"failed to solve with frontend dockerfile.v0: failed to create LLB definition: unexpected status code ","[manifests latest]",": 403 Forbidden"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"export DOCKER_BUILDKIT=0\n")),(0,n.kt)("h2",u({},{id:"opentelemetry"}),"OpenTelemetry"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"io.containerd.tracing.processor.v1.otlp")),(0,n.kt)("h1",u({},{id:"docker_host-\u683c\u5f0f"}),"DOCKER_HOST \u683c\u5f0f"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"DOCKER_HOST",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"tcp://1.2.3.4:2375"),(0,n.kt)("li",{parentName:"ul"},"unix:///var/run/docker.sock"),(0,n.kt)("li",{parentName:"ul"},"npipe:///./pipe/docker_engine",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Named Pipe"))),(0,n.kt)("li",{parentName:"ul"},"fd://1.2.3.4:5678"),(0,n.kt)("li",{parentName:"ul"},"ssh://1.2.3.4:22"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"//host:port")," -> ",(0,n.kt)("inlineCode",{parentName:"li"},"tpc://"))))),(0,n.kt)("h2",u({},{id:"error-from-daemon-in-stream-error-grabbing-logs-invalid-character-x00-looking-for-beginning-of-valu"}),"error from daemon in stream: Error grabbing logs: invalid character '\\x00' looking for beginning of valu"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"for cont in $(docker container ps | cut -f1 -d\\  | grep -v CONTAINER); do\n  sudo truncate -s0 $(docker container inspect --format='{{.LogPath}}' $cont)\ndone\n\nsudo sh -c \"grep -Pa '\\x00' /var/lib/docker/containers/**/*json.log\"\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/docker/for-linux/issues/140"}),"https://github.com/docker/for-linux/issues/140"))),(0,n.kt)("h2",u({},{id:"error-running-exec-in-container-failed-to-open-stdout-fifo-error-creating-fifo"}),"Error running exec in container: failed to open stdout fifo: error creating fifo"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),"Error running exec XXX in container: failed to open stdin fifo: error creating fifo /var/run/docker/containerd/XXX/XXX-stdin: no such file or directory\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/docker/for-linux/issues/1091"}),"https://github.com/docker/for-linux/issues/1091"))),(0,n.kt)("h2",u({},{id:"overlayfs-upper-fs-does-not-support-rename_whiteout"}),"overlayfs: upper fs does not support RENAME_WHITEOUT"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u4fee\u6539 /var/lib/docker \u6302\u5728\u4f4d\u7f6e")),(0,n.kt)("h2",u({},{id:"listing-workers-failed-to-list-workers-unavailable-connection-closed-before-server-preface-received"}),"listing workers: failed to list workers: Unavailable: connection closed before server preface received"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"docker buildx ls\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u91cd\u542f dind \u540e\u6062\u590d")),(0,n.kt)("h2",u({},{id:"multiple-platforms-feature-is-currently-not-supported-for-docker-driver-please-switch-to-a-different-driver"}),"multiple platforms feature is currently not supported for docker driver. Please switch to a different driver"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{}),'multiple platforms feature is currently not supported for docker driver. Please switch to a different driver (eg. "docker buildx create --use")\n')),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"docker buildx create --name multiarch-builder --driver docker-container\n")))}g.isMDXComponent=!0}}]);