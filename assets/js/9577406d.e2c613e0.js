"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[80341],{49613:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return N}});var a=n(59496);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var o=a.createContext({}),m=function(t){var e=a.useContext(o),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=m(t.components);return a.createElement(o.Provider,{value:e},t.children)},d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},k=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),k=m(n),N=r,c=k["".concat(o,".").concat(N)]||k[N]||d[N]||l;return n?a.createElement(c,i(i({ref:e},u),{},{components:n})):a.createElement(c,i({ref:e},u))}));function N(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=k;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var m=2;m<l;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},56104:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return N},default:function(){return y},frontMatter:function(){return k},metadata:function(){return c},toc:function(){return g}});var a=n(49613),r=Object.defineProperty,l=Object.defineProperties,i=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,m=Object.prototype.propertyIsEnumerable,u=(t,e,n)=>e in t?r(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,d=(t,e)=>{for(var n in e||(e={}))o.call(e,n)&&u(t,n,e[n]);if(p)for(var n of p(e))m.call(e,n)&&u(t,n,e[n]);return t};const k={title:"lsof"},N="lsof",c={unversionedId:"os/linux/shell/lsof",id:"os/linux/shell/lsof",title:"lsof",description:"- lsof.8",source:"@site/../notes/os/linux/shell/lsof.md",sourceDirName:"os/linux/shell",slug:"/os/linux/shell/lsof",permalink:"/notes/os/linux/shell/lsof",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/os/linux/shell/lsof.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1678678348,formattedLastUpdatedAt:"Mar 13, 2023",frontMatter:{title:"lsof"},sidebar:"docs",previous:{title:"jq",permalink:"/notes/os/linux/shell/jq"},next:{title:"rename",permalink:"/notes/os/linux/shell/rename"}},s={},g=[],f={toc:g};function y(t){var e,n=t,{components:r}=n,u=((t,e)=>{var n={};for(var a in t)o.call(t,a)&&e.indexOf(a)<0&&(n[a]=t[a]);if(null!=t&&p)for(var a of p(t))e.indexOf(a)<0&&m.call(t,a)&&(n[a]=t[a]);return n})(n,["components"]);return(0,a.kt)("wrapper",(e=d(d({},f),u),l(e,i({components:r,mdxType:"MDXLayout"}))),(0,a.kt)("h1",d({},{id:"lsof"}),"lsof"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",d({parentName:"li"},{href:"https://man7.org/linux/man-pages/man8/lsof.8.html"}),"lsof.8"))),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-bash"}),'# \u641c\u7d22\u76ee\u5f55\nlsof +D /var/lib/k0s/containerd/io.containerd.snapshotter.v1.overlayfs/\n# \u641c\u7d22 Linux \u6587\u4ef6\nlsof -f -- /run/k0s/konnectivity-server/konnectivity-server.sock\n\nlsof -c ssh -c init\n\nlsof -a -d "^cwd,^rtd" +D "/"\n')),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"flag"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"for"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-d FD"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"+D DIR"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"\u904d\u5386 DIR")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"+d DIR"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"\u4e0d\u904d\u5386")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-u USER"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-g GROUP"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-a"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"AND")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-c PROCESS_NAME"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-p PID"),(0,a.kt)("td",d({parentName:"tr"},{align:null}))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-t"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"\u8f93\u51fa PID")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"+\\|-r [t[m<fmt>]]")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"repeat N times")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-i"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"network")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-N"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"NFS")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-P"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"\u4e0d port -> name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-n"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"\u4e0d ip -> hostname")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"+\\|-f [cfgGn]")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"path name")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"-D D"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"device cache file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),(0,a.kt)("inlineCode",{parentName:"td"},"-x [fl]")),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"l - symlink, f - mount")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"^EXCLUDE"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-u ^root")," - exclude root user"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p ^init")," - exclude init process"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-p 123,^456")))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-i [46][protocol][@hostname|hostaddr][:service|port]"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-i TCP:22")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-i TCP:1-1024")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-i 4")," - IPv4"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-i 6")," - IPv6"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"+D DIR -x l")," - follow symlink"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"+D DIR -x f")," - follow mount point")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"FD")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"FD"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"for"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"cwd"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"current working directory")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Lnn"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"library references (AIX)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"err"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"FD information error (see NAME column)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"jld"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"jail directory (FreeBSD)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"ltx"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"shared library text (code and data)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Mxx"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"hex memory-mapped type number xx")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"m86"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"DOS Merge mapped file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"mem"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"memory-mapped file")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"mmap"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"memory-mapped device")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"pd"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"parent directory")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"rtd"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"root directory")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"tr"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"kernel trace file (OpenBSD)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"txt"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"program text (code and data)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"v86"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"VP/ix mapped file")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"r -> read"),(0,a.kt)("li",{parentName:"ul"},"w -> write"),(0,a.kt)("li",{parentName:"ul"},"u -> read+write"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"}," ")," -> unknow & no lock"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-")," -> unknown & lock")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Lock")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",d({parentName:"tr"},{align:null}),"L"),(0,a.kt)("th",d({parentName:"tr"},{align:null}),"for"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"N"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"Solaris NFS lock of unknown type;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"r"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"read lock on part of the file;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"R"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"read lock on the entire file;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"w"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"write lock on part of the file;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"W"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"write lock on the entire file;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"u"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"read and write lock of any length;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"U"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"lock of unknown type;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"x"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"SCO OpenServer Xenix lock on part of the file;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"X"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"SCO OpenServer Xenix lock on the entire file;")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",d({parentName:"tr"},{align:null}),"space"),(0,a.kt)("td",d({parentName:"tr"},{align:null}),"no lock.")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"TYPE",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"REG - Regular File"),(0,a.kt)("li",{parentName:"ul"},"DIR"),(0,a.kt)("li",{parentName:"ul"},"FIFO"),(0,a.kt)("li",{parentName:"ul"},"CHR")))))}y.isMDXComponent=!0}}]);