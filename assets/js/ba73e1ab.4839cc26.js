"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[69701],{49613:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=c(r),m=a,y=f["".concat(s,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(y,l(l({ref:t},p),{},{components:r})):n.createElement(y,l({ref:t},p))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},19887:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return f},metadata:function(){return y},toc:function(){return b}});var n=r(49613),a=Object.defineProperty,o=Object.defineProperties,l=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,p=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,u=(e,t)=>{for(var r in t||(t={}))s.call(t,r)&&p(e,r,t[r]);if(i)for(var r of i(t))c.call(t,r)&&p(e,r,t[r]);return e};const f={title:"OpenSSL"},m="OpenSSL",y={unversionedId:"security/openssl",id:"security/openssl",title:"OpenSSL",description:"- openssl/openssl",source:"@site/../notes/security/openssl.md",sourceDirName:"security",slug:"/security/openssl",permalink:"/notes/security/openssl",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/security/openssl.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1681281594,formattedLastUpdatedAt:"Apr 12, 2023",frontMatter:{title:"OpenSSL"},sidebar:"docs",previous:{title:"OpenSSL Version",permalink:"/notes/security/openssl-version"},next:{title:"Security Awesome",permalink:"/notes/security/awesome"}},d={},b=[{value:"CA",id:"ca",level:2},{value:"variable lookup failed for ca::default_ca",id:"variable-lookup-failed-for-cadefault_ca",level:2},{value:"SSL certificate verify result: unable to get local issuer certificate (20), continuing anyway",id:"ssl-certificate-verify-result-unable-to-get-local-issuer-certificate-20-continuing-anyway",level:2}],g={toc:b};function k(e){var t,r=e,{components:a}=r,p=((e,t)=>{var r={};for(var n in e)s.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&i)for(var n of i(e))t.indexOf(n)<0&&c.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=u(u({},g),p),o(t,l({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",u({},{id:"openssl"}),"OpenSSL"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://github.com/openssl/openssl"}),"openssl/openssl"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Apache-2.0, C, Perl"))),(0,n.kt)("li",{parentName:"ul"},"libssl, libcrypto, openssl"),(0,n.kt)("li",{parentName:"ul"},"\u53c2\u8003",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://www.openssl.org/docs/manmaster/"}),"https://www.openssl.org/docs/manmaster/"))))),(0,n.kt)("h2",u({},{id:"ca"}),"CA"),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"openssl genrsa -out example.org.key 2048\nopenssl rsa -in example.org.key -noout -text # introspect\n\nopenssl rsa -in example.org.key -pubout -out example.org.pubkey\nopenssl rsa -in example.org.pubkey -pubin -noout -text\n\nopenssl req -new -key example.org.key -out example.org.csr\nopenssl req -in example.org.csr -noout -text\n\nopenssl genrsa -out ca.key 2048\nopenssl req -new -x509 -key ca.key -out ca.crt\n\nopenssl x509 -req -in example.org.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out example.org.crt\nopenssl x509 -in example.org.crt -noout -text\ncat example.org.crt ca.crt > example.org.bundle.crt\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",u({parentName:"li"},{href:"https://gist.github.com/Soarez/9688998"}),"https://gist.github.com/Soarez/9688998"))),(0,n.kt)("h1",u({},{id:"faq"}),"FAQ"),(0,n.kt)("h2",u({},{id:"variable-lookup-failed-for-cadefault_ca"}),"variable lookup failed for ca::default_ca"),(0,n.kt)("h2",u({},{id:"ssl-certificate-verify-result-unable-to-get-local-issuer-certificate-20-continuing-anyway"}),"SSL certificate verify result: unable to get local issuer certificate (20), continuing anyway"),(0,n.kt)("p",null,"The root certificate is not in the local database of trusted root certificates. The local database of trusted root certificates was not give or queried by OpenSSL."),(0,n.kt)("pre",null,(0,n.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"openssl s_client -servername wener.me -connect wener.me:443\n")))}k.isMDXComponent=!0}}]);