/*! For license information please see c5930696.47f575bb.js.LICENSE.txt */
"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[67448],{46264:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var i=s(2488),l=s(62780);const r={title:"PostgreSQL Index"},d="PostgreSQL Index",c={id:"db/relational/postgresql/postgresql-index",title:"PostgreSQL Index",description:"- B-tree, Hash, GiST, SP-GiST, GIN, BRIN",source:"@site/../notes/db/relational/postgresql/postgresql-index.md",sourceDirName:"db/relational/postgresql",slug:"/db/relational/postgresql/index",permalink:"/notes/db/relational/postgresql/index",draft:!1,unlisted:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/db/relational/postgresql/postgresql-index.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1633940899,formattedLastUpdatedAt:"Oct 11, 2021",frontMatter:{title:"PostgreSQL Index"},sidebar:"docs",previous:{title:"Functions",permalink:"/notes/db/relational/postgresql/func"},next:{title:"PostgreSQL Inside",permalink:"/notes/db/relational/postgresql/inside"}},t={},o=[{value:"hypopg",id:"hypopg",level:2},{value:"access method &quot;hash&quot; does not support unique indexes",id:"access-method-hash-does-not-support-unique-indexes",level:2},{value:"\u91cd\u590d\u503c\u7d22\u5f15",id:"\u91cd\u590d\u503c\u7d22\u5f15",level:2}];function a(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"postgresql-index",children:"PostgreSQL Index"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"B-tree, Hash, GiST, SP-GiST, GIN, BRIN"}),"\n",(0,i.jsx)(n.li,{children:"\u9ed8\u8ba4 B-tree"}),"\n",(0,i.jsxs)(n.li,{children:["B-tree\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u76f8\u7b49\u548c\u8303\u56f4\u4e0a\u4e0b\u9650 ",(0,i.jsx)(n.code,{children:"<"}),",",(0,i.jsx)(n.code,{children:"<="}),",",(0,i.jsx)(n.code,{children:"="}),",",(0,i.jsx)(n.code,{children:">="}),",",(0,i.jsx)(n.code,{children:">"}),", BETWEEN, IN, IS NULL, IS NOT NULL"]}),"\n",(0,i.jsxs)(n.li,{children:["\u524d\u7f00\u5339\u914d ",(0,i.jsx)(n.code,{children:"LIKE 'foo%'"}),", ",(0,i.jsx)(n.code,{children:"~ '^foo'"}),", ILIKE, ~* \u4e14\u5927\u5c0f\u5199\u5904\u7406\u903b\u8f91\u76f8\u540c"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["HASH - ",(0,i.jsx)(n.code,{children:"="})," \u64cd\u4f5c - \u5982\u679c\u5b58\u5728 HASH \u7d22\u5f15\uff0c\u4f1a\u4f18\u5148\u4f7f\u7528\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c\u786e\u5b9a\u53ea\u4f1a\u7528\u5230 ",(0,i.jsx)(n.code,{children:"="})," \u5efa\u8bae\u4f7f\u7528 HASH"]}),"\n",(0,i.jsx)(n.li,{children:"\u5360\u7528\u7a7a\u95f4\u6bd4 B-tree \u5c11\uff0c\u901f\u5ea6\u66f4\u5feb"}),"\n",(0,i.jsx)(n.li,{children:"\u4e0d\u53d7\u503c\u957f\u5ea6\u5f71\u54cd"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["GiST\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u652f\u6301\u4e8c\u7ef4\u6570\u636e - ",(0,i.jsx)(n.code,{children:"<<"}),",",(0,i.jsx)(n.code,{children:"&<"}),",",(0,i.jsx)(n.code,{children:"&>"}),",",(0,i.jsx)(n.code,{children:">>"}),",",(0,i.jsx)(n.code,{children:"<<|"}),",",(0,i.jsx)(n.code,{children:"&<|"}),",",(0,i.jsx)(n.code,{children:"|&>"}),",",(0,i.jsx)(n.code,{children:"|>>"}),",",(0,i.jsx)(n.code,{children:"@>"}),",",(0,i.jsx)(n.code,{children:"<@"}),",",(0,i.jsx)(n.code,{children:"~="}),",",(0,i.jsx)(n.code,{children:"&&"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u652f\u6301 nearest-neighbor/\u4e34\u8fd1 \u641c\u7d22 - ",(0,i.jsx)(n.code,{children:"location <-> point '(101,456)'"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["SP-GiST - Space partitioned GiST\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["non-balanced disk-based data structures\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"quadtrees, k-d trees, and radix trees (tries)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\u652f\u6301\u4e8c\u7ef4\u70b9 - ",(0,i.jsx)(n.code,{children:"<<"}),",",(0,i.jsx)(n.code,{children:">>"}),",",(0,i.jsx)(n.code,{children:"~="}),",",(0,i.jsx)(n.code,{children:"<@"}),",",(0,i.jsx)(n.code,{children:"<^"}),",",(0,i.jsx)(n.code,{children:">^"})]}),"\n",(0,i.jsx)(n.li,{children:"\u652f\u6301 nearest-neighbor"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["GIN - inverted indexes\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u9006\u5411\u7d22\u5f15 - \u9002\u7528\u4e8e\u7c7b\u4f3c\u6570\u7ec4\u8fd9\u6837\u7684\u573a\u666f"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<@"}),",",(0,i.jsx)(n.code,{children:"@>"}),",",(0,i.jsx)(n.code,{children:"="}),",",(0,i.jsx)(n.code,{children:"&&"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["BRIN - Block Range INdexes\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"store summaries about the values stored in consecutive physical block ranges"}),"\n",(0,i.jsx)(n.li,{children:"\u9002\u7528\u4e8e\u8fde\u7eed\u76f8\u90bb\u6570\u636e"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"<"}),",",(0,i.jsx)(n.code,{children:"<="}),",",(0,i.jsx)(n.code,{children:"="}),",",(0,i.jsx)(n.code,{children:">="}),",",(0,i.jsx)(n.code,{children:">"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Bloom - ",(0,i.jsx)(n.code,{children:"CREATE EXTENSION bloom;"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u7d22\u5f15\u7c7b\u578b\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u90e8\u5206\u7d22\u5f15"}),"\n",(0,i.jsx)(n.li,{children:"\u8868\u8fbe\u5f0f\u7d22\u5f15"}),"\n",(0,i.jsx)(n.li,{children:"\u552f\u4e00\u7d22\u5f15"}),"\n",(0,i.jsx)(n.li,{children:"\u591a\u5217\u7d22\u5f15"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/powa-team/pg_qualstats",children:"pg_qualstats"})," - An extension collecting statistics about quals\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"quals -> predicates"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/HypoPG/hypopg",children:"hypopg"})," - Hypothetical indexes for PostgreSQL\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u8bc4\u4f30\u7d22\u5f15\u548c Query Plan"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Bitmap Index Scan"}),"\n",(0,i.jsx)(n.li,{children:"Bitmap Heap Scan"}),"\n",(0,i.jsx)(n.li,{children:"Index Scan"}),"\n"]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u4ece\u65e7\u7248\u672c pg_upgrade \u5347\u7ea7\u540e\u9700\u8981 REINDEX \u624d\u4f1a\u5229\u7528\u5230\u65b0\u7684\u7d22\u5f15\u7279\u6027"}),"\n",(0,i.jsx)(n.li,{children:"VACUUM FULL \u4f1a\u91cd\u5efa\u7d22\u5f15"}),"\n",(0,i.jsxs)(n.li,{children:["PostgreSQL 13 BTree \u7d22\u5f15\u4f1a\u53bb\u91cd - \u51cf\u5c11\u78c1\u76d8\u548c\u5185\u5b58\u7a7a\u95f4\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c\u5e0c\u671b\u65e7\u7248\u672c\u884c\u4e3a\uff0c\u53ef\u4ee5 ",(0,i.jsx)(n.code,{children:"deduplicate_items=off"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"null \u4e0d\u60f3\u7b49 - \u56e0\u6b64\u4e0d\u4f1a\u7b97\u5728 unique"}),"\n"]})}),"\n",(0,i.jsx)(n.admonition,{type:"caution",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"UNIQUE INDEX \u53ea\u80fd\u4f7f\u7528 B-tree"}),"\n",(0,i.jsx)(n.li,{children:"\u6392\u5e8f\u53ea\u80fd B-tree"}),"\n",(0,i.jsxs)(n.li,{children:["\u6392\u5e8f\u9690\u542b NULLS LAST, \u9ed8\u8ba4 ASC NULLS LAST - \u56e0\u6b64\u9ed8\u8ba4 DESC NULLS LAST ",(0,i.jsx)(n.strong,{children:"\u4e0d\u4f1a"}),"\u7528\u5230\u7d22\u5f15"]}),"\n"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",metastring:'title="\u7d22\u5f15\u652f\u6301\u7684\u64cd\u4f5c"',children:"SELECT am.amname              AS index_method,\n       opc.opcname            AS opclass_name,\n       opc.opcintype::regtype AS indexed_type,\n       opc.opcdefault         AS is_default\nFROM pg_am am,\n     pg_opclass opc\nWHERE opc.opcmethod = am.oid\nORDER BY index_method, opclass_name;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- Hash \u7d22\u5f15\nCREATE INDEX name ON table USING HASH (column);\n-- \u5982\u679c\u60f3\u8981 Hash unique \u53ef\u4ee5\u4f7f\u7528 constraint\n-- \u4f46 ON CONFLICT \u9700\u8981\u4f7f\u7528 constraint \u540d\u5b57\uff0cpg \u4e0d\u80fd\u81ea\u5df1\u63a8\u5bfc\nalter table tab add constraint cst_exc_id exclude using hash (id with =);\n\n-- \u5185\u7f6e Hash \u51fd\u6570\nSELECT hashtext('text'),\n       hashchar('c'),\n       hash_array(array [1,2,3]),\n       jsonb_hash('{\n         \"me\": \"haki\"\n       }'::jsonb),\n       timestamp_hash(now()::timestamp);\n\n-- \u4e34\u8fd1\u641c\u7d22\nSELECT * FROM places ORDER BY location <-> point '(101,456)' LIMIT 10;\n-- \u7d22\u5f15\u652f\u6301 ORDER \u548c NULL \u987a\u5e8f\nCREATE INDEX test3_desc_index ON test3 (id DESC NULLS LAST);\n\n-- \u7d22\u5f15\u6dfb\u52a0\u989d\u5916\u503c - \u53ef\u4ee5\u8ba9\u5e38\u7528\u67e5\u8be2\u53ea\u9700\u8981\u8d70\u7d22\u5f15\nCREATE INDEX idx_cust2 ON customer(active) INCLUDE (email);\n\n\n-- \u67e5\u627e\u91cd\u590d\u7d22\u5f15\n  SELECT array_agg(indexname) AS indexes, replace(indexdef, indexname, '') AS defn\n    FROM pg_indexes\nGROUP BY defn\n  HAVING count(*) > 1;\n\n-- \u7d22\u5f15\u4f7f\u7528\u60c5\u51b5\nSELECT relname, indexrelname, idx_scan\nFROM   pg_catalog.pg_stat_user_indexes\nWHERE  schemaname = 'public';\n\n-- \u5e76\u884c\u6784\u5efa\u7d22\u5f15\n\nSET max_parallel_workers = 32;\nSET max_parallel_maintenance_workers = 16;\n\nCREATE INDEX CONCURRENTLY idx_address1 ON address(district);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"hypopg",children:"hypopg"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM hypopg_create_index('CREATE INDEX ON test (id)');\n\nSELECT * FROM hypopg_list_indexes();\nEXPLAIN SELECT * FROM test WHERE id = 1;\n"})}),"\n",(0,i.jsx)(n.h1,{id:"faq",children:"FAQ"}),"\n",(0,i.jsx)(n.h2,{id:"access-method-hash-does-not-support-unique-indexes",children:'access method "hash" does not support unique indexes'}),"\n",(0,i.jsx)(n.p,{children:"\u652f\u6301 BTree \u53ef\u4ee5 create unique index"}),"\n",(0,i.jsx)(n.h2,{id:"\u91cd\u590d\u503c\u7d22\u5f15",children:"\u91cd\u590d\u503c\u7d22\u5f15"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"PG 13 BTree \u4f1a\u53bb\u91cd\uff0c\u662f\u6bd4\u8f83\u597d\u7684\u9009\u62e9"}),"\n",(0,i.jsx)(n.li,{children:"\u6839\u636e\u6570\u91cf\u5dee\u5f02\u60c5\u51b5\uff0c\u53ef\u4ee5\u9009\u62e9\u90e8\u5206\u7d22\u5f15"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},38088:(e,n,s)=>{var i=s(96651),l=Symbol.for("react.element"),r=Symbol.for("react.fragment"),d=Object.prototype.hasOwnProperty,c=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,t={key:!0,ref:!0,__self:!0,__source:!0};function o(e,n,s){var i,r={},o=null,a=null;for(i in void 0!==s&&(o=""+s),void 0!==n.key&&(o=""+n.key),void 0!==n.ref&&(a=n.ref),n)d.call(n,i)&&!t.hasOwnProperty(i)&&(r[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===r[i]&&(r[i]=n[i]);return{$$typeof:l,type:e,key:o,ref:a,props:r,_owner:c.current}}n.Fragment=r,n.jsx=o,n.jsxs=o},2488:(e,n,s)=>{e.exports=s(38088)},62780:(e,n,s)=>{s.d(n,{I:()=>c,M:()=>d});var i=s(96651);const l={},r=i.createContext(l);function d(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);