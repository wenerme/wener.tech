"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[72573],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return c}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),s=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),m=s(n),c=r,k=m["".concat(o,".").concat(c)]||m[c]||u[c]||l;return n?a.createElement(k,i(i({ref:t},p),{},{components:n})):a.createElement(k,i({ref:t},p))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},26963:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return d},metadata:function(){return s},toc:function(){return u}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],d={title:"Ethereum"},o="EIP",s={unversionedId:"blockchain/ethereum/README",id:"blockchain/ethereum/README",title:"Ethereum",description:"| EIP        | Name                                                                      | Status | Notes                                                 |",source:"@site/notes/blockchain/ethereum/README.md",sourceDirName:"blockchain/ethereum",slug:"/blockchain/ethereum/",permalink:"/notes/blockchain/ethereum/",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/blockchain/ethereum/README.md",tags:[],version:"current",frontMatter:{title:"Ethereum"},sidebar:"docs",previous:{title:"DAO",permalink:"/notes/blockchain/dao"},next:{title:"Ethereum Awesome",permalink:"/notes/blockchain/ethereum/ethereum-awesome"}},p={},u=[{value:"RPC",id:"rpc",level:2},{value:"EIP-20",id:"eip-20",level:2},{value:"EIP-155",id:"eip-155",level:2},{value:"EIP-165",id:"eip-165",level:2},{value:"EIP-191",id:"eip-191",level:2},{value:"EIP-712",id:"eip-712",level:2},{value:"EIP-721",id:"eip-721",level:2},{value:"EIP-777",id:"eip-777",level:2},{value:"ERC-1155",id:"erc-1155",level:2},{value:"EIP-1167",id:"eip-1167",level:2},{value:"EIP-1363",id:"eip-1363",level:2},{value:"EIP-1820",id:"eip-1820",level:2},{value:"EIP-2612",id:"eip-2612",level:2},{value:"EIP-2981",id:"eip-2981",level:2},{value:"EIP-4626",id:"eip-4626",level:2},{value:"ERC-20 vs ERC-777",id:"erc-20-vs-erc-777",level:2},{value:"ERC-721 vs ERC-1155",id:"erc-721-vs-erc-1155",level:2}],m={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"eip"},"EIP"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"EIP"),(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Status"),(0,l.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-20]"),(0,l.kt)("td",{parentName:"tr",align:null},"Token Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null},"ERC-20 - Fungible Token/\u540c\u8d28\u8d27\u5e01")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-137]"),(0,l.kt)("td",{parentName:"tr",align:null},"Ethereum Domain Name Service"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-155"},"EIP-155")),(0,l.kt)("td",{parentName:"tr",align:null},"Simple replay attack protection"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null},"fork block 2,675,000 - hash(transaction) \u5305\u542b chainId")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-191"},"EIP-191")),(0,l.kt)("td",{parentName:"tr",align:null},"Signed Data Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-165"},"EIP-165")),(0,l.kt)("td",{parentName:"tr",align:null},"Standard Interface Detection"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-712"},"EIP-712")),(0,l.kt)("td",{parentName:"tr",align:null},"Ethereum typed structured data hashing and signing"),(0,l.kt)("td",{parentName:"tr",align:null},"Review"),(0,l.kt)("td",{parentName:"tr",align:null},"eth_signTypedData")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-721]"),(0,l.kt)("td",{parentName:"tr",align:null},"Non-Fungible Token Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null},"&EIP-165")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-777]"),(0,l.kt)("td",{parentName:"tr",align:null},"Token Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null},"ERC-20+ - Hooks,Decimals")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1066]"),(0,l.kt)("td",{parentName:"tr",align:null},"Status Codes"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1102]"),(0,l.kt)("td",{parentName:"tr",align:null},"Opt-in Account Exposure"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1155]"),(0,l.kt)("td",{parentName:"tr",align:null},"Multi Token Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5408\u7ea6\u652f\u6301\u591a\u79cd\u8d27\u5e01 - $BNB, $BAT")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-1167"},"EIP-1167")),(0,l.kt)("td",{parentName:"tr",align:null},"Minimal Proxy Contract"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b9e\u73b0\u4ee3\u7406\u5408\u7ea6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://eips.ethereum.org/EIPS/eip-1193"},"EIP-1193")),(0,l.kt)("td",{parentName:"tr",align:null},"Ethereum Provider JavaScript API"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"window.ethereum")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1363]"),(0,l.kt)("td",{parentName:"tr",align:null},"Payable Token"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1400]"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1474]"),(0,l.kt)("td",{parentName:"tr",align:null},"Remote Procedure Call Specification"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1559]"),(0,l.kt)("td",{parentName:"tr",align:null},"Fee market change for ETH 1.0 chain"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-1767]"),(0,l.kt)("td",{parentName:"tr",align:null},"GraphQL Interface to Ethereum Node Data"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-1820"},"EIP-1820")),(0,l.kt)("td",{parentName:"tr",align:null},"Pseudo-introspection Registry Contract"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"ERC-165+")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-2718]"),(0,l.kt)("td",{parentName:"tr",align:null},"Typed Transaction Envelope"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-2255]"),(0,l.kt)("td",{parentName:"tr",align:null},"Wallet Permissions"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-2612"},"EIP-2612")),(0,l.kt)("td",{parentName:"tr",align:null},"permit"),(0,l.kt)("td",{parentName:"tr",align:null},"Review"),(0,l.kt)("td",{parentName:"tr",align:null},"ERC-20+ERC-712")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-2981"},"EIP-2981")),(0,l.kt)("td",{parentName:"tr",align:null},"NFT Royalty Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-3722"},"EIP-3722")),(0,l.kt)("td",{parentName:"tr",align:null},"Poster: A ridiculously simple general purpose social media smart contract"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"[EIP-4626]"),(0,l.kt)("td",{parentName:"tr",align:null},"Tokenized Vault Standard"),(0,l.kt)("td",{parentName:"tr",align:null},"Final"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"EIP-4675"),(0,l.kt)("td",{parentName:"tr",align:null},"Multi-Fractional Non-Fungible Token Standard"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Token \u6807\u51c6",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"[EIP-20]",", ","[EIP-721]",", ","[EIP-777]",", ","[EIP-1155]"))),(0,l.kt)("li",{parentName:"ul"},"ERC-20",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5b9a\u4e49 Token \u6807\u51c6 - \u5176\u4ed6\u7684 Token \u90fd\u4f1a\u53c2\u7167\u5b9e\u73b0\u8fd9\u4e9b\u5408\u7ea6"),(0,l.kt)("li",{parentName:"ul"},"OpenZeppelin ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/07b1b472c0ac3e50963c8d52cd2dac6e7e05260c/contracts/token/ERC20/ERC20.sol"},"ERC20.sol")),(0,l.kt)("li",{parentName:"ul"},"ConsenSys ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ConsenSys/Tokens/blob/bbfa5b3544f19b2464efb05fa3179db4543816f1/contracts/eip20/EIP20.sol"},"EIP20.sol")))),(0,l.kt)("li",{parentName:"ul"},"EIP-1193",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/MetaMask/providers"},"MetaMask/providers")))),(0,l.kt)("li",{parentName:"ul"},"Status of ",(0,l.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/erc"},"ERC")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ethereum/EIPs"},"ethereum/EIPs"))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"EIP <-> ERC")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"EIP = ERC"),(0,l.kt)("li",{parentName:"ul"},"EIP - Ethereum Improvement Proposals"),(0,l.kt)("li",{parentName:"ul"},"ERC - Ethereum Request (for) Comments")))),(0,l.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Fungible Token/\u540c\u8d28\u8d27\u5e01")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ea4\u6362 / transfer")))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Interface"),(0,l.kt)("th",{parentName:"tr",align:null},"ERC-165 ID"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ERC165"),(0,l.kt)("td",{parentName:"tr",align:null},"0x01ffc9a7")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ERC721"),(0,l.kt)("td",{parentName:"tr",align:null},"0x80ac58cd")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ERC721TokenReceiver"),(0,l.kt)("td",{parentName:"tr",align:null},"0x150b7a02")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ERC721Metadata"),(0,l.kt)("td",{parentName:"tr",align:null},"0x5b5e139f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ERC721Enumerable"),(0,l.kt)("td",{parentName:"tr",align:null},"0x780e9d63")))),(0,l.kt)("h2",{id:"rpc"},"RPC"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface RPC {\n  // EIP-2255\n  wallet_requestPermissions(request: { eth_accounts: object }): Promise<object>;\n  wallet_getPermissions(\n    request: Record<string, { requiredMethods: string[] }>,\n  ): Promise<Array<{ invoker: string; parentCapability: string; caveats: Array<{ type: string; value: string }> }>>;\n  // EIP-747\n  wallet_watchAsset(request: {\n    type: 'ERC:20';\n    options: { address: string; image?: string; decimals?: number; symbol?: string };\n  }): Promise<boolean>;\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://metamask.github.io/api-playground/api-documentation/"},"https://metamask.github.io/api-playground/api-documentation/"))),(0,l.kt)("h2",{id:"eip-20"},"EIP-20"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function name() public view returns (string)\nfunction symbol() public view returns (string)\nfunction decimals() public view returns (uint8)\nfunction totalSupply() public view returns (uint256)\nfunction balanceOf(address _owner) public view returns (uint256 balance)\nfunction transfer(address _to, uint256 _value) public returns (bool success)\nfunction transferFrom(address _from, address _to, uint256 _value) public returns (bool success)\nfunction approve(address _spender, uint256 _value) public returns (bool success)\nfunction allowance(address _owner, address _spender) public view returns (uint256 remaining)\n\nevent Transfer(address indexed _from, address indexed _to, uint256 _value)\nevent Approval(address indexed _owner, address indexed _spender, uint256 _value)\n")),(0,l.kt)("h2",{id:"eip-155"},"EIP-155"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u589e\u52a0 chainId"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"(nonce, gasprice, startgas, to, value, data)")," -> ",(0,l.kt)("inlineCode",{parentName:"li"},"(nonce, gasprice, startgas, to, value, data, chainid, 0, 0)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://chainid.network/"},"https://chainid.network/")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/ethereum-lists/chains"},"ethereum-lists/chains"))),(0,l.kt)("h2",{id:"eip-165"},"EIP-165"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u68c0\u6d4b\u5408\u7ea6\u662f\u5426\u5b9e\u73b0 \u63a5\u53e3"),(0,l.kt)("li",{parentName:"ul"},"interfaceID - ",(0,l.kt)("inlineCode",{parentName:"li"},"bytes4(keccak256('supportsInterface(bytes4)'))"),"=0x01ffc9a7"),(0,l.kt)("li",{parentName:"ul"},"< 30,000 gas"),(0,l.kt)("li",{parentName:"ul"},"\u591a\u4e2a\u63a5\u53e3\u4e3a xor")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"interface ERC165 {\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\n}\n")),(0,l.kt)("h2",{id:"eip-191"},"EIP-191"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"version"),(0,l.kt)("th",{parentName:"tr",align:null},"eip"),(0,l.kt)("th",{parentName:"tr",align:null},"title"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x00"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-191"},"EIP-191")),(0,l.kt)("td",{parentName:"tr",align:null},"Data with intended validator")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x01"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-712"},"EIP-712")),(0,l.kt)("td",{parentName:"tr",align:null},"Structured data")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"0x45"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eip-191"},"EIP-191")),(0,l.kt)("td",{parentName:"tr",align:null},"personal_sign messages")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"signed_data - ",(0,l.kt)("inlineCode",{parentName:"li"},"0x19 <1 byte version> <version specific data> <data to sign>."))),(0,l.kt)("h2",{id:"eip-712"},"EIP-712"),(0,l.kt)("p",null,"\u7ed3\u6784\u5316\u7b7e\u540d\u6570\u636e"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"eth_signTypedData(address,typedData) - \u589e\u5f3a eth_sendTransaction \u548c eth_sign \u7684\u7b7e\u540d\u80fd\u529b",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'sign(keccak256("\\x19Ethereum Signed Message:\\n" + len(message) + message)))')))),(0,l.kt)("li",{parentName:"ul"},"domainSeparator = hashStruct(eip712Domain)")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"struct EIP712Domain {\n  string name;\n  string version;\n  uint256 chainId;//  EIP-155\n  address verifyingContract;\n  bytes32 salt;\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="TypedData"',title:'"TypedData"'},'{\n  "type": "object",\n  "properties": {\n    "types": {\n      "type": "object",\n      "properties": {\n        "EIP712Domain": { "type": "array" }\n      },\n      "additionalProperties": {\n        "type": "array",\n        "items": {\n          "type": "object",\n          "properties": {\n            "name": { "type": "string" },\n            "type": { "type": "string" }\n          },\n          "required": ["name", "type"]\n        }\n      },\n      "required": ["EIP712Domain"]\n    },\n    "primaryType": { "type": "string" },\n    "domain": { "type": "object" },\n    "message": { "type": "object" }\n  },\n  "required": ["types", "primaryType", "domain", "message"]\n}\n')),(0,l.kt)("h2",{id:"eip-721"},"EIP-721"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"NFT \u6807\u51c6"),(0,l.kt)("li",{parentName:"ul"},"\u76f8\u5173 EIP",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#eip-2981"},"EIP-2981"),": NFT Royalty Standard")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},'/// ERC-165 0x80ac58cd.\ninterface ERC721 /* is ERC165 */ {\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\n\n    /// owner \u6709\u591a\u5c11\u4e2a NFT\n    function balanceOf(address _owner) external view returns (uint256);\n\n    /// NTF \u7684 owner\n    function ownerOf(uint256 _tokenId) external view returns (address);\n\n    /// \u8f6c\u8ba9 NTF \u6240\u6709\u6743\n    /// \u4f1a\u786e\u8ba4 _to \u5b9e\u73b0 IERC721Receiver - onERC721Received(address,address,uint256,bytes)\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes data) external payable;\n\n    /// \u540c\u5e26 data \u7684 safeTransferFrom - data \u9ed8\u8ba4\u4e3a \u7a7a\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /// \u8f6c\u8ba9 NTF \u6240\u6709\u6743\n    /// msg.sender \u4e3a owner \u6216 \u6279\u51c6\u5730\u5740\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\n\n    /// \u6279\u51c6 _approved \u8fdb\u884c\u64cd\u4f5c\n    /// \u4e8b\u4ef6: Approval\n    function approve(address _approved, uint256 _tokenId) external payable;\n\n    /// \u6279\u51c6 _operator \u64cd\u4f5c\u6240\u6709 NTF\n    /// \u4e8b\u4ef6: ApprovalForAll\n    function setApprovalForAll(address _operator, bool _approved) external;\n\n    function getApproved(uint256 _tokenId) external view returns (address);\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\n}\n\n/// ERC-165 0x150b7a02.\ninterface ERC721TokenReceiver {\n    /// transfer \u5230\u5408\u7ea6\u7684\u56de\u8c03\n    function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) external returns(bytes4);\n}\n\n/// \u53ef\u9009\u5143\u6570\u636e\u6269\u5c55\u63a5\u53e3\n/// ERC-165 0x5b5e139f\ninterface ERC721Metadata /* is ERC721 */ {\n    /// @notice A descriptive name for a collection of NFTs in this contract\n    function name() external view returns (string _name);\n\n    /// @notice An abbreviated name for NFTs in this contract\n    function symbol() external view returns (string _symbol);\n\n    /// @notice A distinct Uniform Resource Identifier (URI) for a given asset.\n    /// @dev Throws if `_tokenId` is not a valid NFT. URIs are defined in RFC\n    ///  3986. The URI may point to a JSON file that conforms to the "ERC721\n    ///  Metadata JSON Schema".\n    function tokenURI(uint256 _tokenId) external view returns (string);\n}\n\n/// @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\n///  Note: the ERC-165 identifier for this interface is 0x780e9d63.\ninterface ERC721Enumerable /* is ERC721 */ {\n    /// @notice Count NFTs tracked by this contract\n    /// @return A count of valid NFTs tracked by this contract, where each one of\n    ///  them has an assigned and queryable owner not equal to the zero address\n    function totalSupply() external view returns (uint256);\n\n    /// @notice Enumerate valid NFTs\n    /// @dev Throws if `_index` >= `totalSupply()`.\n    /// @param _index A counter less than `totalSupply()`\n    /// @return The token identifier for the `_index`th NFT,\n    ///  (sort order not specified)\n    function tokenByIndex(uint256 _index) external view returns (uint256);\n\n    /// @notice Enumerate NFTs assigned to an owner\n    /// @dev Throws if `_index` >= `balanceOf(_owner)` or if\n    ///  `_owner` is the zero address, representing invalid NFTs.\n    /// @param _owner An address where we are interested in NFTs owned by them\n    /// @param _index A counter less than `balanceOf(_owner)`\n    /// @return The token identifier for the `_index`th NFT assigned to `_owner`,\n    ///   (sort order not specified)\n    function tokenOfOwnerByIndex(address _owner, uint256 _index) external view returns (uint256);\n}\n')),(0,l.kt)("h2",{id:"eip-777"},"EIP-777"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"interface ERC777Token {\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address holder) external view returns (uint256);\n    function granularity() external view returns (uint256);\n\n    function defaultOperators() external view returns (address[] memory);\n    function isOperatorFor(\n        address operator,\n        address holder\n    ) external view returns (bool);\n    function authorizeOperator(address operator) external;\n    function revokeOperator(address operator) external;\n\n    function send(address to, uint256 amount, bytes calldata data) external;\n    function operatorSend(\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    function burn(uint256 amount, bytes calldata data) external;\n    function operatorBurn(\n        address from,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n    event Minted(\n        address indexed operator,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n    event Burned(\n        address indexed operator,\n        address indexed from,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n    event AuthorizedOperator(\n        address indexed operator,\n        address indexed holder\n    );\n    event RevokedOperator(address indexed operator, address indexed holder);\n}\n")),(0,l.kt)("h2",{id:"erc-1155"},"ERC-1155"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function balanceOfBatch(\n    address[] calldata _owners,\n    uint256[] calldata _ids\n) external view returns (uint256[] memory);\n\nfunction setApprovalForAll(\n    address _operator,\n    bool _approved\n) external;\n\nfunction isApprovedForAll(\n    address _owner,\n    address _operator\n) external view returns (bool);\n\nfunction onERC1155BatchReceived(\n    address _operator,\n    address _from,\n    uint256[] calldata _ids,\n    uint256[] calldata _values,\n    bytes calldata _data\n) external returns(bytes4);\n\n")),(0,l.kt)("h2",{id:"eip-1167"},"EIP-1167"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"contract ThingFactory is Ownable, CloneFactory {\n\n  address public libraryAddress;\n\n  event ThingCreated(address newThingAddress);\n\n  function ThingFactory(address _libraryAddress) public {\n    libraryAddress = _libraryAddress;\n  }\n\n  function setLibraryAddress(address _libraryAddress) public onlyOwner {\n    libraryAddress = _libraryAddress;\n  }\n\n  function createThing(string _name, uint _value) public onlyOwner {\n    // \u521b\u5efa\u526f\u672c\u4f60\n    address clone = createClone(libraryAddress);\n    Thing(clone).init(_name, _value);\n    ThingCreated(clone);\n  }\n}\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/optionality/clone-factory"},"optionality/clone-factory"))),(0,l.kt)("h2",{id:"eip-1363"},"EIP-1363"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"payable"),(0,l.kt)("li",{parentName:"ul"},"ERC-20")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},'interface ERC1363 /* is ERC20, ERC165 */ {\n  /**\n   * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @return true unless throwing\n   */\n  function transferAndCall(address to, uint256 value) external returns (bool);\n\n  /**\n   * @notice Transfer tokens from `msg.sender` to another address and then call `onTransferReceived` on receiver\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @param data bytes Additional data with no specified format, sent in call to `to`\n   * @return true unless throwing\n   */\n  function transferAndCall(address to, uint256 value, bytes memory data) external returns (bool);\n\n  /**\n   * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @return true unless throwing\n   */\n  function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n\n  /**\n   * @notice Transfer tokens from one address to another and then call `onTransferReceived` on receiver\n   * @param from address The address which you want to send tokens from\n   * @param to address The address which you want to transfer to\n   * @param value uint256 The amount of tokens to be transferred\n   * @param data bytes Additional data with no specified format, sent in call to `to`\n   * @return true unless throwing\n   */\n  function transferFromAndCall(address from, address to, uint256 value, bytes memory data) external returns (bool);\n\n  /**\n   * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n   * and then call `onApprovalReceived` on spender.\n   * @param spender address The address which will spend the funds\n   * @param value uint256 The amount of tokens to be spent\n   */\n  function approveAndCall(address spender, uint256 value) external returns (bool);\n\n  /**\n   * @notice Approve the passed address to spend the specified amount of tokens on behalf of msg.sender\n   * and then call `onApprovalReceived` on spender.\n   * @param spender address The address which will spend the funds\n   * @param value uint256 The amount of tokens to be spent\n   * @param data bytes Additional data with no specified format, sent in call to `spender`\n   */\n  function approveAndCall(address spender, uint256 value, bytes memory data) external returns (bool);\n}\n\ninterface ERC20 {\n  function totalSupply() external view returns (uint256);\n  function balanceOf(address account) external view returns (uint256);\n  function transfer(address recipient, uint256 amount) external returns (bool);\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n  function allowance(address owner, address spender) external view returns (uint256);\n  function approve(address spender, uint256 amount) external returns (bool);\n  event Transfer(address indexed from, address indexed to, uint256 value);\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\ninterface ERC165 {\n  function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n\n/**\n * @title ERC1363Receiver interface\n * @dev Interface for any contract that wants to support `transferAndCall` or `transferFromAndCall`\n *  from ERC1363 token contracts.\n */\ninterface ERC1363Receiver {\n  /*\n   * Note: the ERC-165 identifier for this interface is 0x88a7ca5c.\n   * 0x88a7ca5c === bytes4(keccak256("onTransferReceived(address,address,uint256,bytes)"))\n   */\n\n  /**\n   * @notice Handle the receipt of ERC1363 tokens\n   * @dev Any ERC1363 smart contract calls this function on the recipient\n   * after a `transfer` or a `transferFrom`. This function MAY throw to revert and reject the\n   * transfer. Return of other than the magic value MUST result in the\n   * transaction being reverted.\n   * Note: the token contract address is always the message sender.\n   * @param operator address The address which called `transferAndCall` or `transferFromAndCall` function\n   * @param from address The address which are token transferred from\n   * @param value uint256 The amount of tokens transferred\n   * @param data bytes Additional data with no specified format\n   * @return `bytes4(keccak256("onTransferReceived(address,address,uint256,bytes)"))`\n   *  unless throwing\n   */\n  function onTransferReceived(address operator, address from, uint256 value, bytes memory data) external returns (bytes4);\n}\n\n/**\n * @title ERC1363Spender interface\n * @dev Interface for any contract that wants to support `approveAndCall`\n *  from ERC1363 token contracts.\n */\ninterface ERC1363Spender {\n  /*\n   * Note: the ERC-165 identifier for this interface is 0x7b04a2d0.\n   * 0x7b04a2d0 === bytes4(keccak256("onApprovalReceived(address,uint256,bytes)"))\n   */\n\n  /**\n   * @notice Handle the approval of ERC1363 tokens\n   * @dev Any ERC1363 smart contract calls this function on the recipient\n   * after an `approve`. This function MAY throw to revert and reject the\n   * approval. Return of other than the magic value MUST result in the\n   * transaction being reverted.\n   * Note: the token contract address is always the message sender.\n   * @param owner address The address which called `approveAndCall` function\n   * @param value uint256 The amount of tokens to be spent\n   * @param data bytes Additional data with no specified format\n   * @return `bytes4(keccak256("onApprovalReceived(address,uint256,bytes)"))`\n   *  unless throwing\n   */\n  function onApprovalReceived(address owner, uint256 value, bytes memory data) external returns (bytes4);\n}\n')),(0,l.kt)("h2",{id:"eip-1820"},"EIP-1820"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ERC1820Registry"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://etherscan.io/address/0x1820a4b7618bde71dce8cdc73aab6c95905fad24"},"0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24")),(0,l.kt)("li",{parentName:"ul"},"interfaceHash"),(0,l.kt)("li",{parentName:"ul"},"\u5b9e\u73b0 - \u8fd4\u56de ERC1820_ACCEPT_MAGIC=",(0,l.kt)("inlineCode",{parentName:"li"},'keccak256(abi.encodePacked("ERC1820_ACCEPT_MAGIC"))')),(0,l.kt)("li",{parentName:"ul"},"ERC###XXXXX",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"###")," \u4e3a\u7f16\u53f7"),(0,l.kt)("li",{parentName:"ul"},"XXXXX \u4e3a\u63a5\u53e3\u540d\u5b57")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'keccak256("ERC20Token")\nkeccak256("ERC777Token")\nkeccak256("ERC777TokensSender")\nkeccak256("ERC777TokensRecipient")\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5b9e\u73b0\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"interface _implementer {\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32);\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u6ce8\u518c\u4e2d\u5fc3")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"setInterfaceImplementer - \u4e3a\u5730\u5740\u8bbe\u7f6e\u5b9e\u73b0",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"_addr")," \u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"_implementer")," \u4e0d\u540c\u65f6 \u5219 ",(0,l.kt)("inlineCode",{parentName:"li"},"_implementer")," \u5fc5\u987b\u5b9e\u73b0 ERC1820ImplementerInterface")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"interface ERC1820Registry{\n  event InterfaceImplementerSet(address indexed addr, bytes32 indexed interfaceHash, address indexed implementer);\n  event ManagerChanged(address indexed addr, address indexed newManager);\n\n  function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address);\n  function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external;\n  function setManager(address _addr, address _newManager) external;\n  function getManager(address _addr) public view returns(address);\n  function interfaceHash(string calldata _interfaceName) external pure returns(bytes32);\n}\n")),(0,l.kt)("h2",{id:"eip-2612"},"EIP-2612"),(0,l.kt)("p",null,"transaction-less token approvals"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external\nfunction nonces(address owner) external view returns (uint)\nfunction DOMAIN_SEPARATOR() external view returns (bytes32)\n")),(0,l.kt)("h2",{id:"eip-2981"},"EIP-2981"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u83b7\u53d6 NFT \u7248\u7a0e\u4fe1\u606f",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"receiver \u63a5\u53d7\u4eba"),(0,l.kt)("li",{parentName:"ul"},"royaltyAmount \u552e\u4ef7\u7248\u7a0e"))),(0,l.kt)("li",{parentName:"ul"},"IERC165 0x2a55205a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-solidity"},"interface IERC2981 is IERC165 {\n    function royaltyInfo(\n        uint256 _tokenId,\n        uint256 _salePrice\n    ) external view returns (\n        address receiver,\n        uint256 royaltyAmount\n    );\n}\n")),(0,l.kt)("h1",{id:"eip-3722"},"EIP-3722"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://github.com/onPoster"},"https://github.com/onPoster"))),(0,l.kt)("h2",{id:"eip-4626"},"EIP-4626"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ropsten ",(0,l.kt)("a",{parentName:"li",href:"https://ropsten.etherscan.io/address/0xba12222222228d8ba445958a75a0704d566bf2c8#code="},"0xba12222222228d8ba445958a75a0704d566bf2c8#code="))),(0,l.kt)("h1",{id:"faq"},"FAQ"),(0,l.kt)("h2",{id:"erc-20-vs-erc-777"},"ERC-20 vs ERC-777"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ERC-20",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u57fa\u7840\u53ef\u7528"),(0,l.kt)("li",{parentName:"ul"},"tranfer \u5730\u5740\u9519\u8bef\u53ef\u80fd\u4e22\u5931"))),(0,l.kt)("li",{parentName:"ul"},"ERC-777",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"made aware - \u9a8c\u8bc1\u63a5\u6536\u8005")))),(0,l.kt)("h2",{id:"erc-721-vs-erc-1155"},"ERC-721 vs ERC-1155"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ERC-721 - NFT \u6807\u51c6 - non-fungible",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e13\u7528\u4e8e NFT - \u4fe1\u606f\u5b8c\u5584"))),(0,l.kt)("li",{parentName:"ul"},"ERC-1155 - \u591a Token \u6807\u51c6 - \u53ef\u5b9e\u73b0 NFT - semi-fungible",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4e00\u4e2a\u5408\u7ea6\u652f\u6301\u591a\u79cd Token - \u4e0d\u4ec5\u9650\u4e8e NFT"),(0,l.kt)("li",{parentName:"ul"},"semi-fungible - \u652f\u6301 Token-NFT \u4e92\u6362"),(0,l.kt)("li",{parentName:"ul"},"\u6279\u91cf\u64cd\u4f5c"),(0,l.kt)("li",{parentName:"ul"},"\u6bd4 ERC-721 \u5c11\u5b58\u50a8\u4e00\u4e9b\u4fe1\u606f"),(0,l.kt)("li",{parentName:"ul"},"low gas fee")))))}c.isMDXComponent=!0}}]);