"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[45934],{49613:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=p(r),d=a,f=s["".concat(c,".").concat(d)]||s[d]||m[d]||i;return r?n.createElement(f,o(o({ref:t},u),{},{components:r})):n.createElement(f,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},70764:function(e,t,r){r.r(t),r.d(t,{assets:function(){return y},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return s},metadata:function(){return f},toc:function(){return b}});var n=r(49613),a=Object.defineProperty,i=Object.defineProperties,o=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,c=Object.prototype.hasOwnProperty,p=Object.prototype.propertyIsEnumerable,u=(e,t,r)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,m=(e,t)=>{for(var r in t||(t={}))c.call(t,r)&&u(e,r,t[r]);if(l)for(var r of l(t))p.call(t,r)&&u(e,r,t[r]);return e};const s={title:"QrCode"},d="QrCode",f={unversionedId:"dev/tech/qrcode",id:"dev/tech/qrcode",title:"QrCode",description:"Scanner/Reader",source:"@site/../notes/dev/tech/qrcode.md",sourceDirName:"dev/tech",slug:"/dev/tech/qrcode",permalink:"/notes/dev/tech/qrcode",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/dev/tech/qrcode.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1680629704,formattedLastUpdatedAt:"Apr 4, 2023",frontMatter:{title:"QrCode"},sidebar:"docs",previous:{title:"Software Awesome",permalink:"/notes/dev/software-awesome"},next:{title:"ijhttp",permalink:"/notes/dev/testing/ijhttp"}},y={},b=[{value:"Scanner/Reader",id:"scannerreader",level:2}],g={toc:b};function h(e){var t,r=e,{components:a}=r,u=((e,t)=>{var r={};for(var n in e)c.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&p.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=m(m({},g),u),i(t,o({components:a,mdxType:"MDXLayout"}))),(0,n.kt)("h1",m({},{id:"qrcode"}),"QrCode"),(0,n.kt)("h2",m({},{id:"scannerreader"}),"Scanner/Reader"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/zxing/zxing"}),"zxing"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Apache 2.0, Java"))),(0,n.kt)("li",{parentName:"ul"},"Command",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/ZBar/ZBar"}),"ZBar/ZBar"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"2012"),(0,n.kt)("li",{parentName:"ul"},"zbarimg"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/dmtx/libdmtx"}),"libdmtx"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"dmtxread"))))),(0,n.kt)("li",{parentName:"ul"},"JS",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/zxing-js/library"}),"@zxing/library"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u529f\u80fd\u6700\u591a"),(0,n.kt)("li",{parentName:"ul"},"NodeJS \u9700\u8981 jimp \u63d0\u53d6\u4eae\u5ea6\u901a\u9053"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",m({parentName:"li"},{href:"https://github.com/nimiq/qr-scanner"}),"nimiq/qr-scanner"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u4e0d\u80fd NodeJS"))),(0,n.kt)("li",{parentName:"ul"},"qrcode-reader",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u5f88\u5c0f"),(0,n.kt)("li",{parentName:"ul"},"NodeJS \u53ef\u76f4\u63a5\u7528 jimp \u6570\u636e"))),(0,n.kt)("li",{parentName:"ul"},"jsqr",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"\u4e0d\u652f\u6301\u591a\u4e2a\u4e8c\u7ef4\u7801")))))),(0,n.kt)("pre",null,(0,n.kt)("code",m({parentName:"pre"},{className:"language-ts"}),"const img = await jimp.read('./qrcode.jpg');\nconst formats = [BarcodeFormat.QR_CODE];\nconst hints = new Map();\nhints.set(DecodeHintType.POSSIBLE_FORMATS, formats);\nhints.set(DecodeHintType.TRY_HARDER, true);\nconst reader = new MultiFormatReader();\nreader.setHints(hints);\n\nconst imageData = img.bitmap;\nconst len = imageData.width * imageData.height;\nconst luminancesUint8Array = new Uint8ClampedArray(len);\n\nfor (let i = 0; i < len; i++) {\n  // (0.2126R + 0.7152G + 0.0722*B))\n  // luminancesUint8Array[i] = ((imageData.data[i*4]*2+imageData.data[i*4+1]*7+imageData.data[i*4+2]) / 10) & 0xFF;\n  luminancesUint8Array[i] =\n    ((imageData.data[i * 4] + imageData.data[i * 4 + 1] * 2 + imageData.data[i * 4 + 2]) / 4) & 0xff;\n}\n\nconst luminanceSource = new RGBLuminanceSource(luminancesUint8Array, imageData.width, imageData.height);\nconst binaryBitmap = new BinaryBitmap(new HybridBinarizer(luminanceSource));\nconst decoded = reader.decode(binaryBitmap);\n")))}h.isMDXComponent=!0}}]);