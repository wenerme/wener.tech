"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[52128],{49613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return b}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),i=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=i(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=i(n),m=a,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return n?r.createElement(b,o(o({ref:t},u),{},{components:n})):r.createElement(b,o({ref:t},u))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:a,o[1]=c;for(var i=2;i<l;i++)o[i]=n[i];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},19439:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return f},default:function(){return k},frontMatter:function(){return b},metadata:function(){return y},toc:function(){return v}});var r=n(49613),a=Object.defineProperty,l=Object.defineProperties,o=Object.getOwnPropertyDescriptors,c=Object.getOwnPropertySymbols,s=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable,u=(e,t,n)=>t in e?a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,p=(e,t)=>{for(var n in t||(t={}))s.call(t,n)&&u(e,n,t[n]);if(c)for(var n of c(t))i.call(t,n)&&u(e,n,t[n]);return e},d=(e,t)=>l(e,o(t)),m=(e,t)=>{var n={};for(var r in e)s.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&c)for(var r of c(e))t.indexOf(r)<0&&i.call(e,r)&&(n[r]=e[r]);return n};const b={tags:["Devlopment"]},f="ScyllaDB \u5f00\u53d1",y={unversionedId:"db/column/scylladb/scylladb-dev",id:"db/column/scylladb/scylladb-dev",title:"ScyllaDB \u5f00\u53d1",description:"- Batch",source:"@site/../notes/db/column/scylladb/scylladb-dev.md",sourceDirName:"db/column/scylladb",slug:"/db/column/scylladb/dev",permalink:"/notes/db/column/scylladb/dev",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/notes/../notes/db/column/scylladb/scylladb-dev.md",tags:[{label:"Devlopment",permalink:"/notes/tags/devlopment"}],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1690946986,formattedLastUpdatedAt:"Aug 2, 2023",frontMatter:{tags:["Devlopment"]},sidebar:"docs",previous:{title:"ScyllaDB \u914d\u7f6e",permalink:"/notes/db/column/scylladb/conf"},next:{title:"Database Awesome",permalink:"/notes/db/awesome"}},g={},v=[{value:"NodeJS",id:"nodejs",level:2}],O={toc:v},w="wrapper";function k(e){var t=e,{components:n}=t,a=m(t,["components"]);return(0,r.kt)(w,d(p(p({},O),a),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",p({},{id:"scylladb-\u5f00\u53d1"}),"ScyllaDB \u5f00\u53d1"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Batch",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"\u5c3d\u91cf\u786e\u4fdd\u5728\u76f8\u540c\u5206\u533a"),(0,r.kt)("li",{parentName:"ul"},"max_mutation_size_in_kb",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"commitlog_segment_size_in_mb \u81f3\u5c11\u4e3a 2*max_mutation_size_in_kb/1024"))),(0,r.kt)("li",{parentName:"ul"},"batch_size_fail_threshold_in_kb=50")))),(0,r.kt)("h2",p({},{id:"nodejs"}),"NodeJS"),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"pnpm add cassandra-driver\npnpm add -D tsx typescript @types/node\n\ndocker exec -it scylla nodetool status\ndocker exec -it scylla cqlsh -e \"CREATE KEYSPACE catalog WITH REPLICATION = { 'class' : 'NetworkTopologyStrategy','datacenter1':1 }\"\ndocker exec -it scylla cqlsh -k catalog -e \"CREATE TABLE users (name text, age int, PRIMARY KEY(name))\"\n")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-js",metastring:'title="test.ts"',title:'"test.ts"'}),"import { Client } from 'cassandra-driver';\n\nconst client = new Client({\n  contactPoints: ['localhost'],\n  localDataCenter: 'datacenter1',\n  keyspace: 'catalog',\n  // \u9ed8\u8ba4\u8d26\u53f7\u5bc6\u7801\n  credentials: {\n    username: 'cassandra',\n    password: 'cassandra',\n  },\n});\n\nawait client.batch(\n  [\n    {\n      query: 'insert into users (name, age) values (?,?)',\n      params: ['test', 1],\n    },\n    {\n      query: 'insert into users (name, age) values (?,?)',\n      params: ['test2', 1],\n    },\n    { query: 'update users set age = ? where name = ?', params: [2, 'test2'] },\n  ],\n  { prepare: true },\n);\n\nconsole.log((await client.execute(`SELECT * FROM users WHERE name = ?`, ['test2'])).rows);\nconsole.log((await client.execute(`SELECT count(1) FROM users`, ['test2'])).rows[0].count);\n\nprocess.exit(0);\n")),(0,r.kt)("pre",null,(0,r.kt)("code",p({parentName:"pre"},{className:"language-bash"}),"pnpm tsx test.ts\n")))}k.isMDXComponent=!0}}]);