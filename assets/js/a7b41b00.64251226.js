"use strict";(self.webpackChunkwener_website=self.webpackChunkwener_website||[]).push([[9982],{49613:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return m}});var n=r(59496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),f=u(r),m=a,d=f["".concat(p,".").concat(m)]||f[m]||c[m]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},81672:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var n=r(96600),a=r(27279),o=(r(59496),r(49613)),i=["components"],l={title:"KEDA"},p="KEDA",u={unversionedId:"devops/kubernetes/platform/keda",id:"devops/kubernetes/platform/keda",title:"KEDA",description:"- kedacore/keda",source:"@site/../notes/devops/kubernetes/platform/keda.md",sourceDirName:"devops/kubernetes/platform",slug:"/devops/kubernetes/platform/keda",permalink:"/notes/devops/kubernetes/platform/keda",draft:!1,editUrl:"https://github.com/wenerme/wener/edit/master/../notes/devops/kubernetes/platform/keda.md",tags:[],version:"current",lastUpdatedBy:"wener",lastUpdatedAt:1663813e3,formattedLastUpdatedAt:"Sep 22, 2022",frontMatter:{title:"KEDA"},sidebar:"docs",previous:{title:"Istio \u670d\u52a1\u7f51\u683c",permalink:"/notes/devops/kubernetes/platform/istio"},next:{title:"Knative",permalink:"/notes/devops/kubernetes/platform/knative"}},s={},c=[],f={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"keda"},"KEDA"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/kedacore/keda"},"kedacore/keda"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Kubernetes-based Event Driven Autoscaling"),(0,o.kt)("li",{parentName:"ul"},"\u89d2\u8272\u7b49\u540c Horizontal Pod Autoscaler"),(0,o.kt)("li",{parentName:"ul"},"scaler:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"CPU, Memory, Cron"),(0,o.kt)("li",{parentName:"ul"},"PostgreSQL, MySQL, Cassandra, Elasticsearch"),(0,o.kt)("li",{parentName:"ul"},"Nats, Kafka, Rabbit MQ, Redis List/Stream"),(0,o.kt)("li",{parentName:"ul"},"Prometheus, Metrics API, Graphite"))))),(0,o.kt)("li",{parentName:"ul"},"keda-operator"),(0,o.kt)("li",{parentName:"ul"},"keda-operator-metrics-apiserver")))}m.isMDXComponent=!0}}]);