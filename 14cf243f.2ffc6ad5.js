(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{625:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=u(n),b=r,d=m["".concat(i,".").concat(b)]||m[b]||p[b]||a;return n?o.a.createElement(d,c(c({ref:t},l),{},{components:n})):o.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(2),o=n(7),a=(n(0),n(625)),i={title:"Firecracker"},c={unversionedId:"os/virt/firecracker",id:"os/virt/firecracker",isDocsHomePage:!1,title:"Firecracker",description:"Firecracker",source:"@site/notes/os/virt/firecracker.md",slug:"/os/virt/firecracker",permalink:"/notes/os/virt/firecracker",editUrl:"https://github.com/wenerme/wener/edit/master/notes/os/virt/firecracker.md",version:"current"},s=[{value:"alpine",id:"alpine",children:[]},{value:"ubuntu",id:"ubuntu",children:[]},{value:"centos",id:"centos",children:[]},{value:"network",id:"network",children:[]},{value:"mount: mounting /dev/vda on /sysroot failed: No such device",id:"mount-mounting-devvda-on-sysroot-failed-no-such-device",children:[]}],l={rightToc:s};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"firecracker"},"Firecracker"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u662f\u4ec0\u4e48",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"VMM/Virtual Machine Manager"),Object(a.b)("li",{parentName:"ul"},"\u6700\u5c0f\u865a\u62df\u673a\u5b9e\u73b0 - \u6700\u521d\u7528\u4e8e serverless \u573a\u666f",Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"\u4ec5\u652f\u6301\u5fc5\u987b\u8bbe\u5907 virtio-net, virtio-block, virtio-vsock, serial console, minimal keyboard controller"),Object(a.b)("li",{parentName:"ul"},"< 125 ms \u542f\u52a8"),Object(a.b)("li",{parentName:"ul"},"< 5m \u521d\u59cb\u5185\u5b58\u5360\u7528"))),Object(a.b)("li",{parentName:"ul"},"\u57fa\u4e8e KVM \u7684 QEMU \u66ff\u4ee3\u54c1"),Object(a.b)("li",{parentName:"ul"},"Rust \u5b9e\u73b0"),Object(a.b)("li",{parentName:"ul"},"\u63d0\u4f9b REST \u63a7\u5236\u63a5\u53e3"),Object(a.b)("li",{parentName:"ul"},"Kernel 4.14+"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/firecracker-microvm/firecracker/blob/master/docs/api_requests/actions.md"}),"https://github.com/firecracker-microvm/firecracker/blob/master/docs/api_requests/actions.md")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/firecracker-microvm/firecracker/tree/master/docs"}),"https://github.com/firecracker-microvm/firecracker/tree/master/docs")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/firecracker-microvm/firectl"}),"firecracker-microvm/firectl"))),Object(a.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(a.b)("h5",{parentName:"div"},Object(a.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(a.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(a.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(a.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(a.b)("ul",{parentName:"div"},Object(a.b)("li",{parentName:"ul"},"\u6ca1\u6709\u7535\u6e90\u7ba1\u7406\uff0c\u56e0\u6b64\u4e0d\u652f\u6301\u91cd\u542f\uff0c\u4f1a\u76f4\u63a5\u9000\u51fa"),Object(a.b)("li",{parentName:"ul"},"alpine \u5185\u6838\u9700\u8981 boot-source.initrd_path => initramfs-virt"),Object(a.b)("li",{parentName:"ul"},"alpine netboot \u7684 initramfs-virt \u6ca1\u6709 ext4"),Object(a.b)("li",{parentName:"ul"},"\u7cfb\u7edf\u5185 poweroff \u6216 halt \u4e0d\u4f1a\u9000\u51fa - reboot \u4f1a"),Object(a.b)("li",{parentName:"ul"},"\u53ef\u4ee5\u53d1\u9001 SendCtrlAltDel \u9000\u51fa"),Object(a.b)("li",{parentName:"ul"},"\u4e0d\u652f\u6301 QCOW2 \u683c\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u914d\u5408 NDB \u4f7f\u7528")))),Object(a.b)("h2",{id:"alpine"},"alpine"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'# download\nlatest=$(basename $(curl -fsSLI -o /dev/null -w  %{url_effective} https://github.com/firecracker-microvm/firecracker/releases/latest))\ncurl -LOJ https://github.com/firecracker-microvm/firecracker/releases/download/${latest}/firecracker-${latest}-$(uname -m)\nmv firecracker-${latest}-$(uname -m) firecracker\nchmod +x firecracker\n\n# rootfs\n# =========\n# qemu-img create -f raw alpine.rootfs.ext4 1G\nfallocate -l 1G ubuntu.rootfs.ext4\nmkfs.ext4 ./alpine.rootfs.ext4\nmkdir /tmp/rootfs\nsudo mount alpine.rootfs.ext4 /tmp/rootfs\n\ncurl -OJ https://mirrors.aliyun.com/alpine/v3.12/releases/x86_64/alpine-minirootfs-3.12.0-x86_64.tar.gz\nsudo tar zxvf alpine-minirootfs-3.12.0-x86_64.tar.gz -C /tmp/rootfs/\n# for mirror\nsudo cp /etc/apk/repositories /tmp/rootfs/etc/apk/repositories\nsudo cp /etc/resolv.conf /tmp/rootfs/etc\nsudo chroot /tmp/rootfs/ /bin/sh\n\napk add alpine-base util-linux linux-virt haveged\nrc-update add haveged\necho root:root | chpasswd\nfor svc in devfs procfs sysfs; do ln -fs /etc/init.d/$svc /etc/runlevels/boot; done\nexit\n\nln -s agetty /etc/init.d/agetty.ttyS0\necho ttyS0 > /etc/securetty\nrc-update add agetty.ttyS0 default\n\n# this initramfs contain required ext4 module\nsudo cp /tmp/rootfs/boot/initramfs-virt initramfs-virt\nsudo cp /tmp/rootfs/boot/vmlinuz-virt vmlinuz-virt\n\nsudo umount /tmp/rootfs\n\n# kernel\n# ==========\ncurl -LOC- https://raw.githubusercontent.com/torvalds/linux/master/scripts/extract-vmlinux\nchmod +x extract-vmlinux\n./extract-vmlinux $PWD/vmlinuz-virt > vmlinux-virt\n\n# config & start\n# ==========\ncat <<CONF > alpine.json\n{\n  "boot-source": {\n    "initrd_path": "initramfs-virt",\n    "kernel_image_path": "vmlinux-virt",\n    "boot_args": "console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4"\n  },\n  "drives": [\n    {\n      "drive_id": "rootfs",\n      "path_on_host": "alpine.rootfs.ext4",\n      "is_root_device": true,\n      "is_read_only": false\n    }\n  ],\n  "machine-config": {\n    "vcpu_count": 1,\n    "mem_size_mib": 1024,\n    "ht_enabled": false\n  }\n}\nCONF\n\n./firecracker --api-sock /tmp/firecracker.socket --config-file alpine.json\n\n# exit\n# ==========\n# api request\ncurl --unix-socket /tmp/firecracker.socket -i \\\n    -X PUT "http://localhost/actions" \\\n    -H  "accept: application/json" \\\n    -H  "Content-Type: application/json" \\\n    -d \'{"action_type": "SendCtrlAltDel"}\'\n# in vm\nreboot\n\n# \u68c0\u6d4b KVM \u652f\u6301\n[ -r /dev/kvm ] && [ -w /dev/kvm ] && echo "OK" || echo "FAIL"\n')),Object(a.b)("h2",{id:"ubuntu"},"ubuntu"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'curl -LO http://cdimage.ubuntu.com/ubuntu-base/releases/20.04/release/ubuntu-base-20.04.1-base-amd64.tar.gz\n\nfallocate -l 1G ubuntu.rootfs.ext4\nsudo mkfs.ext4 ubuntu.rootfs.ext4\n\nmkdir /tmp/rootfs\nsudo mount ubuntu.rootfs.ext4 /tmp/rootfs\nsudo tar -xzvf ubuntu-base-20.04.1-base-amd64.tar.gz -C /tmp/rootfs\nsudo cp /etc/resolv.conf /tmp/rootfs/etc/\nsudo chroot /tmp/rootfs/ /bin/bash\n\napt update\napt install linux-image-kvm -y\napt install init -y\nupdate-initramfs -u\necho root:root | chpasswd\necho ttyS0 > /etc/securetty\nsystemctl enable serial-getty@ttyS0.service\n\nexit\n\nsudo cp /tmp/rootfs/boot/initrd.img .\nsudo cp /tmp/rootfs/boot/vmlinuz .\n\nsudo umount /tmp/rootfs\n\nsudo chown $USER vmlinuz\n./extract-vmlinux $PWD/vmlinuz > vmlinux\n\ncat <<CONF > ubuntu.json\n{\n  "boot-source": {\n    "initrd_path": "initrd.img",\n    "kernel_image_path": "vmlinux",\n    "boot_args": "console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4"\n  },\n  "drives": [\n    {\n      "drive_id": "rootfs",\n      "path_on_host": "alpine.rootfs.ext4",\n      "is_root_device": true,\n      "is_read_only": false\n    }\n  ],\n  "machine-config": {\n    "vcpu_count": 1,\n    "mem_size_mib": 1024,\n    "ht_enabled": false\n  }\n}\nCONF\n\n./firecracker --api-sock /tmp/firecracker.socket --config-file ubuntu.json\n')),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"# https://packages.debian.org/sid/linux-image-amd64\n")),Object(a.b)("h2",{id:"centos"},"centos"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),'# https://mirrors.aliyun.com/centos/8/BaseOS/x86_64/os/images/pxeboot/\ncurl --remote-name-all -OC- https://mirrors.aliyun.com/centos/8/BaseOS/x86_64/os/images/pxeboot/{initrd.img,vmlinuz}\n\nextract-vmlinux ./vmlinuz > vmlinux\n\ncat <<CONF > centos.json\n{\n  "boot-source": {\n    "initrd_path": "initrd.img",\n    "kernel_image_path": "vmlinux",\n    "boot_args": "console=ttyS0 reboot=k panic=1 pci=off modules=virtio_mmio,ext4 rootfstype=ext4"\n  },\n  "drives": [\n    {\n      "drive_id": "rootfs",\n      "path_on_host": "centos.rootfs.ext4",\n      "is_root_device": true,\n      "is_read_only": false\n    }\n  ],\n  "machine-config": {\n    "vcpu_count": 1,\n    "mem_size_mib": 1024,\n    "ht_enabled": false\n  }\n}\nCONF\n\nrm /tmp/firecracker.socket;firecracker --api-sock /tmp/firecracker.socket --config-file centos.json\n')),Object(a.b)("h1",{id:"firectl"},"firectl"),Object(a.b)("h2",{id:"network"},"network"),Object(a.b)("p",null,Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/firecracker-microvm/firecracker/blob/master/docs/network-setup.md"}),"https://github.com/firecracker-microvm/firecracker/blob/master/docs/network-setup.md")),Object(a.b)("h1",{id:"faq"},"FAQ"),Object(a.b)("h2",{id:"mount-mounting-devvda-on-sysroot-failed-no-such-device"},"mount: mounting /dev/vda on /sysroot failed: No such device"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u53ef\u80fd\u4e0d\u652f\u6301 ext4"),Object(a.b)("li",{parentName:"ul"},"cat /proc/filesystem")))}u.isMDXComponent=!0}}]);