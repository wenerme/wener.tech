(window.webpackJsonp=window.webpackJsonp||[]).push([[449],{509:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return b}));var a=t(2),i=t(7),l=(t(0),t(746)),r={id:"dialplan",title:"\u62e8\u53f7\u8ba1\u5212"},o={unversionedId:"voip/asterisk/dialplan",id:"voip/asterisk/dialplan",isDocsHomePage:!1,title:"\u62e8\u53f7\u8ba1\u5212",description:"Asterisk Dialplan",source:"@site/notes/voip/asterisk/asterisk-dialplain.md",slug:"/voip/asterisk/dialplan",permalink:"/notes/voip/asterisk/dialplan",editUrl:"https://github.com/wenerme/wener/edit/master/notes/voip/asterisk/asterisk-dialplain.md",version:"current",sidebar:"docs",previous:{title:"Asterisk \u914d\u7f6e",permalink:"/notes/voip/asterisk/conf"},next:{title:"Asterisk \u7f16\u7801",permalink:"/notes/voip/asterisk/codec"}},c=[{value:"Tips",id:"tips",children:[]},{value:"Command",id:"command",children:[{value:"AEL",id:"ael",children:[]}]},{value:"Applications",id:"applications",children:[]},{value:"Dial",id:"dial",children:[{value:"Dial Help",id:"dial-help",children:[]}]}],s={rightToc:c};function b(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"asterisk-dialplan"},"Asterisk Dialplan"),Object(l.b)("h2",{id:"tips"},"Tips"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"dialplan reload")," \u91cd\u8f7d\u914d\u7f6e"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"dialplan show 88888888@from-app")," \u6d4b\u8bd5\u5339\u914d"),Object(l.b)("li",{parentName:"ul"},"cointext \u540d\u5b57\u957f\u5ea6\u4e3a 80, \u4f46\u6709\u6700\u540e\u4e00\u4f4d null, \u6240\u4ee5\u662f 79"),Object(l.b)("li",{parentName:"ul"},"\u907f\u514d\u4f7f\u7528  ",Object(l.b)("inlineCode",{parentName:"li"},"[general]"),", ",Object(l.b)("inlineCode",{parentName:"li"},"[default]"),", \u548c ",Object(l.b)("inlineCode",{parentName:"li"},"[globals]")," \u4f5c\u4e3a\u540d\u5b57"),Object(l.b)("li",{parentName:"ul"},"channel \u4e2d context \u540d\u5b57\u662f\u901a\u9053\u5f00\u59cb\u7684\u70b9"),Object(l.b)("li",{parentName:"ul"},"\u63a8\u8350\u4f7f\u7528\u975e\u6570\u5b57\u800c\u662f\u5177\u4f53\u542b\u4e49\u7684\u540d\u5b57\u4f5c\u4e3a\u4e0d\u53ef\u62e8\u53f7\u7684\u6269\u5c55\u540d"),Object(l.b)("li",{parentName:"ul"},"\u6a21\u5f0f\u5339\u914d\u89c4\u5219",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"_")," \u5f00\u59cb"),Object(l.b)("li",{parentName:"ul"},"X = ",Object(l.b)("inlineCode",{parentName:"li"},"[0-9]"),", Z = ",Object(l.b)("inlineCode",{parentName:"li"},"[1-9]"),", N = ",Object(l.b)("inlineCode",{parentName:"li"},"[2-9]"),", ",Object(l.b)("inlineCode",{parentName:"li"},"[15-7]")," = 1|5|6|7"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},". = .*"),", ",Object(l.b)("inlineCode",{parentName:"li"},"! = .+")))),Object(l.b)("li",{parentName:"ul"},"\u641c\u7d22\u987a\u5e8f",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Explicit extensions"),Object(l.b)("li",{parentName:"ul"},"Pattern match extensions"),Object(l.b)("li",{parentName:"ul"},"Includes"),Object(l.b)("li",{parentName:"ul"},"Switches"))),Object(l.b)("li",{parentName:"ul"},"\u7279\u6b8a\u6269\u5c55",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"a - Assistant extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u7c7b\u4f3c\u4e8e o, \u53ea\u6709\u5728\u5f55\u8bed\u97f3\u90ae\u4ef6\u65f6\u6309 ",Object(l.b)("inlineCode",{parentName:"li"},"*")," \u89e6\u53d1, \u4e3b\u8981\u7528\u4e8e\u8bbf\u95ee\u52a9\u624b."))),Object(l.b)("li",{parentName:"ul"},"e - Exception Catchall extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u7528\u4e8e\u6355\u83b7 ",Object(l.b)("inlineCode",{parentName:"li"},"i"),", ",Object(l.b)("inlineCode",{parentName:"li"},"t"),", ",Object(l.b)("inlineCode",{parentName:"li"},"T")," \u6269\u5c55. \u53ef\u4f7f\u7528 ",Object(l.b)("inlineCode",{parentName:"li"},"EXCEPTION")," \u6765\u83b7\u53d6\u5230\u5177\u4f53\u5f02\u5e38\u4fe1\u606f"))),Object(l.b)("li",{parentName:"ul"},"h - Hangup extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5728\u6302\u65ad\u540e\u4f1a\u89e6\u53d1"))),Object(l.b)("li",{parentName:"ul"},"i - Invalid entry extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5f53 ",Object(l.b)("inlineCode",{parentName:"li"},"Background"),", ",Object(l.b)("inlineCode",{parentName:"li"},"WaitExten")," \u7684\u8f93\u5165\u5728\u5f53\u524d\u4e0a\u4e0b\u6587\u4e2d\u627e\u4e0d\u5230\u5339\u914d\u7684\u6269\u5c55\u65f6\u89e6\u53d1"))),Object(l.b)("li",{parentName:"ul"},"o - Operator extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5f53\u5728\u5f55\u5236\u8bed\u8a00\u90ae\u4ef6\u65f6\u6309 ",Object(l.b)("inlineCode",{parentName:"li"},"0")," \u89e6\u53d1, \u4e3b\u8981\u7528\u4e8e\u8bbf\u95ee\u64cd\u4f5c\u5458"))),Object(l.b)("li",{parentName:"ul"},"s - Start extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5f53\u6a21\u62df\u901a\u8bdd\u63a5\u5165\u65f6\u89e6\u53d1, \u4e5f\u53ef\u4ee5\u518d\u5b8f\u4e2d\u4f7f\u7528"),Object(l.b)("li",{parentName:"ul"},"\u5e76\u4e0d\u662f\u7528\u4e8e\u6355\u83b7\u6240\u6709\u6269\u5c55, \u53ea\u662f\u7b80\u5355\u7684\u4ee3\u8868\u6a21\u62df\u901a\u8bdd\u548c\u5b8f\u7684\u5f00\u59cb."))),Object(l.b)("li",{parentName:"ul"},"t - Response timeout extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Background")," \u548c ",Object(l.b)("inlineCode",{parentName:"li"},"WaitExten")," \u65f6\u8d85\u65f6"))),Object(l.b)("li",{parentName:"ul"},"T - Absolute timeout extension",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"absolute")," \u8d85\u65f6\u65f6\u89e6\u53d1"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"core show function TIMEOUT")))))),Object(l.b)("li",{parentName:"ul"},"\u53d8\u91cf",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"${variable_name[:offset[:length]]}"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u88c1\u526a"),Object(l.b)("li",{parentName:"ul"},"offset,length \u53ef\u4ee5\u4e3a\u8d1f"))),Object(l.b)("li",{parentName:"ul"},"\u901a\u9053\u53d8\u91cf\u5728\u8f6c\u79fb\u540e,\u53d8\u91cf\u4e0d\u4f1a\u88ab\u7ee7\u627f",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"_")," \u5f00\u59cb\u7684\u53d8\u91cf\u4f1a\u5728\u5355\u6b21\u8f6c\u79fb\u540e\u5219\u4f1a\u5931\u6548"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"__")," \u5f00\u59cb\u7684\u53d8\u91cf\u4f1a\u5728\u8f6c\u79fb\u540e\u4e00\u76f4\u7ee7\u627f"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://wiki.asterisk.org/wiki/display/AST/Asterisk+Standard+Channel+Variables"}),"\u6807\u51c6\u7684\u901a\u9053\u53d8\u91cf"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CALLERID(name)"),", ",Object(l.b)("inlineCode",{parentName:"li"},"CALLERID(name)")," \u62e8\u53f7\u8005\u7684\u540d\u5b57\u548c\u53f7\u7801, \u5728 Dial \u4e4b\u524d"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CHANNEL")," \u5f53\u524d\u901a\u9053\u540d"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CONTEXT")," \u5f53\u524d\u4e0a\u4e0b\u6587"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"EXTEN")," \u5f53\u524d\u6269\u5c55"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ENV(VAR)")," \u73af\u5883\u53d8\u91cf"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"LEN(VAR)")," \u53d8\u91cf\u957f\u5ea6"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"PRIORITY")," \u5f53\u524d\u62e8\u53f7\u8ba1\u5212\u7684\u4f18\u5148\u7ea7"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"UNIQUEID")," \u5f53\u524d\u901a\u8bdd\u552f\u4e00\u6807\u8bc6\u7b26"))))),Object(l.b)("li",{parentName:"ul"},"\u8868\u8fbe\u5f0f",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"$[1+1]")),Object(l.b)("li",{parentName:"ul"},"\u64cd\u4f5c\u7b26",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"|"),", ",Object(l.b)("inlineCode",{parentName:"li"},"&"),", ",Object(l.b)("inlineCode",{parentName:"li"},"="),", ",Object(l.b)("inlineCode",{parentName:"li"},">="),", ",Object(l.b)("inlineCode",{parentName:"li"},"<="),", ",Object(l.b)("inlineCode",{parentName:"li"},"!="),", ",Object(l.b)("inlineCode",{parentName:"li"},">"),", ",Object(l.b)("inlineCode",{parentName:"li"},"<"),", ",Object(l.b)("inlineCode",{parentName:"li"},"+"),", ",Object(l.b)("inlineCode",{parentName:"li"},"-")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"! exp"),", ",Object(l.b)("inlineCode",{parentName:"li"},"- exp")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a : b")," \u5b57\u7b26\u4e32\u6b63\u5219\u5339\u914d",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u4ece\u5934\u5f00\u59cb\u5339\u914d"),Object(l.b)("li",{parentName:"ul"},"\u524d\u540e\u7684\u5f15\u53f7\u4f1a\u88ab\u53bb\u9664"),Object(l.b)("li",{parentName:"ul"},"\u5339\u914d\u6210\u529f, \u5982\u679c\u6709\u5b50\u8868\u8fbe\u5f0f, \u8fd4\u56de ",Object(l.b)("inlineCode",{parentName:"li"},"\\1"),", \u5426\u5219\u8fd4\u56de\u5339\u914d\u7684\u5b57\u7b26\u6570"),Object(l.b)("li",{parentName:"ul"},"\u5339\u914d\u5931\u8d25, \u5982\u679c\u6709\u5b57\u8868\u8fbe\u5f0f, \u8fd4\u56de ",Object(l.b)("inlineCode",{parentName:"li"},"null"),", \u5426\u5219\u8fd4\u56de 0"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a =~ b"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u540c ",Object(l.b)("inlineCode",{parentName:"li"},":"),", \u4f46\u4e0d\u4ece\u5934\u5f00\u59cb\u5339\u914d"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a ? b : c")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"a ~~ b"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5b57\u7b26\u4e32\u94fe\u63a5"),Object(l.b)("li",{parentName:"ul"},"\u4f1a\u53bb\u9664\u5f15\u53f7"))))),Object(l.b)("li",{parentName:"ul"},"\u6240\u6709\u7684\u6570\u5b57\u5747\u4e3a\u6d6e\u70b9\u6570, \u8868\u8fbe\u6d6e\u70b9\u6570\u5fc5\u987b\u8981\u4ee5 ",Object(l.b)("inlineCode",{parentName:"li"},"D.D")," \u7684\u5f62\u5f0f, \u8f6c\u6362\u4e3a\u6574\u6570 ",Object(l.b)("inlineCode",{parentName:"li"},"TRUNC")))),Object(l.b)("li",{parentName:"ul"},"\u53c2\u8003",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://wiki.asterisk.org/wiki/display/AST/Dialplan"}),"AST/Dialplan")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://www.voip-info.org/wiki/view/Asterisk+Expressions"}),"Asterisk Expressions"))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-conf"}),'; ==========\n; \u62e8\u53f7\u8ba1\u5212\u683c\u5f0f\n; ==========\nexten => name,priority,application([arg1[,arg2...]])\n; priority \u53ef\u4f7f\u7528 n \u66ff\u4ee3 2,3,4,5,6..., \u4f46 1 \u5fc5\u987b\u6307\u5b9a\n;   n \u4e5f\u53ef\u4ee5\u505a\u7b97\u672f\u8fd0\u7b97,\u4f8b\u5982 n+200, \u4f46\u4e0d\u63a8\u8350\u4f7f\u7528\n; \u76f8\u540c\u7684\u540d\u5b57\u53ef\u4ee5\u4f7f\u7528 same => \u66ff\u4ee3\n\nexten => 123,1,Answer()\n  same => n,do something\n  same => n,do something else\n  same => n,do one last thing\n  same => n,Hangup()\n\n; \u5728\u6269\u5c55\u4e2d\u53ef\u4ee5\u7ed9\u4f18\u5148\u7ea7\u6307\u5b9a\u6807\u7b7e,\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u540d\u5b57\u800c\u4e0d\u662f\u4e00\u4e2a\u6570\u5b57\u6765\u5f15\u7528\u4f18\u5148\u7ea7\nexten => 123,n(label),application()\n; \u5904\u7406\u6240\u6709\u65e0\u6548\u7684\u53f7\u7801\nexten => _.!,1,Verbose("Catch all for invalid numbers")\n; \u5904\u7406\u6240\u6709\u53f7\u7801\nexten => _.!,n,Verbose("Surprise - executed for all numbers!")\n\n; \u5f15\u5165\u5176\u4ed6\u4e0a\u4e0b\u6587\ninclude => context\n\n; \u53d8\u91cf\u7ee7\u627f\nexten => example,1,Set(_MyVariable=thisValue)\nexten => example,1,Set(__MyVariable=thisValue)\n; \u5728\u522b\u7684\u901a\u9053\u4f7f\u7528\u53d8\u91cf\nexten => example,1,Verbose(1,Value of MyVariable is: ${MyVariable})\n')),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-conf"}),'# \u5c06\u62e8\u6253\u5230 900X \u7684\u8f6c\u53d1\u5230 SIP, \u5e76\u8fdb\u884c\u5f55\u97f3\nexten => _900X,1,NoOp()\n    same => n,Verbose(2, Forward call ${EXTEN})\n    same => n,Verbose(2, Monitor file ${EXTEN}.${UNIQUEID}.wav)\n    same => n,MixMonitor(${EXTEN}.${UNIQUEID}.wav,ab)\n    same => n,Dial(SIP/${EXTEN},30,m())\n    same => n,Log(NOTICE, Forward call ${EXTEN} result: ${DIALSTATUS})\n    same => n,StopMixMonitor()\n    same => n,GotoIf($["${DIALSTATUS}" = "BUSY"]?busy:unavailable)\n    ; \u5360\u7ebf\n    same => n(busy),NoOp()\n    same => n,Verbose(2, Failed Forward ${EXTEN}: Busy now)\n    same => n,Playback(vm-no)\n    same => n,Hangup()\n    ; \u65e0\u4eba\u63a5\u542c\n    same => n(unavailable),NoOp()\n    same => n,Verbose(2, Failed Forward ${EXTEN}: No body)\n    same => n,Playback(vm-nobodyavail)\n    same => n,Hangup()\n')),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"\u7b80\u5355\u7528\u4e8e\u6d4b\u8bd5\u7684\u62e8\u53f7\u8ba1\u5212")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-conf"}),"[default]\nexten => _9XXXXXX!,1,NoOp()\n        same => n,Dial(DAHDI/g1/${EXTEN:1})\n        same => n,Hangup()\nexten => 1992,1,NoOp()\n        same => n,Answer()\n        same => n,Playback(demo-instruct)\n        same => n,Hangup()\n\n[from-pstn]\nexten => _X!,1,NoOp()\n        same => n,Answer()\n        same => n,Playback(demo-instruct)\n        same => n,Hangup()\n")),Object(l.b)("h2",{id:"command"},"Command"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-bash"}),"# \u8bf7\u6c42\u53d1\u8d77\u901a\u8bdd\nchannel originate SIP/9001 extension 9002@public\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"channel",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"originate <tech/data> application <appname> [appdata]")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"originate <tech/data> extension [exten@][context]"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u53d1\u8d77\u901a\u8bdd"),Object(l.b)("li",{parentName:"ul"},"\u53d1\u8d77\u901a\u8bdd\u65f6\u7684 CALLER \u9700\u8981\u8c03\u7528\u8005\u8fdb\u884c\u8bbe\u7f6e, \u6216\u8005\u5728 extension \u4e2d\u8bbe\u7f6e, \u5426\u5219\u9ed8\u8ba4\u4e3a asterisk"),Object(l.b)("li",{parentName:"ul"},"\u4f8b\u5982\u5728 extension \u4e2d\u8bbe\u7f6e",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"same => n,Set(CALLERID(num)=54321)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"same => n,Set(CALLERID(name)=Asterisk)")))))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"redirect <channel> <[[context,]exten,]priority>"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u91cd\u5b9a\u5411\u4e00\u4e2a\u901a\u9053\u5230\u4e00\u4e2a\u6269\u5c55"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"hangup <channel>|<all>"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u6302\u65ad\u6240\u6709\u6216\u5355\u4e2a\u901a\u9053")))))),Object(l.b)("h3",{id:"ael"},"AEL"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://wiki.asterisk.org/wiki/pages/viewpage.action?pageId=4620445"}),"Asterisk Extension Language")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://wiki.asterisk.org/wiki/display/AST/AEL+version+2+BNF"}),"AEL version 2 BNF")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/asterisk/asterisk/blob/master/utils/conf2ael.c"}),"conf2ael"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"conf \u8f6c ael \u5de5\u5177"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://github.com/asterisk/asterisk/tree/master/res/ael"}),"res/ael"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u6e90\u7801")))),Object(l.b)("h2",{id:"applications"},"Applications"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Answer()",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5efa\u7acb\u901a\u9053"))),Object(l.b)("li",{parentName:"ul"},"Playback(filename)",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u64ad\u653e\u9884\u5148\u5f55\u5236\u597d\u7684\u58f0\u97f3\u6587\u4ef6"),Object(l.b)("li",{parentName:"ul"},"\u9884\u5148\u9644\u5e26\u7684\u6587\u4ef6\u4f4d\u4e8e /var/lib/asterisk/sounds, \u4f46\u662f\u662f\u6709\u8bed\u8a00\u9650\u5236\u7684,\u4e3b\u8981\u6ce8\u610f"),Object(l.b)("li",{parentName:"ul"},"core show sounds \u67e5\u770b\u6240\u6709\u7684, core show sound \u67e5\u770b\u5355\u4e2a"),Object(l.b)("li",{parentName:"ul"},"filename \u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84,\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u4e8e\u97f3\u9891\u6587\u4ef6\u5939\u7684\u76f8\u5bf9\u8def\u5f84"),Object(l.b)("li",{parentName:"ul"},"filename \u53ef\u4ee5\u4e0d\u5e26\u6269\u5c55\u7c7b\u578b,\u4f1a\u5c1d\u8bd5\u64ad\u653e\u6700\u597d\u7f16\u7801\u7684\u6587\u4ef6"))),Object(l.b)("li",{parentName:"ul"},"Hangup(","[code]",")",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"code \u4e3a ISDN cause code"))),Object(l.b)("li",{parentName:"ul"},"Progress()",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u4e3b\u8981\u7528\u4e8e\u8fd4\u56de\u901a\u8bdd\u8fc7\u7a0b\u4fe1\u606f\u7ed9\u5bf9\u65b9,\u90e8\u5206\u670d\u52a1\u63d0\u4f9b\u5546\u53ef\u80fd\u5bf9\u6b64\u6709\u8981\u6c42,\u5f53\u9047\u5230\u5947\u602a\u95ee\u9898\u7684\u65f6\u5019\u53ef\u4ee5\u8bd5\u8bd5"))),Object(l.b)("li",{parentName:"ul"},"Goto(context,extension,priority)"),Object(l.b)("li",{parentName:"ul"},"Goto(extension,priority)"),Object(l.b)("li",{parentName:"ul"},"Goto(priority)",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u8df3\u8f6c\u5230\u5176\u4ed6\u7684\u4f4d\u7f6e"))),Object(l.b)("li",{parentName:"ul"},"Background()",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5728\u540e\u53f0\u64ad\u653e\u97f3\u9891,\u4f46\u662f\u662f\u4f1a\u7b49\u5f85 DTMF"),Object(l.b)("li",{parentName:"ul"},"\u4e0e Playback \u7c7b\u4f3c, \u4f46\u7528\u6237\u9a6c\u4e0a\u53ef\u4ee5\u505a\u51fa\u64cd\u4f5c\u800c\u4e0d\u662f\u7b49\u5f85\u58f0\u97f3\u64ad\u653e\u5b8c\u6210"))),Object(l.b)("li",{parentName:"ul"},"WaitExten(","[timeout]",")",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5f53 Background \u64ad\u653e\u5b8c\u6210\u540e\u4f7f\u7528\u6539\u7a0b\u5e8f\u7b49\u5f85 DTMF \u6570\u5b57\u8f93\u5165"),Object(l.b)("li",{parentName:"ul"},"timeout \u5982\u679c\u4e0d\u4f20\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684, \u53c2\u8003 TIMEOUT()"),Object(l.b)("li",{parentName:"ul"},"\u5982\u679c\u8f93\u5165\u7684\u6269\u5c55\u4e0d\u5b58\u5728\u5219\u4f1a\u4f7f\u7528 i \u6269\u5c55"),Object(l.b)("li",{parentName:"ul"},"\u5982\u679c\u8d85\u65f6\u4e86\u5219\u4f1a\u4f7f\u7528 t"))),Object(l.b)("li",{parentName:"ul"},"Dial(destination[,timeout[,option","[,URI]","]])",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"destination",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"DAHDI/1 \u6a21\u62df\u7535\u8bdd\u7684 FXS \u901a\u9053. DAHDI \u6280\u672f, \u8d44\u6e90(\u901a\u9053\u6807\u8bc6\u7b26) 1"),Object(l.b)("li",{parentName:"ul"},"SIP/0004F2001122"),Object(l.b)("li",{parentName:"ul"},"IAX2/Softphone"),Object(l.b)("li",{parentName:"ul"},"\u540c\u65f6\u591a\u65b9\u62e8\u53f7 DAHDI/1&SIP/0004F2001122&IAX2/Softphone, \u4f46\u53ea\u4f1a\u63a5\u901a\u7b2c\u4e00\u4e2a"),Object(l.b)("li",{parentName:"ul"},"\u8fdc\u7a0b VoIP ",Object(l.b)("inlineCode",{parentName:"li"},"technology/user[:password]@remote_host[:port][/remote_extension]")))),Object(l.b)("li",{parentName:"ul"},"\u5982\u679c\u62e8\u53f7\u5931\u8d25\u4f1a\u8bbe\u7f6e\u53d8\u91cf DIALSTATUS \u8bb0\u5f55\u5931\u8d25\u539f\u56e0"),Object(l.b)("li",{parentName:"ul"},"DIALSTATUS",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"CHANUNAVAIL"),Object(l.b)("li",{parentName:"ul"},"CONGESTION"),Object(l.b)("li",{parentName:"ul"},"NOANSWER"),Object(l.b)("li",{parentName:"ul"},"BUSY"),Object(l.b)("li",{parentName:"ul"},"ANSWER"),Object(l.b)("li",{parentName:"ul"},"CANCEL"),Object(l.b)("li",{parentName:"ul"},"DONTCALL"),Object(l.b)("li",{parentName:"ul"},"TORTURE"),Object(l.b)("li",{parentName:"ul"},"INVALIDARGS"))),Object(l.b)("li",{parentName:"ul"},"Digium \u6f14\u793a\u670d\u52a1 Dial(DAHDI/","[gGrR]","channel_or_group","[/remote_extension]",")"),Object(l.b)("li",{parentName:"ul"},"\u4f8b\u5982 Dial(IAX2/",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"mailto:guest@misery.digium.com"}),"guest@misery.digium.com"),"/s)"),Object(l.b)("li",{parentName:"ul"},"\u5982\u679c\u62e8\u53f7\u6210\u529f\u5219\u4f1a\u6865\u63a5\u8fc7\u53bb,\u800c\u4e0d\u4f1a\u7ee7\u7eed\u6267\u884c")))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),"exten => 502,1,Dial(DAHDI/1,10)\n  ; \u65e0\u4eba\u63a5\u542c\n  same => n,Playback(vm-nobodyavail)\n  same => n,Hangup()\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"option "),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"A(x)")," \u64ad\u653e\u63d0\u793a\u97f3\u6587\u4ef6 ",Object(l.b)("inlineCode",{parentName:"li"},"x")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"b([[context^]exten^]priority[(arg1[^...][^argN])])"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5728\u547c\u51fa\u524d\u8df3\u8f6c\u5230\u6307\u5b9a\u4f4d\u7f6e, \u4f7f\u7528\u65b0\u7684\u901a\u9053"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"B([[context^]exten^]priority[(arg1[^...][^argN])])"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u5728\u547c\u51fa\u524d\u8df3\u8f6c\u5230\u6307\u5b9a\u4f4d\u7f6e, \u4f7f\u7528\u5f53\u524d\u901a\u9053"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"R"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u91cd\u7f6e\u5f53\u524d CDR"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"c"),'\nt: Allow the called party to transfer the calling party by sending the DTMF\nsequence defined in "features.conf". This setting does not perform policy\nenforcement on transfers initiated by other methods.')),Object(l.b)("p",{parentName:"li"},'T: Allow the calling party to transfer the called party by sending the DTMF\nsequence defined in "features.conf". This setting does not perform policy\nenforcement on transfers initiated by other methods.'),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"m,\u5f53\u5728\u62e8\u53f7\u65f6\u4f7f\u7528 moh \u800c\u4e0d\u662f\u5bf9\u65b9\u7684\u58f0\u97f3"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"URI \u5f88\u5c11\u4f7f\u7528, \u5728\u652f\u6301\u7684\u73af\u5883\u4e0b\u53ef\u80fd\u4f1a\u6253\u5f00\u8be5 URI \u6307\u5411\u7684\u7f51\u9875")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"\u6ca1\u6709\u7684\u53c2\u6570\u53ef\u4ee5\u7559\u7a7a Dial(DAHDI/1,,m)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Set()"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u8bbe\u7f6e\u53d8\u91cf"),Object(l.b)("li",{parentName:"ul"},"\u5168\u5c40\u53d8\u91cf"),Object(l.b)("li",{parentName:"ul"},"\u901a\u9053\u53d8\u91cf",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"${EXTEN} \u901a\u9053\u540d"))),Object(l.b)("li",{parentName:"ul"},"\u73af\u5883\u53d8\u91cf(${ENV(var)})"),Object(l.b)("li",{parentName:"ul"},"\u53d8\u91cf\u64cd\u4f5c",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"${EXTEN:x}")," \u79fb\u9664\u524d\u9762 x \u4f4d"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"${EXTEN:x:y}")," y \u4e3a\u957f\u5ea6"),Object(l.b)("li",{parentName:"ul"},"x,y \u53ef\u4ee5\u4e3a\u8d1f")))))),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-conf"}),"exten => 301,1,Set(LEIF=SIP/0000FFFF0001)\n  ; \u5bf9\u53d8\u91cf\u7684\u5e94\u7528\n  same => n,Dial(${LEIF})\n; \u5168\u5c40\u53d8\u91cf\n[globals]\nLEIF=SIP/0000FFFF0001\n\n; \u4fee\u6539\u901a\u9053\u76f8\u5173\u7684\u53d8\u91cf\n; gives the choice of (1) French, (2) Spanish, or (3) German\nexten => s,1,Background(choose-language)\n   same => n,WaitExten(5)\nexten => 1,1,Set(CHANNEL(language)=fr)\nexten => 2,1,Set(CHANNEL(language)=es)\nexten => 3,1,Set(CHANNEL(language)=de)\n; the next priority for extensions 1, 2, or 3 would be handled here\nexten => _[123],n,Goto(menu,s,1)\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"SayNumber(number)",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u62a5\u6570, number \u4e0d\u80fd\u8fc7\u5927"))),Object(l.b)("li",{parentName:"ul"},"SayDigits(digits)",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u8bf4\u51fa\u6bcf\u4e2a\u6570\u5b57"))),Object(l.b)("li",{parentName:"ul"},"Verbose(","[level,]","message)",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Verbose(2, Call from VoIP network to ${EXTEN})")),Object(l.b)("li",{parentName:"ul"},"\u65e5\u5fd7"))),Object(l.b)("li",{parentName:"ul"},"Monitor/StopMonitor"),Object(l.b)("li",{parentName:"ul"},"MixMonitor(filename.extension[,options","[,command]","])/StopMixMonitor",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u901a\u8bdd\u5f55\u97f3"),Object(l.b)("li",{parentName:"ul"},"\u5efa\u8bae\u4f7f\u7528 Mix, \u56e0\u4e3a Monitor \u53ea\u4f1a\u5f55\u5236\u8fdb\u7684\u6216\u51fa\u7684"),Object(l.b)("li",{parentName:"ul"},"\u5efa\u8bae\u5f55\u5236\u4e3a wav , \u6bcf\u5929\u5f52\u6863\u65f6\u53ef\u8003\u8651\u8f6c\u6362\u4e3a ogg"),Object(l.b)("li",{parentName:"ul"},"\u9ed8\u8ba4\u5b58\u653e\u76ee\u5f55 ",Object(l.b)("inlineCode",{parentName:"li"},"/var/spool/asterisk/monitor"))))),Object(l.b)("h2",{id:"dial"},"Dial"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Dial(PJSIP/${EXTEN})"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u547c\u53eb aor \u5bf9\u5e94\u7684\u7b2c\u4e00\u4e2a contact"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Dial(${PJSIP_DIAL_CONTACTS(${EXTEN})})"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u547c\u53eb aor \u5bf9\u5e94\u7684\u6240\u6709 contact"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Dial(PJSIP/mytrunk/sip:${EXTEN:1}@203.0.113.1:5060)"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u6307\u5b9a\u7ebf\u8def\u548c URL"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Dial(PJSIP/${EXTEN:1}@mytrunk)"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"\u9009\u62e9 aor \u4e2d\u5339\u914d\u7ebf\u8def\u7684 contact")))),Object(l.b)("h3",{id:"dial-help"},"Dial Help"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),"-= Info about application 'Dial' =-\n\n[Synopsis]\nAttempt to connect to another device or endpoint and bridge the call.\n\n[Description]\nThis application will place calls to one or more specified channels. As soon as\none of the requested channels answers, the originating channel will be\nanswered, if it has not already been answered. These two channels will then be\nactive in a bridged call. All other channels that were requested will then be\nhung up.\nUnless there is a timeout specified, the Dial application will wait\nindefinitely until one of the called channels answers, the user hangs up, or if\nall of the called channels are busy or unavailable. Dialplan execution will\ncontinue if no requested channels can be called, or if the timeout expires.\nThis application will report normal termination if the originating channel\nhangs up, or if the call is bridged and either of the parties in the bridge\nends the call.\nIf the ${OUTBOUND_GROUP} variable is set, all peer channels created by this\napplication will be put into that group (as in 'Set(GROUP()=...'). If the\n${OUTBOUND_GROUP_ONCE} variable is set, all peer channels created by this\napplication will be put into that group (as in 'Set(GROUP()=...'). Unlike\n${OUTBOUND_GROUP}, however, the variable will be unset after use.\nExample: Dial with 30 second timeout\n\n  same => n,Dial(PJSIP/alice,30)\n\nExample: Parallel dial with 45 second timeout\n\n  same => n,Dial(PJSIP/alice&PJIP/bob,45)\n\nExample: Dial with 'g' continuation option\n\n  same => n,Dial(PJSIP/alice,,g)\n  same => n,Log(NOTICE, Alice call result: ${DIALSTATUS})\n\nExample: Dial with transfer/recording features for calling party\n\n  same => n,Dial(PJSIP/alice,,TX)\n\nExample: Dial with call length limit\n\n  same => n,Dial(PJSIP/alice,,L(60000:30000:10000))\n\nExample: Dial alice and bob and send NO_ANSWER to bob instead of\nANSWERED_ELSEWHERE when alice answers\n\n  same => n,Dial(PJSIP/alice&PJSIP/bob,,Q(NO_ANSWER))\n\nExample: Dial with pre-dial subroutines\n\n [default]\n exten => callee_channel,1,NoOp()\n  same => n,Log(NOTICE, I'm called on channel ${CHANNEL} prior to it starting\n  the dial attempt)\n  same => n,Return()\n exten => called_channel,1,NoOp()\n  same => n,Log(NOTICE, I'm called on outbound channel ${CHANNEL} prior to it\n  being used to dial someone)\n  same => n,Return()\n exten => _X.,1,NoOp()\n  same => n,Dial(PJSIP/alice,,b(default^called_channel^1)B(default^callee_chann\n  l^1))\n  same => n,Hangup()\n\nExample: Dial with post-answer subroutine executed on outbound channel\n\n [default]\n exten => called_channel,1,NoOp()\n  same => n,Playback(hello)\n  same => n,Return()\n exten => _X.,1,NoOp()\n  same => n,Dial(PJSIP/alice,,U(default^called_channel^1))\n  same => n,Hangup()\n\nExample: Dial into ConfBridge using 'G' option\n\n  same => n,Dial(PJSIP/alice,,G(jump_to_here))\n  same => n(jump_to_here),Goto(confbridge)\n  same => n,Goto(confbridge)\n  same => n(confbridge),ConfBridge(${EXTEN})\n\nThis application sets the following channel variables:\n${DIALEDTIME}: This is the time from dialing a channel until when it is\ndisconnected.\n${ANSWEREDTIME}: This is the amount of time for actual call.\n${DIALEDPEERNAME}: The name of the outbound channel that answered the call.\n${DIALEDPEERNUMBER}: The number that was dialed for the answered outbound\nchannel.\n${FORWARDERNAME}: If a call forward occurred, the name of the forwarded\nchannel.\n${DIALSTATUS}: This is the status of the call\n    CHANUNAVAIL\n    CONGESTION\n    NOANSWER\n    BUSY\n    ANSWER\n    CANCEL\n    DONTCALL: For the Privacy and Screening Modes. Will be set if the called\n    party chooses to send the calling party to the 'Go Away' script.\n    TORTURE: For the Privacy and Screening Modes. Will be set if the called\n    party chooses to send the calling party to the 'torture' script.\n    INVALIDARGS\n\n[Syntax]\nDial(Technology/Resource[&Technology2/Resource2[&...]][,timeout[,options[,URL]]])\n\n[Arguments]\nTechnology/Resource\n    Specification of the device(s) to dial.  These must be in the format of\n    'Technology/Resource', where <Technology> represents a particular channel\n    driver, and <Resource> represents a resource available to that particular\n    channel driver.\nTechnology2/Resource2\n    Optional extra devices to dial in parallel\n    If you need more than one enter them as Technology2/Resource2&Technology3/R\n    source3&.....\ntimeout\n    Specifies the number of seconds we attempt to dial the specified devices.\n    If not specified, this defaults to 136 years.\noptions\n    A(x):\n        x - The file to play to the called party\nPlay an announcement to the called party, where <x> is the prompt to be played\n\n    a: Immediately answer the calling channel when the called channel answers\n    in all cases. Normally, the calling channel is answered when the called\n    channel answers, but when options such as 'A()' and 'M()' are used, the\n    calling channel is not answered until all actions on the called channel\n    (such as playing an announcement) are completed.  This option can be used\n    to answer the calling channel before doing anything on the called channel.\n    You will rarely need to use this option, the default behavior is adequate\n    in most cases.\n\n    b([[context^]exten^]priority[(arg1[^...][^argN])]): Before initiating an\n    outgoing call, 'Gosub' to the specified location using the newly created\n    channel.  The 'Gosub' will be executed for each destination channel.\n\n    B([[context^]exten^]priority[(arg1[^...][^argN])]): Before initiating the\n    outgoing call(s), 'Gosub' to the specified location using the current\n    channel.\n\n    C: Reset the call detail record (CDR) for this call.\n\n    c: If the Dial() application cancels this call, always set ${HANGUPCAUSE}\n    to 'answered elsewhere'\n\n    d: Allow the calling user to dial a 1 digit extension while waiting for a\n    call to be answered. Exit to that extension if it exists in the current\n    context, or the context defined in the ${EXITCONTEXT} variable, if it\n    exists.\n    NOTE: Many SIP and ISDN phones cannot send DTMF digits until the call is\n    connected.  If you wish to use this option with these phones, you can use\n    the 'Answer' application before dialing.\n\n    D([called][:calling[:progress]]): Send the specified DTMF strings *after*\n    the called party has answered, but before the call gets bridged.  The\n    <called> DTMF string is sent to the called party, and the <calling> DTMF\n    string is sent to the calling party.  Both arguments can be used alone.  If\n    <progress> is specified, its DTMF is sent to the called party immediately\n    after receiving a 'PROGRESS' message.\n    See 'SendDTMF' for valid digits.\n\n    e: Execute the 'h' extension for peer after the call ends\n\n    f([x]): If <x> is not provided, force the CallerID sent on a call-forward\n    or deflection to the dialplan extension of this 'Dial()' using a dialplan\n    'hint'. For example, some PSTNs do not allow CallerID to be set to anything\n    other than the numbers assigned to you. If <x> is provided, force the\n    CallerID sent to <x>.\n\n    F([[context^]exten^]priority): When the caller hangs up, transfer the\n    *called* party to the specified destination and *start* execution at that\n    location.\n    NOTE: Any channel variables you want the called channel to inherit from the\n    caller channel must be prefixed with one or two underbars ('_').\n\n    F: When the caller hangs up, transfer the *called* party to the next\n    priority of the current extension and *start* execution at that location.\n    NOTE: Any channel variables you want the called channel to inherit from the\n    caller channel must be prefixed with one or two underbars ('_').\n    NOTE: Using this option from a Macro() or GoSub() might not make sense as\n    there would be no return points.\n\n    g: Proceed with dialplan execution at the next priority in the current\n    extension if the destination channel hangs up.\n\n    G([[context^]exten^]priority): If the call is answered, transfer the\n    calling party to the specified <priority> and the called party to the\n    specified <priority> plus one.\n    NOTE: You cannot use any additional action post answer options in\n    conjunction with this option.\n\n    h: Allow the called party to hang up by sending the DTMF sequence defined\n    for disconnect in \"features.conf\".\n\n    H: Allow the calling party to hang up by sending the DTMF sequence defined\n    for disconnect in \"features.conf\".\n    NOTE: Many SIP and ISDN phones cannot send DTMF digits until the call is\n    connected.  If you wish to allow DTMF disconnect before the dialed party\n    answers with these phones, you can use the 'Answer' application before\n    dialing.\n\n    i: Asterisk will ignore any forwarding requests it may receive on this dial\n    attempt.\n\n    I: Asterisk will ignore any connected line update requests or any\n    redirecting party update requests it may receive on this dial attempt.\n\n    k: Allow the called party to enable parking of the call by sending the DTMF\n    sequence defined for call parking in \"features.conf\".\n\n    K: Allow the calling party to enable parking of the call by sending the\n    DTMF sequence defined for call parking in \"features.conf\".\n\n    L(x[:y[:z]]):\n        x - Maximum call time, in milliseconds\n\n        y - Warning time, in milliseconds\n\n        z - Repeat time, in milliseconds\nLimit the call to <x> milliseconds. Play a warning when <y> milliseconds are\nleft. Repeat the warning every <z> milliseconds until time expires.\n    This option is affected by the following variables:\n        ${LIMIT_PLAYAUDIO_CALLER}:\n            yes\n            no\n            If set, this variable causes Asterisk to play the prompts to the\n            caller.\n        ${LIMIT_PLAYAUDIO_CALLEE}:\n            yes\n            no\n            If set, this variable causes Asterisk to play the prompts to the\n            callee.\n        ${LIMIT_TIMEOUT_FILE}:\n            filename\n            If specified, <filename> specifies the sound prompt to play when\n            the timeout is reached. If not set, the time remaining will be\n            announced.\n        ${LIMIT_CONNECT_FILE}:\n            filename\n            If specified, <filename> specifies the sound prompt to play when\n            the call begins. If not set, the time remaining will be announced.\n        ${LIMIT_WARNING_FILE}:\n            filename\n            If specified, <filename> specifies the sound prompt to play as a\n            warning when time <x> is reached. If not set, the time remaining\n            will be announced.\n\n    m([class]): Provide hold music to the calling party until a requested\n    channel answers. A specific music on hold <class> (as defined in\n    \"musiconhold.conf\") can be specified.\n\n    M(macro[^arg[^...]]):\n        macro - Name of the macro that should be executed.\n\n        arg - Macro arguments\nExecute the specified <macro> for the *called* channel before connecting to the\ncalling channel. Arguments can be specified to the Macro using '^' as a\ndelimiter. The macro can set the variable ${MACRO_RESULT} to specify the\nfollowing actions after the macro is finished executing:\n        ${MACRO_RESULT}: If set, this action will be taken after the macro\n        finished executing.\n            ABORT: Hangup both legs of the call\n            CONGESTION: Behave as if line congestion was encountered\n            BUSY: Behave as if a busy signal was encountered\n            CONTINUE: Hangup the called party and allow the calling party to\n            continue dialplan execution at the next priority\n            GOTO:[[<context>^]<exten>^]<priority>: Transfer the call to the\n            specified destination.\n    NOTE: You cannot use any additional action post answer options in\n    conjunction with this option. Also, pbx services are run on the peer\n    (called) channel, so you will not be able to set timeouts via the\n    'TIMEOUT()' function in this macro.\n    WARNING!!!: Be aware of the limitations that macros have, specifically with\n    regards to use of the 'WaitExten' application. For more information, see\n    the documentation for 'Macro()'.\n\n    n([delete]):\n        delete - With <delete> either not specified or set to '0', the recorded\n        introduction will not be deleted if the caller hangs up while the\n        remote party has not yet answered.\n - With <delete> set to '1', the introduction will always be deleted.\nThis option is a modifier for the call screening/privacy mode. (See the 'p' and\n'P' options.) It specifies that no introductions are to be saved in the\n\"priv-callerintros\" directory.\n\n    N: This option is a modifier for the call screening/privacy mode. It\n    specifies that if CallerID is present, do not screen the call.\n\n    o([x]): If <x> is not provided, specify that the CallerID that was present\n    on the *calling* channel be stored as the CallerID on the *called* channel.\n    This was the behavior of Asterisk 1.0 and earlier. If <x> is provided,\n    specify the CallerID stored on the *called* channel. Note that\n    'o(${CALLERID(all)})' is similar to option 'o' without the parameter.\n\n    O([mode]):\n        mode - With <mode> either not specified or set to '1', the originator\n        hanging up will cause the phone to ring back immediately.\n - With <mode> set to '2', when the operator flashes the trunk, it will ring\n their phone back.\nEnables *operator services* mode.  This option only works when bridging a DAHDI\nchannel to another DAHDI channel only. if specified on non-DAHDI interfaces, it\nwill be ignored. When the destination answers (presumably an operator services\nstation), the originator no longer has control of their line. They may hang up,\nbut the switch will not release their line until the destination party (the\noperator) hangs up.\n\n    p: This option enables screening mode. This is basically Privacy mode\n    without memory.\n\n    P([x]): Enable privacy mode. Use <x> as the family/key in the AstDB\n    database if it is provided. The current extension is used if a database\n    family/key is not specified.\n\n    Q(cause): Specify the Q.850/Q.931 <cause> to send on unanswered channels\n    when another channel answers the call. As with 'Hangup()', <cause> can be a\n    numeric cause code or a name such as 'NO_ANSWER', 'USER_BUSY',\n    'CALL_REJECTED' or 'ANSWERED_ELSEWHERE' (the default if Q isn't specified).\n    You can also specify '0' or 'NONE' to send no cause.  See the \"causes.h\"\n    file for the full list of valid causes and names.\n    NOTE: chan_sip does not support setting the cause on a CANCEL to anything\n    other than ANSWERED_ELSEWHERE.\n\n    r([tone]): Default: Indicate ringing to the calling party, even if the\n    called party isn't actually ringing. Pass no audio to the calling party\n    until the called channel has answered.\n        tone - Indicate progress to calling party. Send audio 'tone' from the\n        \"indications.conf\" tonezone currently in use.\n\n    R: Default: Indicate ringing to the calling party, even if the called party\n    isn't actually ringing.  Allow interruption of the ringback if early media\n    is received on the channel.\n\n    S(x): Hang up the call <x> seconds *after* the called party has answered\n    the call.\n\n    s(x): Force the outgoing CallerID tag parameter to be set to the string\n    <x>.\n    Works with the 'f' option.\n\n    t: Allow the called party to transfer the calling party by sending the DTMF\n    sequence defined in \"features.conf\". This setting does not perform policy\n    enforcement on transfers initiated by other methods.\n\n    T: Allow the calling party to transfer the called party by sending the DTMF\n    sequence defined in \"features.conf\". This setting does not perform policy\n    enforcement on transfers initiated by other methods.\n\n    U(x[^arg[^...]]):\n        x - Name of the subroutine to execute via 'Gosub'\n\n        arg - Arguments for the 'Gosub' routine\nExecute via 'Gosub' the routine <x> for the *called* channel before connecting\nto the calling channel. Arguments can be specified to the 'Gosub' using '^' as\na delimiter. The 'Gosub' routine can set the variable ${GOSUB_RESULT} to\nspecify the following actions after the 'Gosub' returns.\n        ${GOSUB_RESULT}:\n            ABORT: Hangup both legs of the call.\n            CONGESTION: Behave as if line congestion was encountered.\n            BUSY: Behave as if a busy signal was encountered.\n            CONTINUE: Hangup the called party and allow the calling party to\n            continue dialplan execution at the next priority.\n            GOTO:[[<context>^]<exten>^]<priority>: Transfer the call to the\n            specified destination.\n    NOTE: You cannot use any additional action post answer options in\n    conjunction with this option. Also, pbx services are run on the peer\n    (called) channel, so you will not be able to set timeouts via the\n    'TIMEOUT()' function in this routine.\n\n    u(x):\n        x - Force the outgoing callerid presentation indicator parameter to be\n        set to one of the values passed in <x>: 'allowed_not_screened'\n        'allowed_passed_screen' 'allowed_failed_screen' 'allowed'\n        'prohib_not_screened' 'prohib_passed_screen' 'prohib_failed_screen'\n        'prohib' 'unavailable'\nWorks with the 'f' option.\n\n    w: Allow the called party to enable recording of the call by sending the\n    DTMF sequence defined for one-touch recording in \"features.conf\".\n\n    W: Allow the calling party to enable recording of the call by sending the\n    DTMF sequence defined for one-touch recording in \"features.conf\".\n\n    x: Allow the called party to enable recording of the call by sending the\n    DTMF sequence defined for one-touch automixmonitor in \"features.conf\".\n\n    X: Allow the calling party to enable recording of the call by sending the\n    DTMF sequence defined for one-touch automixmonitor in \"features.conf\".\n\n    z: On a call forward, cancel any dial timeout which has been set for this\n    call.\n\nURL\n    The optional URL will be sent to the called party if the channel driver\n    supports it.\n\n[See Also]\nRetryDial(), SendDTMF(), Gosub(), Macro()\n")))}b.isMDXComponent=!0},746:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var a=t(0),i=t.n(a);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),b=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=b(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,r=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(t),m=a,d=p["".concat(r,".").concat(m)]||p[m]||u[m]||l;return t?i.a.createElement(d,o(o({ref:n},s),{},{components:t})):i.a.createElement(d,o({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,r=new Array(l);r[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var s=2;s<l;s++)r[s]=t[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);