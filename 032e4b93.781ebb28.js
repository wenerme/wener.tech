(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return c}));var s=n(3),a=n(8),i=(n(0),n(999)),r={id:"gitlab-config",title:"GitLab\u914d\u7f6e"},l={unversionedId:"service/forge/gitlab/gitlab-config",id:"service/forge/gitlab/gitlab-config",isDocsHomePage:!1,title:"GitLab\u914d\u7f6e",description:"Gitlab \u914d\u7f6e",source:"@site/notes/service/forge/gitlab/gitlab-config.md",slug:"/service/forge/gitlab/gitlab-config",permalink:"/notes/service/forge/gitlab/gitlab-config",editUrl:"https://github.com/wenerme/wener/edit/master/notes/service/forge/gitlab/gitlab-config.md",version:"current",sidebar:"docs",previous:{title:"GitaLab\u6301\u7eed\u96c6\u6210\u6301\u7eed\u4ea4\u4ed8",permalink:"/notes/service/forge/gitlab/gitlab-cicd"},next:{title:"GitLab K8S \u96c6\u6210",permalink:"/notes/service/forge/gitlab/gitlab-k8s"}},o=[{value:"\u57fa\u7840\u914d\u7f6e",id:"\u57fa\u7840\u914d\u7f6e",children:[]},{value:"\u6388\u6743\u914d\u7f6e",id:"\u6388\u6743\u914d\u7f6e",children:[{value:"LDAP",id:"ldap",children:[]},{value:"OpenID Connect",id:"openid-connect",children:[]}]},{value:"Pages \u914d\u7f6e",id:"pages-\u914d\u7f6e",children:[]},{value:"gitlab.rb",id:"gitlabrb",children:[]}],g={toc:o};function c(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(s.a)({},g,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"gitlab-\u914d\u7f6e"},"Gitlab \u914d\u7f6e"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u7ec4\u5efa",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"gitaly - \u63d0\u4f9b RPC \u64cd\u4f5c Git \u4ed3\u5e93\u7684\u670d\u52a1"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/files/gitlab-config-template/gitlab.rb.template"},"gitlab.rb.template"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"ruby \u914d\u7f6e\u6587\u4ef6"),Object(i.b)("li",{parentName:"ul"},"\u4f4d\u4e8e ",Object(i.b)("inlineCode",{parentName:"li"},"/etc/gitlab/gitlab.rb")),Object(i.b)("li",{parentName:"ul"},"\u4fee\u6539\u540e\u64cd\u4f5c ",Object(i.b)("inlineCode",{parentName:"li"},"gitlab-ctl reconfigure")," \u53ef\u8ba9\u670d\u52a1\u5668\u4e0d\u91cd\u542f\u7684\u60c5\u51b5\u4e0b\u4ece\u65b0\u914d\u7f6e"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/gitlab.yml.md"},"gitlab.yml")," - ",Object(i.b)("a",{parentName:"li",href:"https://gitlab.com/gitlab-org/gitlab/blob/master/config/gitlab.yml.example"},"gitlab.yml.example"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"yaml \u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6"),Object(i.b)("li",{parentName:"ul"},"\u4f1a\u6620\u5c04\u4e3a ruby \u914d\u7f6e"),Object(i.b)("li",{parentName:"ul"},"\u914d\u7f6e\u540e\u4f1a\u751f\u6210 ",Object(i.b)("inlineCode",{parentName:"li"},"/var/opt/gitlab/gitlab-rails/etc/gitlab.yml")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://docs.gitlab.com/omnibus/settings/configuration.html"},"\u914d\u7f6e"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rb"},'# \u53ef\u4ee5\u5f15\u5165\u5916\u90e8\u914d\u7f6e\u6587\u4ef6\nfrom_file "/home/admin/external_gitlab.rb"\n')),Object(i.b)("h2",{id:"\u57fa\u7840\u914d\u7f6e"},"\u57fa\u7840\u914d\u7f6e"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u5982\u679c\u60f3\u8981\u5f00\u542f Git over SSH - \u90a3\u4e48\u53ea\u80fd\u662f\u5c06\u57df\u540d\u89e3\u6790\u6307\u5411 Gitlab",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"\u6216\u8005\u5355\u72ec\u8f6c\u53d1\u5355\u4e2a\u7aef\u53e3"),Object(i.b)("li",{parentName:"ul"},"\u505a\u4e0d\u5230\u5916\u90e8\u53cd\u5411\u4ee3\u7406+SSH - \u56e0\u4e3a SSH \u6ca1\u6709\u57df\u540d\u6982\u5ff5 - \u4e5f\u4e0d\u9002\u5408\u5c06\u6574\u4e2a\u5916\u90e8\u7684 22 \u90fd\u6307\u5411 Gitlab"))),Object(i.b)("li",{parentName:"ul"},"\u6ce8\u610f",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"\u914d\u7f6e\u4e86 external_url \u540e\uff0c\u5982\u679c\u4e3a https \u5219\u53ea\u76d1\u542c https - ",Object(i.b)("a",{parentName:"li",href:"https://gitlab.com/gitlab-org/omnibus-gitlab/issues/1891"},"#1891")," - \u540c\u65f6\u76d1\u542c 80 \u548c 443")))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rb"},"# \u7528\u4e8e SSH \u7684\u4e3b\u673a\u540d\ngitlab_rails['gitlab_ssh_host'] = 'ssh.host_example.com'\ngitlab_rails['time_zone'] = 'UTC'\n")),Object(i.b)("h2",{id:"\u6388\u6743\u914d\u7f6e"},"\u6388\u6743\u914d\u7f6e"),Object(i.b)("h3",{id:"ldap"},"LDAP"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u7531\u4e8e Git \u9700\u8981\u5bc6\u7801 - \u60f3\u8981\u4e2d\u5fc3\u5316\u7ba1\u7406\u5bc6\u7801\u53ea\u80fd\u4f7f\u7528 LDAP"),Object(i.b)("li",{parentName:"ul"},"LDAP \u53ef\u4ee5\u7981\u6b62\u767b\u9646 - \u4f8b\u5982 \u53ea\u5141\u8bb8 OpenID \u767b\u9646"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/administration/auth/ldap.html"},"LDAP\u96c6\u6210")," ",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"CE \u7248\u672c\u53ea\u652f\u6301\u4f5c\u4e3a\u767b\u9646"),Object(i.b)("li",{parentName:"ul"},"EE \u652f\u6301\u540c\u6b65\u8d26\u53f7\u548c\u5206\u7ec4")))),Object(i.b)("h3",{id:"openid-connect"},"OpenID Connect"),Object(i.b)("h2",{id:"pages-\u914d\u7f6e"},"Pages \u914d\u7f6e"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u6ce8\u610f",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"\u4e0d\u80fd\u7528 gitlab \u7684\u4e8c\u7ea7\u57df\u540d"),Object(i.b)("li",{parentName:"ul"},"\u53ea\u80fd\u901a\u8fc7\u57df\u540d\u8bbf\u95ee"),Object(i.b)("li",{parentName:"ul"},"\u9ed8\u8ba4\u5b58\u50a8\u76ee\u5f55 ",Object(i.b)("inlineCode",{parentName:"li"},"/var/opt/gitlab/gitlab-rails/shared/pages")),Object(i.b)("li",{parentName:"ul"},"\u5982\u679c\u4f7f\u7528\u81ea\u5b9a\u4e49\u57df\u540d\uff0c\u5219\u53ef\u80fd\u9700\u8981\u5f00\u542f\u53cd\u5411\u7aef\u53e3"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://docs.gitlab.com/ee/administration/pages"},"Pages \u7ba1\u7406"))),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rb"},"# \u542f\u7528 Pages\ngitlab_pages['enable'] = true\n\n# \u8bbf\u95ee\u5730\u5740\n# \u4f8b\u5982\u9879\u76ee wener/app \u5219\u5730\u5740\u4e3a wener.pages.wener.me/app \u53ef\u4ee5\u6d4b\u8bd5\u8bbf\u95ee\n# curl -H 'Host: wener.pages.wener.me'  gitlab.wener.me/app\n# \u5982\u679c\u914d\u7f6e\u4e3a http \u9700\u8981\u914d\u7f6e\u8bc1\u4e66\u6216\u8005\u4f1a\u81ea\u52a8\u4ece let's encrypt \u83b7\u53d6\npages_external_url 'http://pages.wener.me'\n\n# \u5982\u679c\u914d\u7f6e\u4e3a https \u6ca1\u6709\u914d\u7f6e cert \u5219\u4f1a\u4f7f\u7528\u57df\u540d\u62fc \n# \u4f8b\u5982  \"/etc/gitlab/ssl/example.io.crt\"\n# \u5982\u679c\u60f3\u8981 https \u4f46\u662f\u53c8\u6ca1\u6709\u8bc1\u4e66\uff0c\u53ef\u4ee5\u8003\u8651\u914d\u7f6e\u4e3a\u4e3b\u57df\u540d\u8bc1\u4e66\uff0c\u7136\u540e\u5728\u5916\u9762\u53cd\u5411\u4ee3\u7406\u7684\u65f6\u5019\u5ffd\u7565\u9a8c\u8bc1\n# \u5982\u679c\u6ca1\u6709 cert \u4f1a\u4e00\u76f4\u5931\u8d25 cannot load certificate \"/etc/gitlab/ssl/pages.example.io.crt\"\npages_nginx['redirect_http_to_https'] = true\npages_nginx['ssl_certificate'] = \"/etc/gitlab/ssl/gitlab.example.com.crt\"\npages_nginx['ssl_certificate_key'] = \"/etc/gitlab/ssl/gitlab.example.com.key\"\n\n\n# \u67e5\u770b\u72b6\u6001\u7684\u8def\u5f84\ngitlab_pages['status_uri'] = \"/@status\"\n\n# \u907f\u514d bind mount - \u5728 docker \u91cc\u9ed8\u8ba4\u6ca1\u6709\u6743\u9650\n# \u4f1a mount \u5728 /var/opt/gitlab/gitlab-pages\ngitlab_pages['inplace_chroot'] = true\n\n# \u5b58\u50a8\u8def\u5f84\n# \u9ed8\u8ba4 /var/opt/gitlab/gitlab-rails/shared/pages\n# gitlab_rails['pages_path'] = \"/mnt/storage/pages\"\n\n# pages \u76d1\u542c\u7684\u7aef\u53e3\n# \u9ed8\u8ba4\u662f localhost:8090\n# \u4f8b\u5982\u9879\u76ee wener/app \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8bbf\u95ee - \u6ce8\u610f\u534f\u8bae\u662f HTTP \u548c\u914d\u7f6e\u7684\u5916\u90e8 URL \u6709\u5173\n# curl -H 'Host: wener.pages.wener.me'  localhost:8090/app\ngitlab_pages['listen_proxy'] = \"localhost:8090\"\n")),Object(i.b)("h2",{id:"gitlabrb"},"gitlab.rb"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-rb"},"### Email Settings\ngitlab_rails['gitlab_email_enabled'] = true\ngitlab_rails['gitlab_email_from'] = 'example@example.com'\ngitlab_rails['gitlab_email_display_name'] = 'Example'\ngitlab_rails['gitlab_email_reply_to'] = 'noreply@example.com'\ngitlab_rails['gitlab_email_subject_suffix'] = ''\n\n### GitLab user privileges\ngitlab_rails['gitlab_default_can_create_group'] = true\n# default true\ngitlab_rails['gitlab_username_changing_enabled'] = false\n\n# \u53cd\u5411\u4ee3\u7406\u5730\u5740\ngitlab_rails['trusted_proxies'] = []\n\n# \u76d1\u63a7\u767d\u540d\u5355\ngitlab_rails['monitoring_whitelist'] = ['127.0.0.0/8', '::1/128']\n\n#### Email account username\n####! **With third party providers, this is usually the full email address.**\n####! **With self-hosted email servers, this is usually the user part of the\n####!   email address.**\ngitlab_rails['incoming_email_email'] = \"gitlab-incoming@gmail.com\"\ngitlab_rails['incoming_email_password'] = \"[REDACTED]\"\n\n#### IMAP Settings\ngitlab_rails['incoming_email_host'] = \"imap.gmail.com\"\ngitlab_rails['incoming_email_port'] = 993\ngitlab_rails['incoming_email_ssl'] = true\ngitlab_rails['incoming_email_start_tls'] = false\n\n#### Incoming Mailbox Settings\n####! The mailbox where incoming mail will end up. Usually \"inbox\".\ngitlab_rails['incoming_email_mailbox_name'] = \"inbox\"\n####! The IDLE command timeout.\ngitlab_rails['incoming_email_idle_timeout'] = 60\n\n\n### Git LFS\ngitlab_rails['lfs_object_store_connection'] = {\n  'provider' => 'AWS',\n  'region' => 'eu-west-1',\n  'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',\n  'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',\n  # # The below options configure an S3 compatible host instead of AWS\n  # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.\n  # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces\n  # 'host' => 's3.amazonaws.com',\n  # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'\n}\n\n\n### GitLab uploads\n###! Docs: https://docs.gitlab.com/ee/administration/uploads.html\ngitlab_rails['uploads_object_store_connection'] = {\n  'provider' => 'AWS',\n  'region' => 'eu-west-1',\n  'aws_access_key_id' => 'AWS_ACCESS_KEY_ID',\n  'aws_secret_access_key' => 'AWS_SECRET_ACCESS_KEY',\n  # # The below options configure an S3 compatible host instead of AWS\n  # 'host' => 's3.amazonaws.com',\n  # 'aws_signature_version' => 4, # For creation of signed URLs. Set to 2 if provider does not support v4.\n  # 'endpoint' => 'https://s3.amazonaws.com', # default: nil - Useful for S3 compliant services such as DigitalOcean Spaces\n  # 'path_style' => false # Use 'host/bucket_name/object' instead of 'bucket_name.host/object'\n}\n\ngitlab_rails['mattermost_host'] = \"https://mattermost.example.com\"\n\n\n\n### LDAP Settings\n###! Docs: https://docs.gitlab.com/omnibus/settings/ldap.html\n###! **Be careful not to break the indentation in the ldap_servers block. It is\n###!   in yaml format and the spaces must be retained. Using tabs will not work.**\n\n# gitlab_rails['ldap_enabled'] = false\n\n###! **remember to close this block with 'EOS' below**\n# gitlab_rails['ldap_servers'] = YAML.load <<-'EOS'\n#   main: # 'main' is the GitLab 'provider ID' of this LDAP server\n#     label: 'LDAP'\n#     host: '_your_ldap_server'\n#     port: 389\n#     uid: 'sAMAccountName'\n#     bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'\n#     password: '_the_password_of_the_bind_user'\n#     encryption: 'plain' # \"start_tls\" or \"simple_tls\" or \"plain\"\n#     verify_certificates: true\n#     smartcard_auth: false\n#     active_directory: true\n#     allow_username_or_email_login: false\n#     lowercase_usernames: false\n#     block_auto_created_users: false\n#     base: ''\n#     user_filter: ''\n#     ## EE only\n#     group_base: ''\n#     admin_group: ''\n#     sync_ssh_keys: false\n#\n#   secondary: # 'secondary' is the GitLab 'provider ID' of second LDAP server\n#     label: 'LDAP'\n#     host: '_your_ldap_server'\n#     port: 389\n#     uid: 'sAMAccountName'\n#     bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'\n#     password: '_the_password_of_the_bind_user'\n#     encryption: 'plain' # \"start_tls\" or \"simple_tls\" or \"plain\"\n#     verify_certificates: true\n#     smartcard_auth: false\n#     active_directory: true\n#     allow_username_or_email_login: false\n#     lowercase_usernames: false\n#     block_auto_created_users: false\n#     base: ''\n#     user_filter: ''\n#     ## EE only\n#     group_base: ''\n#     admin_group: ''\n#     sync_ssh_keys: false\n# EOS\n\n### Backup Settings\n###! Docs: https://docs.gitlab.com/omnibus/settings/backups.html\n\n# gitlab_rails['manage_backup_path'] = true\n# gitlab_rails['backup_path'] = \"/var/opt/gitlab/backups\"\n\n###! The duration in seconds to keep backups before they are allowed to be deleted\n# gitlab_rails['backup_keep_time'] = 604800\n\n# gitlab_rails['backup_upload_connection'] = {\n#   'provider' => 'AWS',\n#   'region' => 'eu-west-1',\n#   'aws_access_key_id' => 'AKIAKIAKI',\n#   'aws_secret_access_key' => 'secret123'\n# }\n# gitlab_rails['backup_upload_remote_directory'] = 'my.s3.bucket'\n# gitlab_rails['backup_multipart_chunk_size'] = 104857600\n\n\n### Extra customization\ngitlab_rails['extra_google_analytics_id'] = '_your_tracking_id'\ngitlab_rails['extra_piwik_url'] = '_your_piwik_url'\ngitlab_rails['extra_piwik_site_id'] = '_your_piwik_site_id'\n\n##! Docs: https://docs.gitlab.com/omnibus/settings/environment-variables.html\n# gitlab_rails['env'] = {\n#   'BUNDLE_GEMFILE' => \"/opt/gitlab/embedded/service/gitlab-rails/Gemfile\",\n#   'PATH' => \"/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin\"\n# }\n\n\n#### Change the initial default admin password and shared runner registration tokens.\n####! **Only applicable on initial setup, changing these settings after database\n####!   is created and seeded won't yield any change.**\n# gitlab_rails['initial_root_password'] = \"password\"\n# gitlab_rails['initial_shared_runners_registration_token'] = \"token\"\n\n\n### GitLab database settings\n###! Docs: https://docs.gitlab.com/omnibus/settings/database.html\n###! **Only needed if you use an external database.**\ngitlab_rails['db_adapter'] = \"postgresql\"\ngitlab_rails['db_encoding'] = \"unicode\"\ngitlab_rails['db_collation'] = nil\ngitlab_rails['db_database'] = \"gitlabhq_production\"\ngitlab_rails['db_pool'] = 10\ngitlab_rails['db_username'] = \"gitlab\"\ngitlab_rails['db_password'] = nil\ngitlab_rails['db_host'] = nil\ngitlab_rails['db_port'] = 5432\ngitlab_rails['db_socket'] = nil\ngitlab_rails['db_sslmode'] = nil\ngitlab_rails['db_sslcompression'] = 0\ngitlab_rails['db_sslrootcert'] = nil\ngitlab_rails['db_prepared_statements'] = false\ngitlab_rails['db_statements_limit'] = 1000\n\n\n### GitLab Redis settings\n###! Connect to your own Redis instance\n###! Docs: https://docs.gitlab.com/omnibus/settings/redis.html\n\n#### Redis TCP connection\ngitlab_rails['redis_host'] = \"127.0.0.1\"\ngitlab_rails['redis_port'] = 6379\ngitlab_rails['redis_ssl'] = false\ngitlab_rails['redis_password'] = nil\ngitlab_rails['redis_database'] = 0\ngitlab_rails['redis_enable_client'] = true\n\n#### Redis local UNIX socket (will be disabled if TCP method is used)\ngitlab_rails['redis_socket'] = \"/var/opt/gitlab/redis/redis.socket\"\n\n### GitLab email server settings\n###! Docs: https://docs.gitlab.com/omnibus/settings/smtp.html\n###! **Use smtp instead of sendmail/postfix.**\n\ngitlab_rails['smtp_enable'] = true\ngitlab_rails['smtp_address'] = \"smtp.server\"\ngitlab_rails['smtp_port'] = 465\ngitlab_rails['smtp_user_name'] = \"smtp user\"\ngitlab_rails['smtp_password'] = \"smtp password\"\ngitlab_rails['smtp_domain'] = \"example.com\"\ngitlab_rails['smtp_authentication'] = \"login\"\ngitlab_rails['smtp_enable_starttls_auto'] = true\ngitlab_rails['smtp_tls'] = false\n\n###! **Can be: 'none', 'peer', 'client_once', 'fail_if_no_peer_cert'**\n###! Docs: http://api.rubyonrails.org/classes/ActionMailer/Base.html\n# gitlab_rails['smtp_openssl_verify_mode'] = 'none'\n\n# gitlab_rails['smtp_ca_path'] = \"/etc/ssl/certs\"\n# gitlab_rails['smtp_ca_file'] = \"/etc/ssl/certs/ca-certificates.crt\"\n\n################################################################################\n## Container Registry settings\n##! Docs: https://docs.gitlab.com/ce/administration/container_registry.html\n################################################################################\n\n# registry_external_url 'https://registry.gitlab.example.com'\n\n### Settings used by GitLab application\ngitlab_rails['registry_enabled'] = true\ngitlab_rails['registry_host'] = \"registry.gitlab.example.com\"\ngitlab_rails['registry_port'] = \"5005\"\ngitlab_rails['registry_path'] = \"/var/opt/gitlab/gitlab-rails/shared/registry\"\n\n################################################################################\n## Error Reporting and Logging with Sentry\n################################################################################\n# gitlab_rails['sentry_enabled'] = false\n# gitlab_rails['sentry_dsn'] = 'https://<key>@sentry.io/<project>'\n# gitlab_rails['sentry_clientside_dsn'] = 'https://<key>@sentry.io/<project>'\n# gitlab_rails['sentry_environment'] = 'production'\n\n################################################################################\n## GitLab Workhorse\n##! Docs: https://gitlab.com/gitlab-org/gitlab-workhorse/blob/master/README.md\n################################################################################\n\n# gitlab_workhorse['enable'] = true\n# gitlab_workhorse['ha'] = false\n# gitlab_workhorse['listen_network'] = \"unix\"\n# gitlab_workhorse['listen_umask'] = 000\n# gitlab_workhorse['listen_addr'] = \"/var/opt/gitlab/gitlab-workhorse/socket\"\n# gitlab_workhorse['auth_backend'] = \"http://localhost:8080\"\n\n################################################################\n## GitLab PostgreSQL\n################################################################\n\n###! Changing any of these settings requires a restart of postgresql.\n###! By default, reconfigure reloads postgresql if it is running. If you\n###! change any of these settings, be sure to run `gitlab-ctl restart postgresql`\n###! after reconfigure in order for the changes to take effect.\n# postgresql['enable'] = true\n# postgresql['listen_address'] = nil\n# postgresql['port'] = 5432\n# postgresql['data_dir'] = \"/var/opt/gitlab/postgresql/data\"\n\n##! **recommend value is 1/4 of total RAM, up to 14GB.**\n# postgresql['shared_buffers'] = \"256MB\"\n\n### Advanced settings\n# postgresql['ha'] = false\n# postgresql['dir'] = \"/var/opt/gitlab/postgresql\"\n# postgresql['log_directory'] = \"/var/log/gitlab/postgresql\"\n# postgresql['username'] = \"gitlab-psql\"\n# postgresql['group'] = \"gitlab-psql\"\n##! `SQL_USER_PASSWORD_HASH` can be generated using the command `gitlab-ctl pg-password-md5 gitlab`\n# postgresql['sql_user_password'] = 'SQL_USER_PASSWORD_HASH'\n# postgresql['uid'] = nil\n# postgresql['gid'] = nil\n# postgresql['shell'] = \"/bin/sh\"\n# postgresql['home'] = \"/var/opt/gitlab/postgresql\"\n# postgresql['user_path'] = \"/opt/gitlab/embedded/bin:/opt/gitlab/bin:$PATH\"\n# postgresql['sql_user'] = \"gitlab\"\n# postgresql['max_connections'] = 200\n# postgresql['md5_auth_cidr_addresses'] = []\n# postgresql['trust_auth_cidr_addresses'] = []\n# postgresql['wal_buffers'] = \"-1\"\n# postgresql['autovacuum_max_workers'] = \"3\"\n# postgresql['autovacuum_freeze_max_age'] = \"200000000\"\n# postgresql['log_statement'] = nil\n# postgresql['track_activity_query_size'] = \"1024\"\n# postgresql['shared_preload_libraries'] = nil\n# postgresql['dynamic_shared_memory_type'] = nil\n# postgresql['hot_standby'] = \"off\"\n\n### SSL settings\n# See https://www.postgresql.org/docs/9.6/static/runtime-config-connection.html#GUC-SSL-CERT-FILE for more details\n# postgresql['ssl'] = 'on'\n# postgresql['ssl_ciphers'] = 'HIGH:MEDIUM:+3DES:!aNULL:!SSLv3:!TLSv1'\n# postgresql['ssl_cert_file'] = 'server.crt'\n# postgresql['ssl_key_file'] = 'server.key'\n# postgresql['ssl_ca_file'] = '/opt/gitlab/embedded/ssl/certs/cacert.pem'\n# postgresql['ssl_crl_file'] = nil\n\n### Replication settings\n###! Note, some replication settings do not require a full restart. They are documented below.\n# postgresql['wal_level'] = \"hot_standby\"\n# postgresql['max_wal_senders'] = 5\n# postgresql['max_replication_slots'] = 0\n# postgresql['max_locks_per_transaction'] = 128\n\n# Backup/Archive settings\n# postgresql['archive_mode'] = \"off\"\n\n###! Changing any of these settings only requires a reload of postgresql. You do not need to\n###! restart postgresql if you change any of these and run reconfigure.\n# postgresql['work_mem'] = \"16MB\"\n# postgresql['maintenance_work_mem'] = \"16MB\"\n# postgresql['checkpoint_segments'] = 10\n# postgresql['checkpoint_timeout'] = \"5min\"\n# postgresql['checkpoint_completion_target'] = 0.9\n# postgresql['effective_io_concurrency'] = 1\n# postgresql['checkpoint_warning'] = \"30s\"\n# postgresql['effective_cache_size'] = \"1MB\"\n# postgresql['shmmax'] =  17179869184 # or 4294967295\n# postgresql['shmall'] =  4194304 # or 1048575\n# postgresql['autovacuum'] = \"on\"\n# postgresql['log_autovacuum_min_duration'] = \"-1\"\n# postgresql['autovacuum_naptime'] = \"1min\"\n# postgresql['autovacuum_vacuum_threshold'] = \"50\"\n# postgresql['autovacuum_analyze_threshold'] = \"50\"\n# postgresql['autovacuum_vacuum_scale_factor'] = \"0.02\"\n# postgresql['autovacuum_analyze_scale_factor'] = \"0.01\"\n# postgresql['autovacuum_vacuum_cost_delay'] = \"20ms\"\n# postgresql['autovacuum_vacuum_cost_limit'] = \"-1\"\n# postgresql['statement_timeout'] = \"60000\"\n# postgresql['idle_in_transaction_session_timeout'] = \"60000\"\n# postgresql['log_line_prefix'] = \"%a\"\n# postgresql['max_worker_processes'] = 8\n# postgresql['max_parallel_workers_per_gather'] = 0\n# postgresql['log_lock_waits'] = 1\n# postgresql['deadlock_timeout'] = '5s'\n# postgresql['track_io_timing'] = 0\n# postgresql['default_statistics_target'] = 1000\n\n### Available in PostgreSQL 9.6 and later\n# postgresql['min_wal_size'] = 80MB\n# postgresql['max_wal_size'] = 1GB\n\n# Backup/Archive settings\n# postgresql['archive_command'] = nil\n# postgresql['archive_timeout'] = \"0\"\n\n### Replication settings\n# postgresql['sql_replication_user'] = \"gitlab_replicator\"\n# postgresql['sql_replication_password'] = \"md5 hash of postgresql password\" # You can generate with `gitlab-ctl pg-password-md5 <dbuser>`\n# postgresql['wal_keep_segments'] = 10\n# postgresql['max_standby_archive_delay'] = \"30s\"\n# postgresql['max_standby_streaming_delay'] = \"30s\"\n# postgresql['synchronous_commit'] = on\n# postgresql['synchronous_standby_names'] = ''\n# postgresql['hot_standby_feedback'] = 'off'\n# postgresql['random_page_cost'] = 2.0\n# postgresql['log_temp_files'] = -1\n# postgresql['log_checkpoints'] = 'off'\n# To add custom entries to pg_hba.conf use the following\n# postgresql['custom_pg_hba_entries'] = {\n#   APPLICATION: [ # APPLICATION should identify what the settings are used for\n#     {\n#       type: example,\n#       database: example,\n#       user: example,\n#       cidr: example,\n#       method: example,\n#       option: example\n#     }\n#   ]\n# }\n# See https://www.postgresql.org/docs/9.6/static/auth-pg-hba-conf.html for an explanation\n# of the values\n\n\n################################################################################\n## GitLab Redis\n##! **Can be disabled if you are using your own Redis instance.**\n##! Docs: https://docs.gitlab.com/omnibus/settings/redis.html\n################################################################################\n\n# redis['enable'] = true\n# redis['ha'] = false\n# redis['hz'] = 10\n# redis['dir'] = \"/var/opt/gitlab/redis\"\n# redis['log_directory'] = \"/var/log/gitlab/redis\"\n# redis['username'] = \"gitlab-redis\"\n# redis['group'] = \"gitlab-redis\"\n# redis['maxclients'] = \"10000\"\n# redis['maxmemory'] = \"0\"\n# redis['maxmemory_policy'] = \"noeviction\"\n# redis['maxmemory_samples'] = \"5\"\n# redis['tcp_backlog'] = 511\n# redis['tcp_timeout'] = \"60\"\n# redis['tcp_keepalive'] = \"300\"\n# redis['uid'] = nil\n# redis['gid'] = nil\n\n### Disable or obfuscate unnecessary redis command names\n### Uncomment and edit this block to add or remove entries.\n### See https://docs.gitlab.com/omnibus/settings/redis.html#renamed-commands\n### for detailed usage\n###  \n# redis['rename_commands'] = {\n#   'KEYS': ''\n#}\n#\n\n###! **To enable only Redis service in this machine, uncomment\n###!   one of the lines below (choose master or slave instance types).**\n###! Docs: https://docs.gitlab.com/omnibus/settings/redis.html\n###!       https://docs.gitlab.com/ce/administration/high_availability/redis.html\n# redis_master_role['enable'] = true\n# redis_slave_role['enable'] = true\n\n### Redis TCP support (will disable UNIX socket transport)\n# redis['bind'] = '0.0.0.0' # or specify an IP to bind to a single one\n# redis['port'] = 6379\n# redis['password'] = 'redis-password-goes-here'\n\n### Redis Sentinel support\n###! **You need a master slave Redis replication to be able to do failover**\n###! **Please read the documentation before enabling it to understand the\n###!   caveats:**\n###! Docs: https://docs.gitlab.com/ce/administration/high_availability/redis.html\n\n### Replication support\n#### Slave Redis instance\n# redis['master'] = false # by default this is true\n\n#### Slave and Sentinel shared configuration\n####! **Both need to point to the master Redis instance to get replication and\n####!   heartbeat monitoring**\n# redis['master_name'] = 'gitlab-redis'\n# redis['master_ip'] = nil\n# redis['master_port'] = 6379\n\n#### Support to run redis slaves in a Docker or NAT environment\n####! Docs: https://redis.io/topics/replication#configuring-replication-in-docker-and-nat\n# redis['announce_ip'] = nil\n# redis['announce_port'] = nil\n\n####! **Master password should have the same value defined in\n####!   redis['password'] to enable the instance to transition to/from\n####!   master/slave in a failover event.**\n# redis['master_password'] = 'redis-password-goes-here'\n\n####! Increase these values when your slaves can't catch up with master\n# redis['client_output_buffer_limit_normal'] = '0 0 0'\n# redis['client_output_buffer_limit_slave'] = '256mb 64mb 60'\n# redis['client_output_buffer_limit_pubsub'] = '32mb 8mb 60'\n\n#####! Redis snapshotting frequency\n#####! Set to [] to disable\n#####! Set to [''] to clear previously set values\n# redis['save'] = [ '900 1', '300 10', '60 10000' ]\n\n################################################################################\n## GitLab Web server\n##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#using-a-non-bundled-web-server\n################################################################################\n\n##! When bundled nginx is disabled we need to add the external webserver user to\n##! the GitLab webserver group.\n# web_server['external_users'] = []\n# web_server['username'] = 'gitlab-www'\n# web_server['group'] = 'gitlab-www'\n# web_server['uid'] = nil\n# web_server['gid'] = nil\n# web_server['shell'] = '/bin/false'\n# web_server['home'] = '/var/opt/gitlab/nginx'\n\n################################################################################\n## GitLab NGINX\n##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html\n################################################################################\n\n# nginx['enable'] = true\n# nginx['client_max_body_size'] = '250m'\n# nginx['redirect_http_to_https'] = false\n# nginx['redirect_http_to_https_port'] = 80\n\n##! Most root CA's are included by default\n# nginx['ssl_client_certificate'] = \"/etc/gitlab/ssl/ca.crt\"\n\n##! enable/disable 2-way SSL client authentication\n# nginx['ssl_verify_client'] = \"off\"\n\n##! if ssl_verify_client on, verification depth in the client certificates chain\n# nginx['ssl_verify_depth'] = \"1\"\n\n# nginx['ssl_certificate'] = \"/etc/gitlab/ssl/#{node['fqdn']}.crt\"\n# nginx['ssl_certificate_key'] = \"/etc/gitlab/ssl/#{node['fqdn']}.key\"\n# nginx['ssl_ciphers'] = \"ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256\"\n# nginx['ssl_prefer_server_ciphers'] = \"on\"\n\n##! **Recommended by: https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n##!                   https://cipherli.st/**\n# nginx['ssl_protocols'] = \"TLSv1.2 TLSv1.3\"\n\n##! **Recommended in: https://nginx.org/en/docs/http/ngx_http_ssl_module.html**\n# nginx['ssl_session_cache'] = \"builtin:1000  shared:SSL:10m\"\n\n##! **Default according to https://nginx.org/en/docs/http/ngx_http_ssl_module.html**\n# nginx['ssl_session_timeout'] = \"5m\"\n\n# nginx['ssl_dhparam'] = nil # Path to dhparams.pem, eg. /etc/gitlab/ssl/dhparams.pem\n# nginx['listen_addresses'] = ['*', '[::]']\n\n##! **Defaults to forcing web browsers to always communicate using only HTTPS**\n##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#setting-http-strict-transport-security\n# nginx['hsts_max_age'] = 31536000\n# nginx['hsts_include_subdomains'] = false\n\n##! Defaults to stripping path information when making cross-origin requests\n# nginx['referrer_policy'] = 'strict-origin-when-cross-origin'\n\n##! **Docs: http://nginx.org/en/docs/http/ngx_http_gzip_module.html**\n# nginx['gzip_enabled'] = true\n\n##! **Override only if you use a reverse proxy**\n##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#setting-the-nginx-listen-port\n# nginx['listen_port'] = nil\n\n##! **Override only if your reverse proxy internally communicates over HTTP**\n##! Docs: https://docs.gitlab.com/omnibus/settings/nginx.html#supporting-proxied-ssl\n# nginx['listen_https'] = nil\n\n# nginx['custom_gitlab_server_config'] = \"location ^~ /foo-namespace/bar-project/raw/ {\\n deny all;\\n}\\n\"\n# nginx['custom_nginx_config'] = \"include /etc/nginx/conf.d/example.conf;\"\n# nginx['proxy_read_timeout'] = 3600\n# nginx['proxy_connect_timeout'] = 300\n# nginx['proxy_set_headers'] = {\n#  \"Host\" => \"$http_host_with_default\",\n#  \"X-Real-IP\" => \"$remote_addr\",\n#  \"X-Forwarded-For\" => \"$proxy_add_x_forwarded_for\",\n#  \"X-Forwarded-Proto\" => \"https\",\n#  \"X-Forwarded-Ssl\" => \"on\",\n#  \"Upgrade\" => \"$http_upgrade\",\n#  \"Connection\" => \"$connection_upgrade\"\n# }\n# nginx['proxy_cache_path'] = 'proxy_cache keys_zone=gitlab:10m max_size=1g levels=1:2'\n# nginx['proxy_cache'] = 'gitlab'\n# nginx['http2_enabled'] = true\n# nginx['real_ip_trusted_addresses'] = []\n# nginx['real_ip_header'] = nil\n# nginx['real_ip_recursive'] = nil\n# nginx['custom_error_pages'] = {\n#   '404' => {\n#     'title' => 'Example title',\n#     'header' => 'Example header',\n#     'message' => 'Example message'\n#   }\n# }\n\n### Advanced settings\n# nginx['dir'] = \"/var/opt/gitlab/nginx\"\n# nginx['log_directory'] = \"/var/log/gitlab/nginx\"\n# nginx['worker_processes'] = 4\n# nginx['worker_connections'] = 10240\n# nginx['log_format'] = '$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\"'\n# nginx['sendfile'] = 'on'\n# nginx['tcp_nopush'] = 'on'\n# nginx['tcp_nodelay'] = 'on'\n# nginx['gzip'] = \"on\"\n# nginx['gzip_http_version'] = \"1.0\"\n# nginx['gzip_comp_level'] = \"2\"\n# nginx['gzip_proxied'] = \"any\"\n# nginx['gzip_types'] = [ \"text/plain\", \"text/css\", \"application/x-javascript\", \"text/xml\", \"application/xml\", \"application/xml+rss\", \"text/javascript\", \"application/json\" ]\n# nginx['keepalive_timeout'] = 65\n# nginx['cache_max_size'] = '5000m'\n# nginx['server_names_hash_bucket_size'] = 64\n##! These paths have proxy_request_buffering disabled\n# nginx['request_buffering_off_path_regex'] = \"\\.git/git-receive-pack$|\\.git/info/refs?service=git-receive-pack$|\\.git/gitlab-lfs/objects|\\.git/info/lfs/objects/batch$\"\n\n### Nginx status\n# nginx['status'] = {\n#  \"enable\" => true,\n#  \"listen_addresses\" => [\"127.0.0.1\"],\n#  \"fqdn\" => \"dev.example.com\",\n#  \"port\" => 9999,\n#  \"vts_enable\" => true,\n#  \"options\" => {\n#    \"stub_status\" => \"on\", # Turn on stats\n#    \"server_tokens\" => \"off\", # Don't show the version of NGINX\n#    \"access_log\" => \"off\", # Disable logs for stats\n#    \"allow\" => \"127.0.0.1\", # Only allow access from localhost\n#    \"deny\" => \"all\" # Deny access to anyone else\n#  }\n# }\n\n################################################################################\n## GitLab Logging\n##! Docs: https://docs.gitlab.com/omnibus/settings/logs.html\n################################################################################\n\n# logging['svlogd_size'] = 200 * 1024 * 1024 # rotate after 200 MB of log data\n# logging['svlogd_num'] = 30 # keep 30 rotated log files\n# logging['svlogd_timeout'] = 24 * 60 * 60 # rotate after 24 hours\n# logging['svlogd_filter'] = \"gzip\" # compress logs with gzip\n# logging['svlogd_udp'] = nil # transmit log messages via UDP\n# logging['svlogd_prefix'] = nil # custom prefix for log messages\n# logging['logrotate_frequency'] = \"daily\" # rotate logs daily\n# logging['logrotate_maxsize'] = nil # rotate logs when they grow bigger than size bytes even before the specified time interval (daily, weekly, monthly, or yearly)\n# logging['logrotate_size'] = nil # do not rotate by size by default\n# logging['logrotate_rotate'] = 30 # keep 30 rotated logs\n# logging['logrotate_compress'] = \"compress\" # see 'man logrotate'\n# logging['logrotate_method'] = \"copytruncate\" # see 'man logrotate'\n# logging['logrotate_postrotate'] = nil # no postrotate command by default\n# logging['logrotate_dateformat'] = nil # use date extensions for rotated files rather than numbers e.g. a value of \"-%Y-%m-%d\" would give rotated files like production.log-2016-03-09.gz\n\n### UDP log forwarding\n##! Docs: http://docs.gitlab.com/omnibus/settings/logs.html#udp-log-forwarding\n\n##! remote host to ship log messages to via UDP\n# logging['udp_log_shipping_host'] = nil\n\n##! override the hostname used when logs are shipped via UDP,\n##  by default the system hostname will be used.\n# logging['udp_log_shipping_hostname'] = nil\n\n##! remote port to ship log messages to via UDP\n# logging['udp_log_shipping_port'] = 514\n\n################################################################################\n## Logrotate\n##! Docs: https://docs.gitlab.com/omnibus/settings/logs.html#logrotate\n##! You can disable built in logrotate feature.\n################################################################################\n# logrotate['enable'] = true\n\n################################################################################\n## Users and groups accounts\n##! Disable management of users and groups accounts.\n##! **Set only if creating accounts manually**\n##! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#disable-user-and-group-account-management\n################################################################################\n\n# manage_accounts['enable'] = false\n\n################################################################################\n## Storage directories\n##! Disable managing storage directories\n##! Docs: https://docs.gitlab.com/omnibus/settings/configuration.html#disable-storage-directories-management\n################################################################################\n\n##! **Set only if the select directories are created manually**\n# manage_storage_directories['enable'] = false\n# manage_storage_directories['manage_etc'] = false\n\n################################################################################\n## Runtime directory\n##! Docs: https://docs.gitlab.com//omnibus/settings/configuration.html#configuring-runtime-directory\n################################################################################\n\n# runtime_dir '/run'\n\n################################################################################\n## Git\n##! Advanced setting for configuring git system settings for omnibus-gitlab\n##! internal git\n################################################################################\n\n##! For multiple options under one header use array of comma separated values,\n##! eg.:\n##! { \"receive\" => [\"fsckObjects = true\"], \"alias\" => [\"st = status\", \"co = checkout\"] }\n\n# omnibus_gitconfig['system'] = {\n#  \"pack\" => [\"threads = 1\"],\n#  \"receive\" => [\"fsckObjects = true\", \"advertisePushOptions = true\"],\n#  \"repack\" => [\"writeBitmaps = true\"],\n#  \"transfer\" => [\"hideRefs=^refs/tmp/\", \"hideRefs=^refs/keep-around/\", \"hideRefs=^refs/remotes/\"],\n# }\n\n################################################################################\n## GitLab Pages\n##! Docs: https://docs.gitlab.com/ce/pages/administration.html\n################################################################################\n\n##! Define to enable GitLab Pages\n# pages_external_url \"http://pages.example.com/\"\n# gitlab_pages['enable'] = false\n\n##! Configure to expose GitLab Pages on external IP address, serving the HTTP\n# gitlab_pages['external_http'] = []\n\n##! Configure to expose GitLab Pages on external IP address, serving the HTTPS\n# gitlab_pages['external_https'] = []\n\n##! Configure to use the default list of cipher suites\n# gitlab_pages['insecure_ciphers'] = false\n\n##! Configure to enable health check endpoint on GitLab Pages\n# gitlab_pages['status_uri'] = \"/@status\"\n\n##! Tune the maximum number of concurrent connections GitLab Pages will handle.\n##! This should be in the range 1 - 10000, defaulting to 5000.\n# gitlab_pages['max_connections'] = 5000\n\n##! Configure to use JSON structured logging in GitLab Pages\n# gitlab_pages['log_format'] = \"json\"\n\n##! Configure verbose logging for GitLab Pages\n# gitlab_pages['log_verbose'] = false\n\n##! Error Reporting and Logging with Sentry\n# gitlab_pages['sentry_enabled'] = false\n# gitlab_pages['sentry_dsn'] = 'https://<key>@sentry.io/<project>'\n# gitlab_pages['sentry_environment'] = 'production'\n\n##! Listen for requests forwarded by reverse proxy\n# gitlab_pages['listen_proxy'] = \"localhost:8090\"\n\n##! Configure GitLab Pages to use an HTTP Proxy\n# gitlab_pages['http_proxy'] = \"http://example:8080\"\n\n# gitlab_pages['redirect_http'] = true\n# gitlab_pages['use_http2'] = true\n# gitlab_pages['dir'] = \"/var/opt/gitlab/gitlab-pages\"\n# gitlab_pages['log_directory'] = \"/var/log/gitlab/gitlab-pages\"\n\n# gitlab_pages['artifacts_server'] = true\n# gitlab_pages['artifacts_server_url'] = nil # Defaults to external_url + '/api/v4'\n# gitlab_pages['artifacts_server_timeout'] = 10\n\n##! Environments that do not support bind-mounting should set this parameter to\n##! true. This is incompatible with the artifacts server\n# gitlab_pages['inplace_chroot'] = false\n\n##! Prometheus metrics for Pages docs: https://gitlab.com/gitlab-org/gitlab-pages/#enable-prometheus-metrics\n# gitlab_pages['metrics_address'] = \":9235\"\n\n##! Specifies the minimum SSL/TLS version (\"ssl3\", \"tls1.0\", \"tls1.1\" or \"tls1.2\")\n# gitlab_pages['tls_min_version'] = \"ssl3\"\n\n##! Specifies the maximum SSL/TLS version (\"ssl3\", \"tls1.0\", \"tls1.1\" or \"tls1.2\")\n# gitlab_pages['tls_max_version'] = \"tls1.2\"\n\n##! Configure the pages admin API\n# gitlab_pages['admin_secret_token'] = 'custom secret'\n# gitlab_pages['admin_https_listener'] = '0.0.0.0:5678'\n# gitlab_pages['admin_https_cert'] = '/etc/gitlab/pages-admin.crt'\n# gitlab_pages['admin_https_key'] = '/etc/gitlab/pages-admin.key'\n\n##! Client side configuration for gitlab-pages admin API, in case pages runs on a different host\n# gitlab_rails['pages_admin_address'] = 'pages.gitlab.example.com:5678'\n# gitlab_rails['pages_admin_certificate'] = '/etc/gitlab/pages-admin.crt'\n\n##! Pages access control\n# gitlab_pages['access_control'] = false\n# gitlab_pages['gitlab_id'] = nil # Automatically generated if not present\n# gitlab_pages['gitlab_secret'] = nil # Generated if not present\n# gitlab_pages['auth_redirect_uri'] = nil # Defaults to projects subdomain of pages_external_url and + '/auth'\n# gitlab_pages['gitlab_server'] = nil # Defaults to external_url\n# gitlab_pages['auth_secret'] = nil # Generated if not present\n\n##! Define custom gitlab-pages HTTP headers for the whole instance\n# gitlab_pages['headers'] = []\n\n################################################################################\n## GitLab Pages NGINX\n################################################################################\n\n# All the settings defined in the \"GitLab Nginx\" section are also available in\n# this \"GitLab Pages NGINX\" section, using the key `pages_nginx`.  However,\n# those settings should be explicitly set. That is, settings given as\n# `nginx['some_setting']` WILL NOT be automatically replicated as\n# `pages_nginx['some_setting']` and should be set separately.\n\n# Below you can find settings that are exclusive to \"GitLab Pages NGINX\"\n# pages_nginx['enable'] = false\n\n# gitlab_rails['pages_path'] = \"/var/opt/gitlab/gitlab-rails/shared/pages\"\n\n################################################################################\n## GitLab CI\n##! Docs: https://docs.gitlab.com/ce/ci/quick_start/README.html\n################################################################################\n\n# gitlab_ci['gitlab_ci_all_broken_builds'] = true\n# gitlab_ci['gitlab_ci_add_pusher'] = true\n# gitlab_ci['builds_directory'] = '/var/opt/gitlab/gitlab-ci/builds'\n\n\n")))}c.isMDXComponent=!0},999:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var s=n(0),a=n.n(s);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},i=Object.keys(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var g=a.a.createContext({}),c=function(e){var t=a.a.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.a.createElement(g.Provider,{value:t},e.children)},_={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,r=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),p=c(n),b=s,d=p["".concat(r,".").concat(b)]||p[b]||_[b]||i;return n?a.a.createElement(d,l(l({ref:t},g),{},{components:n})):a.a.createElement(d,l({ref:t},g))}));function d(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,r=new Array(i);r[0]=b;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:s,r[1]=l;for(var g=2;g<i;g++)r[g]=n[g];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);