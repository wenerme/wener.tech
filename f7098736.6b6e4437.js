(window.webpackJsonp=window.webpackJsonp||[]).push([[1040],{1113:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return l})),a.d(e,"metadata",(function(){return p})),a.d(e,"toc",(function(){return i})),a.d(e,"default",(function(){return o}));var n=a(3),r=a(8),b=(a(0),a(1152)),l={title:"PostgreSQL Extension"},p={unversionedId:"db/relational/postgresql/postgresql-extension",id:"db/relational/postgresql/postgresql-extension",isDocsHomePage:!1,title:"PostgreSQL Extension",description:"- pgpartman/pgpartman",source:"@site/notes/db/relational/postgresql/postgresql-extension.md",slug:"/db/relational/postgresql/postgresql-extension",permalink:"/notes/db/relational/postgresql/postgresql-extension",editUrl:"https://github.com/wenerme/wener/edit/master/notes/db/relational/postgresql/postgresql-extension.md",version:"current",sidebar:"docs",previous:{title:"\u6570\u636e\u7c7b\u578b",permalink:"/notes/db/relational/postgresql/datatype"},next:{title:"\u5e38\u89c1\u95ee\u9898",permalink:"/notes/db/relational/postgresql/faq"}},i=[],c={toc:i};function o(t){var e=t.components,a=Object(r.a)(t,["components"]);return Object(b.b)("wrapper",Object(n.a)({},c,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",{parentName:"li",href:"https://github.com/pgpartman/pg_partman"},"pgpartman/pg_partman"),"\nPartition management extension for PostgreSQL"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",{parentName:"li",href:"https://github.com/omniti-labs/pg_jobmon"},"omniti-labs/pg_jobmon"),"\nPostgreSQL Extension for logging and monitoring automated jobs"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",{parentName:"li",href:"https://github.com/2ndQuadrant/repmgr"},"2ndQuadrant/repmgr")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",{parentName:"li",href:"https://github.com/xocolatl/periods"},"xocolatl/periods"),"\nPERIODs and SYSTEM VERSIONING for PostgreSQL"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",{parentName:"li",href:"https://github.com/dimitri/pgextwlist"},"dimitri/pgextwlist"),"\nPostgreSQL Extension Whitelisting"),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",{parentName:"li",href:"https://github.com/pgq/pgq"},"pgq/pgq"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"FDW")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"dblink"),Object(b.b)("td",{parentName:"tr",align:null},"connect to other PostgreSQL databases from within a database")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"file_fdw"),Object(b.b)("td",{parentName:"tr",align:null},"foreign-data wrapper for flat file access")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"hstore"),Object(b.b)("td",{parentName:"tr",align:null},"data type for storing sets of (key, value) pairs")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"hstore_pllua"),Object(b.b)("td",{parentName:"tr",align:null},"Hstore transform for Lua")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"hstore_plluau"),Object(b.b)("td",{parentName:"tr",align:null},"Hstore transform for untrusted Lua")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"hstore_plpython3u"),Object(b.b)("td",{parentName:"tr",align:null},"transform between hstore and plpython3u")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgres_fdw"),Object(b.b)("td",{parentName:"tr",align:null},"foreign-data wrapper for remote PostgreSQL servers")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"DateType")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"citext"),Object(b.b)("td",{parentName:"tr",align:null},"data type for case-insensitive character strings")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"cube"),Object(b.b)("td",{parentName:"tr",align:null},"data type for multidimensional cubes")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"isn"),Object(b.b)("td",{parentName:"tr",align:null},"data types for international product numbering standards")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"ltree"),Object(b.b)("td",{parentName:"tr",align:null},"data type for hierarchical tree-like structures")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"ltree_plpython3u"),Object(b.b)("td",{parentName:"tr",align:null},"transform between ltree and plpython3u")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Index")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"bloom"),Object(b.b)("td",{parentName:"tr",align:null},"bloom access method - signature file based index")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"btree_gin"),Object(b.b)("td",{parentName:"tr",align:null},"support for indexing common datatypes in GIN")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"btree_gist"),Object(b.b)("td",{parentName:"tr",align:null},"support for indexing common datatypes in GiST")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"hypopg"),Object(b.b)("td",{parentName:"tr",align:null},"Hypothetical indexes for PostgreSQL")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"\u529f\u80fd")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"pg_cron"),Object(b.b)("td",{parentName:"tr",align:null},"Job scheduler for PostgreSQL")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"DB")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"timescaledb"),Object(b.b)("td",{parentName:"tr",align:null},"Enables scalable inserts and complex queries for time-series data")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"pgq"),Object(b.b)("td",{parentName:"tr",align:null},"Generic queue for PostgreSQL")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"PL")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"pldbgapi"),Object(b.b)("td",{parentName:"tr",align:null},"server-side support for debugging PL/pgSQL functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"pllua"),Object(b.b)("td",{parentName:"tr",align:null},"Lua as a procedural language")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"plluau"),Object(b.b)("td",{parentName:"tr",align:null},"Lua as an untrusted procedural language")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"plpgsql"),Object(b.b)("td",{parentName:"tr",align:null},"PL/pgSQL procedural language")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"plpgsql_check"),Object(b.b)("td",{parentName:"tr",align:null},"extended check for plpgsql functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"plprofiler"),Object(b.b)("td",{parentName:"tr",align:null},"server-side support for profiling PL/pgSQL functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"plproxy"),Object(b.b)("td",{parentName:"tr",align:null},"Database partitioning implemented as procedural language")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"plpython3u"),Object(b.b)("td",{parentName:"tr",align:null},"PL/Python3U untrusted procedural language")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"pltcl"),Object(b.b)("td",{parentName:"tr",align:null},"PL/Tcl procedural language")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"pltclu"),Object(b.b)("td",{parentName:"tr",align:null},"PL/TclU untrusted procedural language")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"postgis")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:null},"name"),Object(b.b)("th",{parentName:"tr",align:null},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS geometry and geography spatial types and functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_raster"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS raster types and functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_raster-3"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS raster types and functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_sfcgal"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS SFCGAL functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_sfcgal-3"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS SFCGAL functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_tiger_geocoder"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS tiger geocoder and reverse geocoder")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_tiger_geocoder-3"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS tiger geocoder and reverse geocoder")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_topology"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS topology spatial types and functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis_topology-3"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS topology spatial types and functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:null},"postgis-3"),Object(b.b)("td",{parentName:"tr",align:null},"PostGIS geometry and geography spatial types and functions")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"MISC")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"left"},"name"),Object(b.b)("th",{parentName:"tr",align:"left"},"desc"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"address_standardizer"),Object(b.b)("td",{parentName:"tr",align:"left"},"Used to parse an address into constituent elements. Generally used to support geocoding address normalization step.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"address_standardizer_data_us"),Object(b.b)("td",{parentName:"tr",align:"left"},"Address Standardizer US dataset example")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"address_standardizer_data_us-3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Address Standardizer US dataset example")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"address_standardizer-3"),Object(b.b)("td",{parentName:"tr",align:"left"},"Used to parse an address into constituent elements. Generally used to support geocoding address normalization step.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"adminpack"),Object(b.b)("td",{parentName:"tr",align:"left"},"administrative functions for PostgreSQL")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"amcheck"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions for verifying relation integrity")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"autoinc"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions for autoincrementing fields")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"decoderbufs"),Object(b.b)("td",{parentName:"tr",align:"left"},"Logical decoding plugin that delivers WAL stream changes using a Protocol Buffer format")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"dict_int"),Object(b.b)("td",{parentName:"tr",align:"left"},"text search dictionary template for integers")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"dict_xsyn"),Object(b.b)("td",{parentName:"tr",align:"left"},"text search dictionary template for extended synonym processing")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"earthdistance"),Object(b.b)("td",{parentName:"tr",align:"left"},"calculate great-circle distances on the surface of the Earth")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"fuzzystrmatch"),Object(b.b)("td",{parentName:"tr",align:"left"},"determine similarities and distance between strings")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"insert_username"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions for tracking who changed a table")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"intagg"),Object(b.b)("td",{parentName:"tr",align:"left"},"integer aggregator and enumerator (obsolete)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"intarray"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions, operators, and index support for 1-D arrays of integers")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"jsonb_plpython3u"),Object(b.b)("td",{parentName:"tr",align:"left"},"transform between jsonb and plpython3u")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"lo"),Object(b.b)("td",{parentName:"tr",align:"left"},"Large Object maintenance")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"moddatetime"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions for tracking last modification time")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pageinspect"),Object(b.b)("td",{parentName:"tr",align:"left"},"inspect the contents of database pages at a low level")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_auth_mon"),Object(b.b)("td",{parentName:"tr",align:"left"},"monitor connection attempts per user")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_buffercache"),Object(b.b)("td",{parentName:"tr",align:"left"},"examine the shared buffer cache")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_freespacemap"),Object(b.b)("td",{parentName:"tr",align:"left"},"examine the free space map (FSM)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_mon"),Object(b.b)("td",{parentName:"tr",align:"left"},"monitor queries")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_partman"),Object(b.b)("td",{parentName:"tr",align:"left"},"Extension to manage partitioned tables by time or ID")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_permissions"),Object(b.b)("td",{parentName:"tr",align:"left"},"view object permissions and compare them with the desired state")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_prewarm"),Object(b.b)("td",{parentName:"tr",align:"left"},"prewarm relation data")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_repack"),Object(b.b)("td",{parentName:"tr",align:"left"},"Reorganize tables in PostgreSQL databases with minimal locks")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_stat_kcache"),Object(b.b)("td",{parentName:"tr",align:"left"},"Kernel statistics gathering")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_stat_statements"),Object(b.b)("td",{parentName:"tr",align:"left"},"track planning and execution statistics of all SQL statements executed")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_trgm"),Object(b.b)("td",{parentName:"tr",align:"left"},"text similarity measurement and index searching based on trigrams")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pg_visibility"),Object(b.b)("td",{parentName:"tr",align:"left"},"examine the visibility map (VM) and page-level visibility info")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pgaudit"),Object(b.b)("td",{parentName:"tr",align:"left"},"provides auditing functionality")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pgcrypto"),Object(b.b)("td",{parentName:"tr",align:"left"},"cryptographic functions")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pgl_ddl_deploy"),Object(b.b)("td",{parentName:"tr",align:"left"},"automated ddl deployment using pglogical")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pglogical"),Object(b.b)("td",{parentName:"tr",align:"left"},"PostgreSQL Logical Replication")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pglogical_origin"),Object(b.b)("td",{parentName:"tr",align:"left"},"Dummy extension for compatibility when upgrading from Postgres 9.4")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pglogical_ticker"),Object(b.b)("td",{parentName:"tr",align:"left"},"Have an accurate view on pglogical replication delay")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pgrowlocks"),Object(b.b)("td",{parentName:"tr",align:"left"},"show row-level locking information")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"pgstattuple"),Object(b.b)("td",{parentName:"tr",align:"left"},"show tuple-level statistics")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"refint"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions for implementing referential integrity (obsolete)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"seg"),Object(b.b)("td",{parentName:"tr",align:"left"},"data type for representing line segments or floating-point intervals")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"set_user"),Object(b.b)("td",{parentName:"tr",align:"left"},"similar to SET ROLE but with added logging")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"sslinfo"),Object(b.b)("td",{parentName:"tr",align:"left"},"information about SSL certificates")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tablefunc"),Object(b.b)("td",{parentName:"tr",align:"left"},"functions that manipulate whole tables, including crosstab")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tcn"),Object(b.b)("td",{parentName:"tr",align:"left"},"Triggered change notifications")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tsm_system_rows"),Object(b.b)("td",{parentName:"tr",align:"left"},"TABLESAMPLE method which accepts number of rows as a limit")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"tsm_system_time"),Object(b.b)("td",{parentName:"tr",align:"left"},"TABLESAMPLE method which accepts time in milliseconds as a limit")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"unaccent"),Object(b.b)("td",{parentName:"tr",align:"left"},"text search dictionary that removes accents")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"uuid-ossp"),Object(b.b)("td",{parentName:"tr",align:"left"},"generate universally unique identifiers (UUIDs)")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"left"},"xml2"),Object(b.b)("td",{parentName:"tr",align:"left"},"XPath querying and XSLT")))))}o.isMDXComponent=!0},1152:function(t,e,a){"use strict";a.d(e,"a",(function(){return d})),a.d(e,"b",(function(){return g}));var n=a(0),r=a.n(n);function b(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function p(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){b(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},b=Object.keys(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(t);for(n=0;n<b.length;n++)a=b[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var c=r.a.createContext({}),o=function(t){var e=r.a.useContext(c),a=e;return t&&(a="function"==typeof t?t(e):p(p({},e),t)),a},d=function(t){var e=o(t.components);return r.a.createElement(c.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.a.createElement(r.a.Fragment,{},e)}},s=r.a.forwardRef((function(t,e){var a=t.components,n=t.mdxType,b=t.originalType,l=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),d=o(a),s=n,g=d["".concat(l,".").concat(s)]||d[s]||m[s]||b;return a?r.a.createElement(g,p(p({ref:e},c),{},{components:a})):r.a.createElement(g,p({ref:e},c))}));function g(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var b=a.length,l=new Array(b);l[0]=s;var p={};for(var i in e)hasOwnProperty.call(e,i)&&(p[i]=e[i]);p.originalType=t,p.mdxType="string"==typeof t?t:n,l[1]=p;for(var c=2;c<b;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}s.displayName="MDXCreateElement"}}]);